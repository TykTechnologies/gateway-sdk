openapi: 3.0.0
info:
  title: Tyk Gateway API
  description: |-
    The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.

    **Warning: Under no circumstances should outside parties be granted access to this API.**

    The Tyk Gateway API is capable of:

    * Managing session objects (key generation)
    * Managing and listing policies
    * Managing and listing API Definitions (only when not using the Dashboard)
    * Hot reloads / reloading a cluster configuration
    * OAuth client creation (only when not using the Dashboard)


    In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.

    The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:

    ```
    x-tyk-authorization: <your-secret>
    ```
    <br/>
    <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>
  version: 4.3.0
servers:
- url: http://localhost/
- url: https://localhost/
security:
- api_key: []
tags:
- name: Keys
  description: "All keys that are used to access services via Tyk correspond to a\
    \ session object that informs Tyk about the context of this particular token,\
    \ like access rules and rate/quota allowance."
- name: Policies
  description: A Tyk security policy incorporates several security options that can
    be applied to an API key. It acts as a template that can override individual sections
    of an API key (or identity) in Tyk.
- name: OAuth
  description: "Manage OAuth clients, and manage their tokens"
- name: Cache Invalidation
  description: "Sometimes a cache might contain stale data, or it may just need to\
    \ be cleared because of an invalid configuration. This call will purge all keys\
    \ associated with a cache on an API-by-API basis."
- name: Hot Reload
  description: Force restart of the Gateway or whole cluster
- name: Health Checking
  description: Check health check of the Gateway and loaded APIs
- name: Organisation Quotas
  description: |-
    It is possible to force API quota and rate limit across all keys that belong to a specific organisation ID. Rate limiting at an organisation level is useful for creating tiered access levels and trial accounts.
    The Organisation rate limiting middleware works with both Quotas and Rate Limiters. In order to manage this functionality, a simple API has been put in place to manage these sessions.
    Although the Organisation session-limiter uses the same session object, all other security keys are optional as they are not used.

    <h3>Managing active status</h3>
    To disallow access to an entire group of keys without rate limiting the organisation, create a session object with the "is_inactive" key set to true. This will block access before any other middleware is executed. It is useful when managing subscriptions for an organisation group and access needs to be blocked because of non-payment.
- name: Batch requests
  description: |-
    Tyk supports batch requests, so a client makes a single request to the API but gets a compound response object back.

    This is especially handy if clients have complex requests that have multiple synchronous dependencies and do not wish to have the entire request / response cycle running for each event.

    To enable batch request support, set the `enable_batch_request_support` value to `true`

    This is especially handy if clients have complex requests that have multiple synchronous dependencies and do not wish to have the entire request / response cycle running for each event.

    Batch requests that come into Tyk are *run through the whole Tyk machinery* and *use a relative path to prevent spamming*. This means that a batch request to Tyk for three resources with the same API key will have three requests applied to their session quota and request limiting could become active if they are being throttled.

    Tyk reconstructs the API request based on the data in the batch request. This is to ensure that Tyk is not being used to proxy requests to other hosts outside of the upstream API being accessed.

    Batch requests are created by POSTing to the `/{listen_path}/tyk/batch/` endpoint. These requests **do not require a valid key**, but their request list does.

    <h3>Sample Request</h3>

      ```{json}
      {
        "requests": [
          {
            "method": "GET",
            "headers": {
              "x-tyk-test": "1",
              "x-tyk-version": "1.2",
              "authorization": "1dbc83b9c431649d7698faa9797e2900f"
            },
            "body": "",
            "relative_url": "get"
        },
        {
          "method": "GET",
          "headers": {
            "x-tyk-test": "2",
            "x-tyk-version": "1.2",
            "authorization": "1dbc83b9c431649d7698faa9797e2900f"
          },
          "body": "",
          "relative_url": "get"
          }
        ],
        "suppress_parallel_execution": false
      }
      ```

    The response will will be a structured reply that encapsulates the responses for each of the outbound requests. If `suppress_parallel_execution` is set to `true`, requests will be made synchronously. If set to `false` then they will run in parallel and the response order is not guaranteed.

    <h3>Sample Response</h3>

    ```
    [
      {
        "relative_url": "get",
        "code": 200,
        "headers": {
          "Access-Control-Allow-Credentials": [
            "true"
          ],
          "Access-Control-Allow-Origin": [
            "*"
          ],
          "Content-Length": [
            "497"
          ],
          "Content-Type": [
            "application/json"
          ],
          "Date": [
            "Wed, 12 Nov 2014 15:32:43 GMT"
          ],
          "Server": [
            "gunicorn/18.0"
          ],
          "Via": [
            "1.1 vegur"
          ]
        },
        "body": "{
      "args": {},
      "headers": {
        "Accept-Encoding": "gzip",
        "Authorization": "1dbc83b9c431649d7698faa9797e2900f",
        "Connect-Time": "2",
        "Connection": "close",
        "Host": "httpbin.org",
        "Total-Route-Time": "0",
        "User-Agent": "Go 1.1 package http",
        "Via": "1.1 vegur",
        "X-Request-Id": "6a22499a-2776-4aa1-80c0-686581a8be4d",
        "X-Tyk-Test": "2",
        "X-Tyk-Version": "1.2"
      },
      "origin": "127.0.0.1, 62.232.114.250",
      "url": "http://httpbin.org/get"
    }"
        },
        {
          "relative_url": "get",
          "code": 200,
          "headers": {
            "Access-Control-Allow-Credentials": [
              "true"
            ],
            "Access-Control-Allow-Origin": [
              "*"
            ],
            "Content-Length": [
              "497"
            ],
            "Content-Type": [
              "application/json"
            ],
            "Date": [
              "Wed, 12 Nov 2014 15:32:43 GMT"
            ],
            "Server": [
              "gunicorn/18.0"
            ],
            "Via": [
              "1.1 vegur"
            ]
          },
          "body": "{
      "args": {},
      "headers": {
        "Accept-Encoding": "gzip",
        "Authorization": "1dbc83b9c431649d7698faa9797e2900f",
        "Connect-Time": "7",
        "Connection": "close",
        "Host": "httpbin.org",
        "Total-Route-Time": "0",
        "User-Agent": "Go 1.1 package http",
        "Via": "1.1 vegur",
        "X-Request-Id": "1ab61f50-51ff-4828-a7e2-17240385a6d2",
        "X-Tyk-Test": "1",
        "X-Tyk-Version": "1.2"
      },
      "origin": "127.0.0.1, 62.232.114.250",
      "url": "http://httpbin.org/get"
    }"
        }
    ]
    ```
    With the body for each request string encoded in the `body` field.

    * `expire_analytics_after`: If you are running a busy API, you may want to ensure that your MongoDB database does not overflow with old data. Set the `expire_analytics_after` value to the number of seconds you would like the data to last for. Setting this flag to anything above `0` will set an `expireAt` field for each record that is written to the database.

    **Important:** Tyk will not create the expiry index for you. In order to implement data expiry for your analytics data, ensure that the index is created This is easily achieved using the [MongoDB command line interface](https://docs.mongodb.com/getting-started/shell/client/).

    * `dont_set_quota_on_create`: This setting defaults to `false`, but if set to `true`, when the API is used to edit, create or add keys, the quota cache in Redis will not be re-set. By default, all updates or creates to Keys that have Quotas set will re-set the quota (This has been the default behaviour since 1.0).

      This behaviour can be bypassed on a case-by-case basis by using the `suppress_reset` parameter when making a REST API request. This is the advised mode of operation as it allows for manual, granular control over key quotas and reset timings.

    * `cache_options`: This section enables you to configure the caching behaviour of Tyk and to enable or disable the caching middleware for your API.

    * `cache_options.enable_cache`: Set this value to `true` if the cache should be enabled for this endpoint, setting it to false will stop all caching behaviour.

    * `cache_options.cache_timeout`: The amount of time, in seconds, to keep cached objects, defaults to `60` seconds.

    * `cache_options.cache_all_safe_requests`: Set this to `true` if you want all *safe* requests (GET, HEAD, OPTIONS) to be cached. This is a blanket setting for APIs where caching is required but you don't want to set individual paths up in the definition.

    * `cache_options.enable_upstream_cache_control`: Set this to `true` if you want your application to control the cache options for Tyk (TTL and whether to cache or not). See [Caching](/docs/basic-config-and-security/reduce-latency/caching/) for more details.

    * `response_processors`: Response processors need to be specifically defined so they are loaded on API creation, otherwise the middleware will not fire. In order to have the two main response middleware components fire, the following configuration object should be supplied.

    ```{json}
    "response_processors": [
      {
          "name": "header_injector",
          "options": {
              "add_headers": {"name": "value"},
              "remove_headers": ["name"]
          }
      },
      {
        "name": "response_body_transform",
        "options": {}
      }
    ]
    ```
    The options for the `header_injector` are global, and will apply to all outbound requests.
- name: APIs
  description: |-
    **Note: Applies only to Tyk Gateway Community Edition**

    API Management is very simple using the Tyk REST API: each update only affects the underlying file, and this endpoint will only work with disk based installations, not Database-backed ones.

    APIs that are added this way are flushed to to disk into the app_path folder using the format: `{api-id}.json`. Updating existing APIs that use a different naming convention will cause those APIs to be added, which could subsequently lead to a loading error and crash if they use the same listen_path.

    These methods only work on a single API node. If updating a cluster, it is important to ensure that all nodes are updated before initiating a reload.
paths:
  /tyk/apis:
    get:
      tags:
      - APIs
      description: |-
        List APIs
         Only if used without the Tyk Dashboard
      operationId: listApis
      responses:
        "200":
          description: List of API definitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIDefinition'
                x-content-type: application/json
              example:
              - name: TestAPI
                use_keyless: true
                active: true
                proxy:
                  listen_path: /test
    post:
      tags:
      - APIs
      description: |-
        Create API
         A single Tyk node can have its API Definitions queried, deleted and updated remotely. This functionality enables you to remotely update your Tyk definitions without having to manage the files manually.
      operationId: createApi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIDefinition'
            example:
              name: TestAPI
              use_keyless: true
              active: true
              proxy:
                listen_path: /test
      responses:
        "200":
          description: API created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: created
                key: "{...API JSON definition...}"
        "400":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: error
                message: Malformed API data
  /tyk/apis/oas:
    get:
      tags:
      - OASAPIs
      description: "List all OAS format APIs, when used without the Tyk Dashboard."
      operationId: listApisOAS
      parameters:
      - name: mode
        in: query
        description: "Mode of OAS get, by default mode could be empty which means\
          \ to get OAS spec including OAS Tyk extension. \nWhen mode=public, OAS spec\
          \ excluding Tyk extension will be returned in the response"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: public
      responses:
        "200":
          description: List of API definitions in OAS format
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OASSchemaResponse'
                x-content-type: application/json
    post:
      tags:
      - OASAPIs
      description: |-
        Create API with OAS format
         A single Tyk node can have its API Definitions queried, deleted and updated remotely. This functionality enables you to remotely update your Tyk definitions without having to manage the files manually.
      operationId: createApiOAS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          description: API created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: created
                key: "{...API JSON definition...}"
        "400":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: error
                message: Malformed API data
  /tyk/apis/{apiID}:
    get:
      tags:
      - APIs
      description: |-
        Get API definition
        Only if used without the Tyk Dashboard
      operationId: getApi
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: API definition
          headers:
            x-tyk-base-api-id:
              description: ID of the base API if the requested API is a version.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIDefinition'
              example:
                name: TestAPI
                use_keyless: true
                active: true
                proxy:
                  listen_path: /test
    put:
      tags:
      - APIs
      description: |
        Updating an API definition uses the same signature an object as a `POST`, however it will first ensure that the API ID that is being updated is the same as the one in the object being `PUT`.


        Updating will completely replace the file descriptor and will not change an API Definition that has already been loaded, the hot-reload endpoint will need to be called to push the new definition to live.
      operationId: updateApi
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIDefinition'
            example:
              name: TestAPI
              use_keyless: true
              active: true
              proxy:
                listen_path: /test
      responses:
        "200":
          description: API updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: updated
                key: "{...API JSON definition...}"
        "400":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: error
                message: Malformed API data
    delete:
      tags:
      - APIs
      description: "Deleting an API definition will remove the file from the file\
        \ store, the API definition will NOT be unloaded, a separate reload request\
        \ will need to be made to disable the API endpoint."
      operationId: deleteApi
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: API deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: API deleted
                status: ok
        "400":
          description: No API ID specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: API ID not specified
                status: error
  /tyk/apis/oas/{apiID}:
    get:
      tags:
      - OASAPIs
      description: |-
        Get API definition in OAS format
        Only if used without the Tyk Dashboard
      operationId: listApiOAS
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mode
        in: query
        description: "Mode of OAS get, by default mode could be empty which means\
          \ to get OAS spec including OAS Tyk extension. \nWhen mode=public, OAS spec\
          \ excluding Tyk extension will be returned in the response"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: public
      responses:
        "200":
          description: API definition
          headers:
            x-tyk-base-api-id:
              description: ID of the base API if the requested API is a version.
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASSchemaResponse'
    put:
      tags:
      - OASAPIs
      description: |
        Updating an API definition uses the same signature an object as a `POST`, however it will first ensure that the API ID that is being updated is the same as the one in the object being `PUT`.


        Updating will completely replace the file descriptor and will not change an API Definition that has already been loaded, the hot-reload endpoint will need to be called to push the new definition to live.
      operationId: updateApiOAS
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          description: API updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: updated
                key: "{...API JSON definition...}"
        "400":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: error
                message: Malformed API data
    delete:
      tags:
      - OASAPIs
      description: "Deleting an API definition will remove the file from the file\
        \ store, the API definition will NOT be unloaded, a separate reload request\
        \ will need to be made to disable the API endpoint."
      operationId: deleteOASApi
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: API deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: API deleted
                status: ok
        "400":
          description: No API ID specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: API ID not specified
                status: error
    patch:
      tags:
      - OASAPIs
      summary: Patch a single OAS API by ID
      description: |-
        Update API with OAS format. You can use this endpoint to update OAS part of the tyk API definition.
        This endpoint allows you to configure tyk OAS extension based on query params provided(similar to import)
      operationId: patchApiOAS
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: upstreamURL
        in: query
        description: Upstream URL for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: listenPath
        in: query
        description: Listen path for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customDomain
        in: query
        description: Custom domain for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: validateRequest
        in: query
        description: Enable validateRequest middleware for all endpoints having a
          request body with media type application/json
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      - name: allowList
        in: query
        description: Enable allowList middleware for all endpoints
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      - name: authentication
        in: query
        description: Enable or disable authentication in your Tyk Gateway as per your
          OAS document.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          description: API patched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: modified
                key: "{updated APIID}"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              examples:
                malformedBody:
                  summary: When the request body is malformed
                  value:
                    message: Request malformed
                    status: error
                missingAPIID:
                  summary: When the request is missing APIID in query Param
                  value:
                    message: Must specify an apiID to patch
                    status: error
                nonExistingAPIID:
                  summary: When the client sends and APIID which doesn't exists in
                    tyk gw
                  value:
                    message: "No API found for APIID {APIID}"
                    status: error
                invalidUpstreamURL:
                  summary: When the client sends query param upstreamURL which isn't
                    valid
                  value:
                    message: invalid upstream URL
                    status: error
        "500":
          description: When patch request is send while using dashboard app configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                summary: dashboard app configs is used for tyk api definitions
                value:
                  message: "Due to enabled use_db_app_configs, please use the Dashboard\
                    \ API"
                  status: error
  /tyk/apis/oas/{apiID}/export:
    get:
      tags:
      - OASAPIs
      description: "Download all OAS format APIs, when used without the Tyk Dashboard."
      operationId: downloadApiOASPublic
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mode
        in: query
        description: "Mode of OAS export, by default mode could be empty which means\
          \ to export OAS spec including OAS Tyk extension. \nWhen mode=public, OAS\
          \ spec excluding Tyk extension is exported"
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: public
      responses:
        "200":
          description: API definition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASSchemaResponse'
  /tyk/apis/oas/export:
    get:
      tags:
      - OASAPIs
      description: "Download all OAS format APIs, when used without the Tyk Dashboard."
      operationId: downloadApisOASPublic
      parameters:
      - name: mode
        in: query
        description: "The mode of OAS export. By default the mode is not set which\
          \ means the OAS spec is exported including the OAS Tyk extension.  \nIf\
          \ the mode is set to public, the OAS spec excluding the Tyk extension is\
          \ exported."
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: public
      responses:
        "200":
          description: API definition
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OASSchemaResponse'
                x-content-type: application/json
  /tyk/apis/oas/import:
    post:
      tags:
      - OASAPIs
      description: |-
        Create a new OAS format API, without x-tyk-gateway.
        For use with an existing OAS API that you want to expose via your Tyk Gateway. (New)
      operationId: importOAS
      parameters:
      - name: upstreamURL
        in: query
        description: Upstream URL for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: listenPath
        in: query
        description: Listen path for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: customDomain
        in: query
        description: Custom domain for the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: apiID
        in: query
        description: ID of the API
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: allowList
        in: query
        description: Enable allowList middleware for all endpoints
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      - name: validateRequest
        in: query
        description: Enable validateRequest middleware for all endpoints having a
          request body with media type application/json
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      - name: authentication
        in: query
        description: Enable or disable authentication in your Tyk Gateway as per your
          OAS document.
        required: false
        style: form
        explode: true
        schema:
          $ref: '#/components/schemas/BooleanQueryParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/schema'
      responses:
        "200":
          description: API definition created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                status: ok
                action: added
                key: "{created APIID}"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              examples:
                malformedBody:
                  summary: When the request body is malformed
                  value:
                    message: Request malformed
                    status: error
                invalidUpstreamURL:
                  summary: When the client sends a query param upstreamURL which isn't
                    valid
                  value:
                    message: invalid upstream URL
                    status: error
        "500":
          description: When an import request is sent using your Tyk Dashboard app
            configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                summary: Tyk Dashboard app configs are being used for Tyk API definitions
                value:
                  message: "Due to enabled use_db_app_configs, please use the Dashboard\
                    \ API"
                  status: error
  /tyk/cache/{apiID}:
    delete:
      tags:
      - Cache Invalidation
      summary: Invalidate cache
      description: Invalidate cache for the given API
      operationId: invalidateCache
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Invalidate cache
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: cache invalidated
                status: ok
  /tyk/reload/:
    get:
      tags:
      - Hot Reload
      summary: Hot-reload a single node
      description: "Tyk is capable of reloading configurations without having to stop\
        \ serving requests. This means that API configurations can be added at runtime,\
        \ or even modified at runtime and those rules applied immediately without\
        \ any downtime."
      operationId: hotReload
      parameters:
      - name: block
        in: query
        description: Block a response until the reload is performed. This can be useful
          in scripting environments like CI/CD workflows.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          enum:
          - true
      responses:
        "200":
          description: Reload gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: ok
  /tyk/reload/group:
    get:
      tags:
      - Hot Reload
      summary: Hot-reload a Tyk group
      description: "To reload a whole group of Tyk nodes (without using the Dashboard\
        \ or host manager). You can send an API request to a single node, this node\
        \ will then send a notification through the pub/sub infrastructure to all\
        \ other listening nodes (including the host manager if it is being used to\
        \ manage NginX) which will then trigger a global reload."
      operationId: hotReloadGroup
      responses:
        "200":
          description: Reload the Tyk Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                status: ok
  /tyk/hello:
    get:
      tags:
      - Health Checking
      summary: Check the Health of the Tyk Gateway
      description: |
        From v2.7.5 you can now rename the `/hello`  endpoint by using the `health_check_endpoint_name` option

        Returns 200 response in case of success
      operationId: hello
      responses:
        "200":
          description: Success
          content:
            text/html:
              schema:
                type: string
                x-content-type: text/html
              example: Hello Tiki
  /tyk/{listenPath}/hello:
    get:
      tags:
      - Health Checking
      summary: Check the Health of the API
      description: Should point to API domain if it has its own
      operationId: helloAPI
      parameters:
      - name: listenPath
        in: path
        description: Listen path of loaded API
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success
          content:
            text/html:
              schema:
                type: string
                x-content-type: text/html
              example: Hello Tiki
  /tyk/certs:
    get:
      tags:
      - Certs
      summary: List Certificates
      description: List All Certificates in the Tyk Gateway
      operationId: listCerts
      parameters:
      - name: org_id
        in: query
        description: Organisation ID to list the certificates
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: mode
        in: query
        description: Mode to list the certificate details
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: detailed
      - name: certID
        in: query
        description: Comma separated list of certificates to list
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: "e6ce2b49-3e31-44de-95a7-12f054724283,234a37ac-28d1-4f12-b936-ffb4211b79f1"
      responses:
        "200":
          description: List of all Certificates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
    post:
      tags:
      - Certs
      summary: Add a certificate
      description: Add a certificate to the Tyk Gateway
      operationId: addCert
      parameters:
      - name: org_id
        in: query
        description: Organisation ID to list the certificates
        required: true
        style: form
        explode: true
        schema:
          type: string
      requestBody:
        content:
          text/plain:
            schema:
              type: string
      responses:
        "200":
          description: New Key added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APICertificateStatusMessage'
              example:
                id: e6ce2b49-3e31-44de-95a7-12f054724283
                message: Certificate added
                status: ok
        "403":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Malformed cert data
                status: error
    delete:
      tags:
      - Certs
      summary: Delete Certificate
      description: Delete certificate by id
      operationId: deleteCerts
      parameters:
      - name: certID
        in: query
        description: Certifiicate ID to be deleted
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: org_id
        in: query
        description: Organisation ID to list the certificates
        required: true
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: Deleted certificate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: removed
                status: ok
  /tyk/keys:
    get:
      tags:
      - Keys
      summary: List Keys
      description: You can retrieve all the keys in your Tyk instance. Returns an
        array of Key IDs.
      operationId: listKeys
      responses:
        "200":
          description: List of all API keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiAllKeys'
    post:
      tags:
      - Keys
      summary: Create a key
      description: |-
        Tyk will generate the access token based on the OrgID specified in the API Definition and a random UUID. This ensures that keys can be "owned" by different API Owners should segmentation be needed at an organisational level.
        <br/><br/>
        API keys without access_rights data will be written to all APIs on the system (this also means that they will be created across all SessionHandlers and StorageHandlers, it is recommended to always embed access_rights data in a key to ensure that only targeted APIs and their back-ends are written to.
      operationId: addKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionState'
            example:
              quota_max: 60
              quota_renews: 1406121006
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: New Key added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: created
                key: "{...KEY JSON definition...}"
                status: ok
        "400":
          description: Malformed data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Malformed Key data
                status: error
  /tyk/keys/{keyID}:
    get:
      tags:
      - Keys
      summary: Get a Key
      description: Get session info about the specified key. Should return up to date
        rate limit and quota usage numbers.
      operationId: getKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Key object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionState'
              example:
                quota_max: 60
                quota_renews: 1406121006
                quota_renewal_rate: 60
                allowance: 100
                rate: 100
                per: 5
                org_id: 53ac07777cbb8c2d53000002
    put:
      tags:
      - Keys
      summary: Update Key
      description: You can also manually add keys to Tyk using your own key-generation
        algorithm. It is recommended if using this approach to ensure that the OrgID
        being used in the API Definition and the key data is blank so that Tyk does
        not try to prepend or manage the key in any way.
      operationId: updateKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: suppress_reset
        in: query
        description: "Adding the suppress_reset parameter and setting it to 1, will\
          \ cause Tyk not to reset the quota limit that is in the current live quota\
          \ manager. By default Tyk will reset the quota in the live quota manager\
          \ (initialising it) when adding a key. Adding the `suppress_reset` flag\
          \ to the URL parameters will avoid this behaviour."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionState'
            example:
              quota_max: 60
              quota_renews: 1406121006
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: Key updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: updated
                status: ok
        "400":
          description: No or incorrect Key ID specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Key ID not specified
                status: error
    post:
      tags:
      - Keys
      summary: Create Custom Key / Import Key
      description: |-
        You can use the `POST /tyk/keys/{KEY_ID}` endpoint as defined below to import existing keys into Tyk.

        This example uses standard `authorization` header authentication, and assumes that the Gateway is located at `127.0.0.1:8080` and the Tyk secret is `352d20ee67be67f6340b4c0605b044b7` - update these as necessary to match your environment.

        To import a key called `mycustomkey`, save the JSON contents as `token.json` (see example below), then run the following Curl command.

        ```
        curl http://127.0.0.1:8080/tyk/keys/mycustomkey -H 'x-tyk-authorization: 352d20ee67be67f6340b4c0605b044b7' -H 'Content-Type: application/json'  -d @token.json
        ```

        The following request will fail as the key doesn't exist.

        ```
        curl http://127.0.0.1:8080/quickstart/headers -H 'Authorization. invalid123'
        ```

        But this request will now work, using the imported key.

        ```
        curl http://127.0.0.1:8080/quickstart/headers -H 'Authorization: mycustomkey'
        ```

        <h4>Example token.json file<h4>

        ```
        {
          "allowance": 1000,
          "rate": 1000,
          "per": 60,
          "expires": -1,
          "quota_max": -1,
          "quota_renews": 1406121006,
          "quota_remaining": 0,
          "quota_renewal_rate": 60,
          "access_rights": {
            "3": {
              "api_name": "Tyk Test API",
              "api_id": "3"
            }
          },
          "org_id": "53ac07777cbb8c2d53000002",
          "basic_auth_data": {
            "password": "",
            "hash_type": ""
          },
          "hmac_enabled": false,
          "hmac_string": "",
          "is_inactive": false,
          "apply_policy_id": "",
          "apply_policies": [
            "59672779fa4387000129507d",
            "53222349fa4387004324324e",
            "543534s9fa4387004324324d"
            ],
          "monitor": {
            "trigger_limits": []
          }
        }
        ```
      operationId: createCustomKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: suppress_reset
        in: query
        description: "Adding the suppress_reset parameter and setting it to 1, will\
          \ cause Tyk not to reset the quota limit that is in the current live quota\
          \ manager. By default Tyk will reset the quota in the live quota manager\
          \ (initialising it) when adding a key. Adding the `suppress_reset` flag\
          \ to the URL parameters will avoid this behaviour."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionState'
            example:
              quota_max: 60
              quota_renews: 1406121006
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: Key updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: updated
                status: ok
        "400":
          description: No or incorrect Key ID specified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Key ID not specified
                status: error
    delete:
      tags:
      - Keys
      summary: Delete Key
      description: "Deleting a key will remove it permanently from the system, however\
        \ analytics relating to that key will still be available."
      operationId: deleteKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Key deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                action: Key deleted
                status: ok
  /tyk/policies:
    get:
      tags:
      - Policies
      summary: List Policies
      description: You can retrieve all the policies in your Tyk instance. Returns
        an array policies.
      operationId: listPolicies
      responses:
        "200":
          description: List of all policies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Policy'
                x-content-type: application/json
    post:
      tags:
      - Policies
      summary: Create a Policy
      description: You can create a Policy in your Tyk Instance
      operationId: addPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
            example:
              name: new policy
              quota_max: 60
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: Policy created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: created
                status: ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Request malformed
                status: error
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Failed to create file!
                status: error
  /tyk/policies/{polID}:
    get:
      tags:
      - Policies
      summary: Get a Policy
      description: You can retrieve details of a single policy by ID in your Tyk instance.
        Returns an array policies.
      operationId: getPolicy
      parameters:
      - name: polID
        in: path
        description: The policy ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get details of a single Policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
        "404":
          description: Policy not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Policy not found
                status: error
    put:
      tags:
      - Policies
      summary: Update a Policy
      description: You can update a Policy in your Tyk Instance by ID
      operationId: updatePolicy
      parameters:
      - name: polID
        in: path
        description: The policy ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
            example:
              name: new policy
              quota_max: 60
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: Policy updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: updated
                status: ok
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: PUT operation on different IDs
                status: error
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Failed to create file!
                status: error
    delete:
      tags:
      - Policies
      summary: Delete a Policy
      description: Delete a policy by ID in your Tyk instance.
      operationId: deletePolicy
      parameters:
      - name: polID
        in: path
        description: The policy ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Delete policy by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: deleted
                status: ok
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                message: Delete failed
                status: error
  /tyk/oauth/clients/create:
    post:
      tags:
      - OAuth
      summary: Create new OAuth client
      description: Any OAuth keys must be generated with the help of a client ID.
        These need to be pre-registered with Tyk before they can be used (in a similar
        vein to how you would register your app with Twitter before attempting to
        ask user permissions using their API). <br/><br/> <h3>Creating OAuth clients
        with Access to Multiple APIs</h3> New from Tyk Gateway 2.6.0 is the ability
        to create OAuth clients with access to more than one API. If you provide the
        api_id it works the same as in previous releases. If you don't provide the
        api_id the request uses policy access rights and enumerates APIs from their
        setting in the newly created OAuth-client.
      operationId: createOAuthClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewClientRequest'
            example:
              client_id: test
              api_id: id
              policy_id: policy
      responses:
        "200":
          description: Client created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewClientRequest'
              example:
                client_id: test
                api_id: id
                policy_id: policy
  /tyk/oauth/clients/{apiID}:
    get:
      tags:
      - OAuth
      summary: List oAuth clients
      description: "OAuth Clients are organised by API ID, and therefore are queried\
        \ as such."
      operationId: listOAuthClients
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get OAuth client details or a list of OAuth clients
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewClientRequest'
                x-content-type: application/json
    put:
      tags:
      - OAuth
      summary: Update OAuth metadata and Policy ID
      description: Allows you to update the metadata and Policy ID for an OAuth client.
      operationId: updateoAuthClient
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OAuth client metadata updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewClientRequest'
                x-content-type: application/json
  /tyk/oauth/clients/{apiID}/{keyName}:
    get:
      tags:
      - OAuth
      summary: Get OAuth client
      operationId: getOAuthClient
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: string
      - name: keyName
        in: path
        description: The Client ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get OAuth client details or a list of OAuth clients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewClientRequest'
              example:
                client_id: test
                api_id: id
                policy_id: policy
    delete:
      tags:
      - OAuth
      summary: Delete OAuth client
      description: Please note that tokens issued with the client ID will still be
        valid until they expire.
      operationId: deleteOAuthClient
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: string
      - name: keyName
        in: path
        description: The Client ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OAuth client deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: deleted
                status: ok
  /tyk/oauth/clients/{apiID}/{keyName}/tokens:
    get:
      tags:
      - OAuth
      summary: List tokens
      description: "This endpoint allows you to retrieve a list of all current tokens\
        \ and their expiry date for a provided API ID and OAuth-client ID in the following\
        \ format. This endpoint will work only for newly created tokens. <br/> <br/>\
        \ You can control how long you want to store expired tokens in this list using\
        \ `oauth_token_expired_retain_period` gateway option, which specifies retain\
        \ period for expired tokens stored in Redis. By default expired token not\
        \ get removed. See <a href=\"https://tyk.io/docs/configure/tyk-gateway-configuration-options/#a-name-oauth-token-expired-retain-period-a-oauth-token-expired-retain-period\"\
        \ target=\"_blank\">here</a> for more details."
      operationId: getOAuthClientTokens
      parameters:
      - name: apiID
        in: path
        description: The API ID
        required: true
        style: simple
        explode: false
        schema:
          minimum: 1
          type: string
      - name: keyName
        in: path
        description: The Client ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Get a list of tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                x-content-type: application/json
              example:
              - tok1
              - tok2
  /tyk/oauth/revoke:
    post:
      tags:
      - OAuth
      summary: revoke token
      description: revoke a single token
      operationId: revokeSingleToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/oauth_revoke_body'
            example:
              token: eyJvcmciOiI1ZTIwOTFjNGQ0YWVmY2U2MGMwNGZiOTIiLCJpZCI6ImJlMjlhYjVkODc1OTRhZDJhYTBhNjAwNzFlNzE1ZmQxIiwiaCI6Im11cm11cjY0In0=
              client_id: 411f0800957c4a3e81fe181141dbc22a
        required: true
      responses:
        "200":
          description: Succesful response
  /tyk/oauth/revoke_all:
    post:
      tags:
      - OAuth
      summary: revoke all client's tokens
      description: revoke all the tokens for a given oauth client
      operationId: revokeAllTokens
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/oauth_revoke_all_body'
            example:
              client_id: 411f0800957c4a3e81fe181141dbc22a
              client_secret: N2Y0YjgzMjctMTEwNi00YWExLWJjM2MtYjg1NWZhM2M1NmNj
        required: true
      responses:
        "200":
          description: Succesful response
        "400":
          description: "Bad request, form malformed or client secret and client id\
            \ doesn't match"
        "404":
          description: oauth client doesn't have any api related
  /tyk/oauth/refresh/{keyName}:
    delete:
      tags:
      - OAuth
      summary: Invalidate OAuth refresh token
      description: It is possible to invalidate refresh tokens in order to manage
        OAuth client access more robustly.
      operationId: invalidateOAuthRefresh
      parameters:
      - name: api_id
        in: query
        description: The API id
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: keyName
        in: path
        description: Refresh token
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
  /tyk/oauth/authorize-client/:
    post:
      tags:
      - OAuth
      summary: Authorize client
      description: "With the OAuth flow you will need to create authorisation or access\
        \ tokens for your clients, in order to do this, Tyk provides a private API\
        \ endpoint for your application to generate these codes and redirect the end-user\
        \ back to the API Client."
      operationId: authorizeClient
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/oauth_authorizeclient_body'
            example:
              response_type: code
              client_id: 21e2baf424674f6461faca6d45285bbb
              redirect_uri: http%3A%2F%2Foauth.com%2Fredirect
              key_rules: '%7B+++++%22allowance%22%3A+999%2C+++++%22rate%22%3A+1000%2C+++++%22per%22%3A+60%2C+++++%22expires%22%3A+0%2C+++++%22quota_max%22%3A+-1%2C+++++%22quota_renews%22%3A+1406121006%2C+++++%22quota_remaining%22%3A+0%2C+++++%22quota_renewal_rate%22%3A+60%2C+++++%22access_rights%22%3A+%7B+++++++++%22528a67c1ac9940964f9a41ae79235fcc%22%3A+%7B+++++++++++++%22api_name%22%3A+%22OAuth+Test+API%22%2C+++++++++++++%22api_id%22%3A+%22528a67c1ac9940964f9a41ae79235fcc%22%2C+++++++++++++%22versions%22%3A+%5B+++++++++++++++++%22Default%22+++++++++++++%5D+++++++++%7D+++++%7D%2C+++++%22org_id%22%3A+%2253ac07777cbb8c2d53000002%22+%7D'
        required: true
      responses:
        "200":
          description: Succesful response
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
              example:
                code: MWY0ZDRkMzktOTYwNi00NDRiLTk2YmQtOWQxOGQ3Mjc5Yzdk
                redirect_to: http://client-app.com/oauth-redirect/?code=MWY0ZDRkMzktOTYwNi00NDRiLTk2YmQtOWQxOGQ3Mjc5Yzdk
  /tyk/org/keys:
    get:
      tags:
      - Organisation Quotas
      summary: List Organisation Keys
      description: "You can now set rate limits at the organisation level by using\
        \ the following fields - allowance and rate. These are the number of allowed\
        \ requests for the specified per value, and need to be set to the same value.\
        \ If you don't want to have organisation level rate limiting, set 'rate' or\
        \ 'per' to zero, or don't add them to your request."
      operationId: listOrgKeys
      responses:
        "200":
          description: List of all API keys
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
              example:
                keys:
                - key1
                - key2
  /tyk/org/keys/{keyID}:
    get:
      tags:
      - Organisation Quotas
      summary: Get an Organisation Key
      description: Get session info about specified orgnanisation key. Should return
        up to date rate limit and quota usage numbers.
      operationId: getOrgKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Key object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionState'
    put:
      tags:
      - Organisation Quotas
      summary: Update Organisation Key
      description: |-
        This work similar to Keys API except that Key ID is always equals Organisation ID

        For Gateway v2.6.0 onwards, you can now set rate limits at the organisation level by using the following fields - allowance and rate. These are the number of allowed requests for the specified per value, and need to be set to the same value. If you don't want to have organisation level rate limiting, set `rate` or `per` to zero, or don't add them to your request.
      operationId: updateOrgKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reset_quota
        in: query
        description: "Adding the `reset_quota` parameter and setting it to 1, will\
          \ cause Tyk reset the organisations quota in the live quota manager, it\
          \ is recommended to use this mechanism to reset organisation-level access\
          \ if a monthly subscription is in place."
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "1"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionState'
            example:
              quota_max: 60
              quota_renews: 1406121006
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: Key updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: updated
                status: ok
    post:
      tags:
      - Organisation Quotas
      summary: Create an organisation key
      description: This work similar to Keys API except that Key ID is always equals
        Organisation ID
      operationId: addOrgKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionState'
            example:
              quota_max: 60
              quota_renews: 1406121006
              quota_renewal_rate: 60
              allowance: 100
              rate: 100
              per: 5
              org_id: 53ac07777cbb8c2d53000002
      responses:
        "200":
          description: New Key added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiModifyKeySuccess'
              example:
                action: created
                key: "{...KEY JSON definition...}"
                status: ok
    delete:
      tags:
      - Organisation Quotas
      summary: Delete Organisation Key
      description: Deleting a key will remove all limits from organisation. It does
        not affects regualar keys created within organisation.
      operationId: deleteOrgKey
      parameters:
      - name: keyID
        in: path
        description: The Key ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Key deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/apiStatusMessage'
              example:
                action: Key deleted
                status: ok
  /{listen_path}/tyk/batch:
    post:
      tags:
      - Batch requests
      summary: Run batch request
      operationId: batch
      parameters:
      - name: listen_path
        in: path
        description: API listen path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          $ref: '#/components/schemas/apiStatusMessage'
  /tyk/schema:
    get:
      tags:
      - Schema
      description: Get OAS schema
      operationId: getSchema
      parameters:
      - name: oasVersion
        in: query
        description: The OAS version
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OAS schema response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASSchemaResponse'
              example:
                status: Success
                schema: <open api 3.0.3 schema>
        "400":
          description: The response when the parameter oasVersion is missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASSchemaResponse'
              example:
                message: Should provide a value for parameter oasVersion
                status: Failed
        "404":
          description: The response when the requested OAS schema is not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OASSchemaResponse'
              example:
                message: Schema not found for version 5.0.0
                status: Failed
components:
  schemas:
    APIDefinition:
      title: APIDefinition represents the configuration for a single proxied API and
        it's versions.
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        CORS:
          $ref: '#/components/schemas/APIDefinition_CORS'
        active:
          type: boolean
          x-go-name: Active
        allowed_ips:
          type: array
          items:
            type: string
          x-go-name: AllowedIPs
        api_id:
          type: string
          x-go-name: APIID
        auth:
          $ref: '#/components/schemas/Auth'
        auth_provider:
          $ref: '#/components/schemas/AuthProviderMeta'
        base_identity_provided_by:
          $ref: '#/components/schemas/AuthTypeEnum'
        basic_auth:
          $ref: '#/components/schemas/APIDefinition_basic_auth'
        blacklisted_ips:
          type: array
          items:
            type: string
          x-go-name: BlacklistedIPs
        cache_options:
          $ref: '#/components/schemas/CacheOptions'
        certificates:
          type: array
          items:
            type: string
          x-go-name: Certificates
        client_certificates:
          type: array
          items:
            type: string
          x-go-name: ClientCertificates
        config_data:
          type: object
          additionalProperties:
            type: object
          x-go-name: ConfigData
        custom_middleware:
          $ref: '#/components/schemas/MiddlewareSection'
        custom_middleware_bundle:
          type: string
          x-go-name: CustomMiddlewareBundle
        definition:
          $ref: '#/components/schemas/APIDefinition_definition'
        disable_quota:
          type: boolean
          x-go-name: DisableQuota
        disable_rate_limit:
          type: boolean
          x-go-name: DisableRateLimit
        do_not_track:
          type: boolean
          x-go-name: DoNotTrack
        domain:
          type: string
          x-go-name: Domain
        dont_set_quota_on_create:
          type: boolean
          x-go-name: DontSetQuotasOnCreate
        enable_batch_request_support:
          type: boolean
          x-go-name: EnableBatchRequestSupport
        enable_context_vars:
          type: boolean
          x-go-name: EnableContextVars
        enable_coprocess_auth:
          type: boolean
          x-go-name: EnableCoProcessAuth
        enable_ip_blacklisting:
          type: boolean
          x-go-name: EnableIpBlacklisting
        enable_ip_whitelisting:
          type: boolean
          x-go-name: EnableIpWhiteListing
        enable_jwt:
          type: boolean
          x-go-name: EnableJWT
        enable_signature_checking:
          type: boolean
          x-go-name: EnableSignatureChecking
        event_handlers:
          $ref: '#/components/schemas/EventHandlerMetaConfig'
        expire_analytics_after:
          type: integer
          format: int64
          x-go-name: ExpireAnalyticsAfter
        global_rate_limit:
          $ref: '#/components/schemas/GlobalRateLimit'
        hmac_allowed_algorithms:
          type: array
          items:
            type: string
          x-go-name: HmacAllowedAlgorithms
        hmac_allowed_clock_skew:
          type: number
          format: double
          x-go-name: HmacAllowedClockSkew
        id:
          $ref: '#/components/schemas/ObjectId'
        internal:
          type: boolean
          x-go-name: Internal
        jwt_client_base_field:
          type: string
          x-go-name: JWTClientIDBaseField
        jwt_expires_at_validation_skew:
          type: integer
          format: uint64
          x-go-name: JWTExpiresAtValidationSkew
        jwt_identity_base_field:
          type: string
          x-go-name: JWTIdentityBaseField
        jwt_issued_at_validation_skew:
          type: integer
          format: uint64
          x-go-name: JWTIssuedAtValidationSkew
        jwt_not_before_validation_skew:
          type: integer
          format: uint64
          x-go-name: JWTNotBeforeValidationSkew
        jwt_policy_field_name:
          type: string
          x-go-name: JWTPolicyFieldName
        jwt_scope_claim_name:
          type: string
          x-go-name: JWTScopeClaimName
        jwt_scope_to_policy_mapping:
          type: object
          additionalProperties:
            type: string
          x-go-name: JWTScopeToPolicyMapping
        jwt_signing_method:
          type: string
          x-go-name: JWTSigningMethod
        jwt_skip_kid:
          type: boolean
          x-go-name: JWTSkipKid
        jwt_source:
          type: string
          x-go-name: JWTSource
        name:
          type: string
          x-go-name: Name
        notifications:
          $ref: '#/components/schemas/NotificationsManager'
        oauth_meta:
          $ref: '#/components/schemas/APIDefinition_oauth_meta'
        openid_options:
          $ref: '#/components/schemas/OpenIDOptions'
        org_id:
          type: string
          x-go-name: OrgID
        pinned_public_keys:
          type: object
          additionalProperties:
            type: string
          x-go-name: PinnedPublicKeys
        proxy:
          $ref: '#/components/schemas/APIDefinition_proxy'
        response_processors:
          type: array
          items:
            $ref: '#/components/schemas/ResponseProcessor'
          x-go-name: ResponseProcessors
        session_lifetime:
          type: integer
          format: int64
          x-go-name: SessionLifetime
        session_provider:
          $ref: '#/components/schemas/SessionProviderMeta'
        slug:
          type: string
          x-go-name: Slug
        strip_auth_data:
          type: boolean
          x-go-name: StripAuthData
        tag_headers:
          type: array
          items:
            type: string
          x-go-name: TagHeaders
        upstream_certificates:
          type: object
          additionalProperties:
            type: string
          x-go-name: UpstreamCertificates
        uptime_tests:
          $ref: '#/components/schemas/APIDefinition_uptime_tests'
        use_basic_auth:
          type: boolean
          x-go-name: UseBasicAuth
        use_keyless:
          type: boolean
          x-go-name: UseKeylessAccess
        use_mutual_tls_auth:
          type: boolean
          x-go-name: UseMutualTLSAuth
        use_oauth2:
          type: boolean
          x-go-name: UseOauth2
        use_openid:
          type: boolean
          x-go-name: UseOpenID
        use_standard_auth:
          type: boolean
          x-go-name: UseStandardAuth
        version_data:
          $ref: '#/components/schemas/APIDefinition_version_data'
      example:
        api_id: api_id
        session_lifetime: 6
        config_data:
          key: {}
        auth:
          auth_header_name: auth_header_name
          use_param: true
          signature:
            allowed_clock_skew: 6
            error_message: error_message
            header: header
            error_code: 1
            secret: secret
            algorithm: algorithm
          use_certificate: true
          use_cookie: true
          validate_signature: true
          param_name: param_name
          cookie_name: cookie_name
        jwt_not_before_validation_skew: 1
        jwt_policy_field_name: jwt_policy_field_name
        jwt_signing_method: jwt_signing_method
        use_standard_auth: true
        pinned_public_keys:
          key: pinned_public_keys
        openid_options:
          segregate_by_client: true
          providers:
          - client_ids:
              key: client_ids
            issuer: issuer
          - client_ids:
              key: client_ids
            issuer: issuer
        jwt_skip_kid: true
        hmac_allowed_clock_skew: 2.027123023002322
        tag_headers:
        - tag_headers
        - tag_headers
        enable_context_vars: true
        global_rate_limit:
          rate: 3.616076749251911
          per: 9.301444243932576
        jwt_identity_base_field: jwt_identity_base_field
        id: id
        enable_ip_blacklisting: true
        jwt_scope_to_policy_mapping:
          key: jwt_scope_to_policy_mapping
        expire_analytics_after: 7
        dont_set_quota_on_create: true
        slug: slug
        hmac_allowed_algorithms:
        - hmac_allowed_algorithms
        - hmac_allowed_algorithms
        custom_middleware_bundle: custom_middleware_bundle
        allowed_ips:
        - allowed_ips
        - allowed_ips
        jwt_issued_at_validation_skew: 7
        client_certificates:
        - client_certificates
        - client_certificates
        response_processors:
        - name: name
          options: {}
        - name: name
          options: {}
        active: true
        custom_middleware:
          id_extractor:
            extractor_config:
              key: {}
            extract_from: extract_from
            extract_with: extract_with
          pre:
          - null
          - null
          driver: driver
          post:
          - null
          - null
          response:
          - null
          - null
          auth_check:
            path: path
            require_session: true
            name: name
          post_key_auth:
          - null
          - null
        tags:
        - tags
        - tags
        proxy:
          check_host_against_uptime_tests: true
          enable_load_balancing: true
          target_list:
          - target_list
          - target_list
          preserve_host_header: true
          disable_strip_slash: true
          listen_path: listen_path
          target_url: target_url
          service_discovery:
            parent_data_path: parent_data_path
            query_endpoint: query_endpoint
            use_nested_query: true
            cache_timeout: 1
            use_discovery_service: true
            port_data_path: port_data_path
            use_target_list: true
            endpoint_returns_list: true
            target_path: target_path
            data_path: data_path
          strip_listen_path: true
          transport:
            ssl_min_version: 1
            ssl_insecure_skip_verify: true
            proxy_url: proxy_url
            ssl_ciphers:
            - ssl_ciphers
            - ssl_ciphers
        CORS:
          max_age: 0
          allowed_methods:
          - allowed_methods
          - allowed_methods
          allowed_headers:
          - allowed_headers
          - allowed_headers
          debug: true
          enable: true
          options_passthrough: true
          allow_credentials: true
          exposed_headers:
          - exposed_headers
          - exposed_headers
          allowed_origins:
          - allowed_origins
          - allowed_origins
        certificates:
        - certificates
        - certificates
        jwt_client_base_field: jwt_client_base_field
        org_id: org_id
        domain: domain
        base_identity_provided_by: base_identity_provided_by
        name: name
        cache_options:
          cache_all_safe_requests: true
          enable_upstream_cache_control: true
          enable_cache: true
          cache_timeout: 2
          cache_response_codes:
          - 5
          - 5
          cache_control_ttl_header: cache_control_ttl_header
        enable_ip_whitelisting: true
        jwt_expires_at_validation_skew: 4
        notifications:
          oauth_on_keychange_url: oauth_on_keychange_url
          shared_secret: shared_secret
        use_oauth2: true
        internal: true
        use_keyless: true
        use_mutual_tls_auth: true
        use_openid: true
        oauth_meta:
          allowed_authorize_types:
          - allowed_authorize_types
          - allowed_authorize_types
          auth_login_redirect: auth_login_redirect
          allowed_access_types:
          - allowed_access_types
          - allowed_access_types
        enable_batch_request_support: true
        session_provider:
          meta:
            key: {}
          name: name
          storage_engine: null
        do_not_track: true
        disable_quota: true
        jwt_scope_claim_name: jwt_scope_claim_name
        jwt_source: jwt_source
        enable_signature_checking: true
        enable_jwt: true
        definition:
          location: location
          key: key
          strip_path: true
        strip_auth_data: true
        basic_auth:
          body_user_regexp: body_user_regexp
          cache_ttl: 5
          body_password_regexp: body_password_regexp
          disable_caching: true
          extract_from_body: true
        event_handlers:
          events: ""
        blacklisted_ips:
        - blacklisted_ips
        - blacklisted_ips
        upstream_certificates:
          key: upstream_certificates
        disable_rate_limit: true
        enable_coprocess_auth: true
        version_data:
          versions:
            key:
              extended_paths:
                circuit_breakers:
                - path: path
                  threshold_percent: 6.683562403749608
                  method: method
                  return_to_service_after: 9
                  samples: 9
                - path: path
                  threshold_percent: 6.683562403749608
                  method: method
                  return_to_service_after: 9
                  samples: 9
                do_not_track_endpoints:
                - path: path
                  method: method
                - path: path
                  method: method
                ignored:
                - null
                - null
                cache:
                - cache
                - cache
                internal:
                - path: path
                  method: method
                - path: path
                  method: method
                method_transforms:
                - path: path
                  method: method
                  to_method: to_method
                - path: path
                  method: method
                  to_method: to_method
                transform_jq:
                - filter: filter
                  path: path
                  method: method
                - filter: filter
                  path: path
                  method: method
                virtual:
                - path: path
                  proxy_on_error: true
                  method: method
                  response_function_name: response_function_name
                  function_source_uri: function_source_uri
                  use_session: true
                  function_source_type: function_source_type
                - path: path
                  proxy_on_error: true
                  method: method
                  response_function_name: response_function_name
                  function_source_uri: function_source_uri
                  use_session: true
                  function_source_type: function_source_type
                transform_jq_response:
                - null
                - null
                validate_json:
                - schema:
                    key: {}
                  path: path
                  error_response_code: 6
                  method: method
                  schema_b64: schema_b64
                - schema:
                    key: {}
                  path: path
                  error_response_code: 6
                  method: method
                  schema_b64: schema_b64
                black_list:
                - path: path
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 5
                      data: data
                      action: action
                - path: path
                  method_actions:
                    key:
                      headers:
                        key: headers
                      code: 5
                      data: data
                      action: action
                transform_headers:
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  delete_headers:
                  - delete_headers
                  - delete_headers
                - path: path
                  add_headers:
                    key: add_headers
                  act_on: true
                  method: method
                  delete_headers:
                  - delete_headers
                  - delete_headers
                advance_cache_config:
                - cache_key_regex: cache_key_regex
                  path: path
                  method: method
                  cache_response_codes:
                  - 4
                  - 4
                - cache_key_regex: cache_key_regex
                  path: path
                  method: method
                  cache_response_codes:
                  - 4
                  - 4
                transform_response_headers:
                - null
                - null
                white_list:
                - null
                - null
                transform:
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                - path: path
                  template_data:
                    template_source: template_source
                    input_type: input_type
                    template_mode: template_mode
                    enable_session: true
                  method: method
                size_limits:
                - path: path
                  method: method
                  size_limit: 9
                - path: path
                  method: method
                  size_limit: 9
                transform_response:
                - null
                - null
                track_endpoints:
                - null
                - null
                hard_timeouts:
                - path: path
                  method: method
                  timeout: 8
                - path: path
                  method: method
                  timeout: 8
                url_rewrites:
                - match_pattern: match_pattern
                  path: path
                  method: method
                  MatchRegexp:
                    FromCache: true
                  rewrite_to: rewrite_to
                  triggers:
                  - options:
                      path_part_matches:
                        key: null
                      query_val_matches:
                        key: null
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key: null
                      session_meta_matches:
                        key: null
                      payload_matches: null
                    rewrite_to: rewrite_to
                    "on": "on"
                  - options:
                      path_part_matches:
                        key: null
                      query_val_matches:
                        key: null
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key: null
                      session_meta_matches:
                        key: null
                      payload_matches: null
                    rewrite_to: rewrite_to
                    "on": "on"
                - match_pattern: match_pattern
                  path: path
                  method: method
                  MatchRegexp:
                    FromCache: true
                  rewrite_to: rewrite_to
                  triggers:
                  - options:
                      path_part_matches:
                        key: null
                      query_val_matches:
                        key: null
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key: null
                      session_meta_matches:
                        key: null
                      payload_matches: null
                    rewrite_to: rewrite_to
                    "on": "on"
                  - options:
                      path_part_matches:
                        key: null
                      query_val_matches:
                        key: null
                      header_matches:
                        key:
                          match_rx: match_rx
                          reverse: true
                      request_context_matches:
                        key: null
                      session_meta_matches:
                        key: null
                      payload_matches: null
                    rewrite_to: rewrite_to
                    "on": "on"
              expires: expires
              global_headers:
                key: global_headers
              paths:
                ignored:
                - ignored
                - ignored
                white_list:
                - white_list
                - white_list
                black_list:
                - black_list
                - black_list
              override_target: override_target
              name: name
              global_headers_remove:
              - global_headers_remove
              - global_headers_remove
              global_size_limit: 3
              use_extended_paths: true
          default_version: default_version
          not_versioned: true
        uptime_tests:
          check_list:
          - headers:
              key: headers
            method: method
            body: body
            url: url
          - headers:
              key: headers
            method: method
            body: body
            url: url
          config:
            expire_utime_after: 7
            service_discovery: null
            recheck_wait: 1
        use_basic_auth: true
        auth_provider:
          meta:
            key: {}
          name: name
          storage_engine: storage_engine
      x-go-package: github.com/TykTechnologies/tyk/apidef
    APILimit:
      type: object
      properties:
        per:
          type: number
          format: double
          x-go-name: Per
        quota_max:
          type: integer
          format: int64
          x-go-name: QuotaMax
        quota_remaining:
          type: integer
          format: int64
          x-go-name: QuotaRemaining
        quota_renewal_rate:
          type: integer
          format: int64
          x-go-name: QuotaRenewalRate
        quota_renews:
          type: integer
          format: int64
          x-go-name: QuotaRenews
        rate:
          type: number
          format: double
          x-go-name: Rate
        set_by_policy:
          type: boolean
          x-go-name: SetByPolicy
        throttle_interval:
          type: number
          format: double
          x-go-name: ThrottleInterval
        throttle_retry_limit:
          type: integer
          format: int64
          x-go-name: ThrottleRetryLimit
      description: APILimit stores quota and rate limit on ACL level (per API)
      example:
        quota_max: 6
        rate: 2.3021358869347655
        throttle_retry_limit: 9
        quota_remaining: 1
        throttle_interval: 7.061401241503109
        quota_renews: 5
        per: 0.8008281904610115
        quota_renewal_rate: 5
        set_by_policy: true
      x-go-package: github.com/TykTechnologies/tyk/user
    AccessDefinition:
      type: object
      properties:
        allowed_urls:
          type: array
          items:
            $ref: '#/components/schemas/AccessSpec'
          x-go-name: AllowedURLs
        api_id:
          type: string
          x-go-name: APIID
        api_name:
          type: string
          x-go-name: APIName
        limit:
          $ref: '#/components/schemas/APILimit'
        versions:
          type: array
          items:
            type: string
          x-go-name: Versions
      description: AccessDefinition defines which versions of an API a key has access
        to
      example:
        allowed_urls:
        - methods:
          - methods
          - methods
          url: url
        - methods:
          - methods
          - methods
          url: url
        api_id: api_id
        versions:
        - versions
        - versions
        api_name: api_name
        limit:
          quota_max: 6
          rate: 2.3021358869347655
          throttle_retry_limit: 9
          quota_remaining: 1
          throttle_interval: 7.061401241503109
          quota_renews: 5
          per: 0.8008281904610115
          quota_renewal_rate: 5
          set_by_policy: true
      x-go-package: github.com/TykTechnologies/tyk/user
    AccessRequestType:
      type: string
      description: AccessRequestType is the type for OAuth param `grant_type`
      x-go-package: github.com/TykTechnologies/tyk/vendor/github.com/lonelycode/osin
    AccessSpec:
      type: object
      properties:
        methods:
          type: array
          items:
            type: string
          x-go-name: Methods
        url:
          type: string
          x-go-name: URL
      description: AccessSpecs define what URLS a user has access to an what methods
        are enabled
      example:
        methods:
        - methods
        - methods
        url: url
      x-go-package: github.com/TykTechnologies/tyk/user
    Auth:
      type: object
      properties:
        auth_header_name:
          type: string
          x-go-name: AuthHeaderName
        cookie_name:
          type: string
          x-go-name: CookieName
        param_name:
          type: string
          x-go-name: ParamName
        signature:
          $ref: '#/components/schemas/SignatureConfig'
        use_certificate:
          type: boolean
          x-go-name: UseCertificate
        use_cookie:
          type: boolean
          x-go-name: UseCookie
        use_param:
          type: boolean
          x-go-name: UseParam
        validate_signature:
          type: boolean
          x-go-name: ValidateSignature
      example:
        auth_header_name: auth_header_name
        use_param: true
        signature:
          allowed_clock_skew: 6
          error_message: error_message
          header: header
          error_code: 1
          secret: secret
          algorithm: algorithm
        use_certificate: true
        use_cookie: true
        validate_signature: true
        param_name: param_name
        cookie_name: cookie_name
      x-go-package: github.com/TykTechnologies/tyk/apidef
    AuthProviderCode:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    AuthProviderMeta:
      type: object
      properties:
        meta:
          type: object
          additionalProperties:
            type: object
          x-go-name: Meta
        name:
          $ref: '#/components/schemas/AuthProviderCode'
        storage_engine:
          $ref: '#/components/schemas/StorageEngineCode'
      example:
        meta:
          key: {}
        name: name
        storage_engine: storage_engine
      x-go-package: github.com/TykTechnologies/tyk/apidef
    AuthTypeEnum:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    AuthorizeRequestType:
      type: string
      description: AuthorizeRequestType is the type for OAuth param `response_type`
      x-go-package: github.com/TykTechnologies/tyk/vendor/github.com/lonelycode/osin
    CacheMeta:
      type: object
      properties:
        cache_response_codes:
          type: array
          items:
            type: integer
            format: int64
          x-go-name: CacheOnlyResponseCodes
        cache_key_regex:
          type: string
          x-go-name: CacheKeyRegex
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
      example:
        cache_key_regex: cache_key_regex
        path: path
        method: method
        cache_response_codes:
        - 4
        - 4
      x-go-package: github.com/TykTechnologies/tyk/apidef
    CacheOptions:
      type: object
      properties:
        cache_all_safe_requests:
          type: boolean
          x-go-name: CacheAllSafeRequests
        cache_control_ttl_header:
          type: string
          x-go-name: CacheControlTTLHeader
        cache_response_codes:
          type: array
          items:
            type: integer
            format: int64
          x-go-name: CacheOnlyResponseCodes
        cache_timeout:
          type: integer
          format: int64
          x-go-name: CacheTimeout
        enable_cache:
          type: boolean
          x-go-name: EnableCache
        enable_upstream_cache_control:
          type: boolean
          x-go-name: EnableUpstreamCacheControl
      example:
        cache_all_safe_requests: true
        enable_upstream_cache_control: true
        enable_cache: true
        cache_timeout: 2
        cache_response_codes:
        - 5
        - 5
        cache_control_ttl_header: cache_control_ttl_header
      x-go-package: github.com/TykTechnologies/tyk/apidef
    CircuitBreakerMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        return_to_service_after:
          type: integer
          format: int64
          x-go-name: ReturnToServiceAfter
        samples:
          type: integer
          format: int64
          x-go-name: Samples
        threshold_percent:
          type: number
          format: double
          x-go-name: ThresholdPercent
      example:
        path: path
        threshold_percent: 6.683562403749608
        method: method
        return_to_service_after: 9
        samples: 9
      x-go-package: github.com/TykTechnologies/tyk/apidef
    EndPointMeta:
      type: object
      properties:
        method_actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EndpointMethodMeta'
          x-go-name: MethodActions
        path:
          type: string
          x-go-name: Path
      example:
        path: path
        method_actions:
          key:
            headers:
              key: headers
            code: 5
            data: data
            action: action
      x-go-package: github.com/TykTechnologies/tyk/apidef
    EndpointMethodAction:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    EndpointMethodMeta:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/EndpointMethodAction'
        code:
          type: integer
          format: int64
          x-go-name: Code
        data:
          type: string
          x-go-name: Data
        headers:
          type: object
          additionalProperties:
            type: string
          x-go-name: Headers
      example:
        headers:
          key: headers
        code: 5
        data: data
        action: action
      x-go-package: github.com/TykTechnologies/tyk/apidef
    EventHandlerMetaConfig:
      type: object
      properties:
        events:
          x-go-name: Events
      example:
        events: ""
      x-go-package: github.com/TykTechnologies/tyk/apidef
    ExtendedPathsSet:
      type: object
      properties:
        advance_cache_config:
          type: array
          items:
            $ref: '#/components/schemas/CacheMeta'
          x-go-name: AdvanceCacheConfig
        black_list:
          type: array
          items:
            $ref: '#/components/schemas/EndPointMeta'
          x-go-name: BlackList
        cache:
          type: array
          items:
            type: string
          x-go-name: Cached
        circuit_breakers:
          type: array
          items:
            $ref: '#/components/schemas/CircuitBreakerMeta'
          x-go-name: CircuitBreaker
        do_not_track_endpoints:
          type: array
          items:
            $ref: '#/components/schemas/TrackEndpointMeta'
          x-go-name: DoNotTrackEndpoints
        hard_timeouts:
          type: array
          items:
            $ref: '#/components/schemas/HardTimeoutMeta'
          x-go-name: HardTimeouts
        ignored:
          type: array
          items:
            $ref: '#/components/schemas/EndPointMeta'
          x-go-name: Ignored
        internal:
          type: array
          items:
            $ref: '#/components/schemas/InternalMeta'
          x-go-name: Internal
        method_transforms:
          type: array
          items:
            $ref: '#/components/schemas/MethodTransformMeta'
          x-go-name: MethodTransforms
        size_limits:
          type: array
          items:
            $ref: '#/components/schemas/RequestSizeMeta'
          x-go-name: SizeLimit
        track_endpoints:
          type: array
          items:
            $ref: '#/components/schemas/TrackEndpointMeta'
          x-go-name: TrackEndpoints
        transform:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMeta'
          x-go-name: Transform
        transform_headers:
          type: array
          items:
            $ref: '#/components/schemas/HeaderInjectionMeta'
          x-go-name: TransformHeader
        transform_jq:
          type: array
          items:
            $ref: '#/components/schemas/TransformJQMeta'
          x-go-name: TransformJQ
        transform_jq_response:
          type: array
          items:
            $ref: '#/components/schemas/TransformJQMeta'
          x-go-name: TransformJQResponse
        transform_response:
          type: array
          items:
            $ref: '#/components/schemas/TemplateMeta'
          x-go-name: TransformResponse
        transform_response_headers:
          type: array
          items:
            $ref: '#/components/schemas/HeaderInjectionMeta'
          x-go-name: TransformResponseHeader
        url_rewrites:
          type: array
          items:
            $ref: '#/components/schemas/URLRewriteMeta'
          x-go-name: URLRewrite
        validate_json:
          type: array
          items:
            $ref: '#/components/schemas/ValidatePathMeta'
          x-go-name: ValidateJSON
        virtual:
          type: array
          items:
            $ref: '#/components/schemas/VirtualMeta'
          x-go-name: Virtual
        white_list:
          type: array
          items:
            $ref: '#/components/schemas/EndPointMeta'
          x-go-name: WhiteList
      example:
        circuit_breakers:
        - path: path
          threshold_percent: 6.683562403749608
          method: method
          return_to_service_after: 9
          samples: 9
        - path: path
          threshold_percent: 6.683562403749608
          method: method
          return_to_service_after: 9
          samples: 9
        do_not_track_endpoints:
        - path: path
          method: method
        - path: path
          method: method
        ignored:
        - null
        - null
        cache:
        - cache
        - cache
        internal:
        - path: path
          method: method
        - path: path
          method: method
        method_transforms:
        - path: path
          method: method
          to_method: to_method
        - path: path
          method: method
          to_method: to_method
        transform_jq:
        - filter: filter
          path: path
          method: method
        - filter: filter
          path: path
          method: method
        virtual:
        - path: path
          proxy_on_error: true
          method: method
          response_function_name: response_function_name
          function_source_uri: function_source_uri
          use_session: true
          function_source_type: function_source_type
        - path: path
          proxy_on_error: true
          method: method
          response_function_name: response_function_name
          function_source_uri: function_source_uri
          use_session: true
          function_source_type: function_source_type
        transform_jq_response:
        - null
        - null
        validate_json:
        - schema:
            key: {}
          path: path
          error_response_code: 6
          method: method
          schema_b64: schema_b64
        - schema:
            key: {}
          path: path
          error_response_code: 6
          method: method
          schema_b64: schema_b64
        black_list:
        - path: path
          method_actions:
            key:
              headers:
                key: headers
              code: 5
              data: data
              action: action
        - path: path
          method_actions:
            key:
              headers:
                key: headers
              code: 5
              data: data
              action: action
        transform_headers:
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          delete_headers:
          - delete_headers
          - delete_headers
        - path: path
          add_headers:
            key: add_headers
          act_on: true
          method: method
          delete_headers:
          - delete_headers
          - delete_headers
        advance_cache_config:
        - cache_key_regex: cache_key_regex
          path: path
          method: method
          cache_response_codes:
          - 4
          - 4
        - cache_key_regex: cache_key_regex
          path: path
          method: method
          cache_response_codes:
          - 4
          - 4
        transform_response_headers:
        - null
        - null
        white_list:
        - null
        - null
        transform:
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
        - path: path
          template_data:
            template_source: template_source
            input_type: input_type
            template_mode: template_mode
            enable_session: true
          method: method
        size_limits:
        - path: path
          method: method
          size_limit: 9
        - path: path
          method: method
          size_limit: 9
        transform_response:
        - null
        - null
        track_endpoints:
        - null
        - null
        hard_timeouts:
        - path: path
          method: method
          timeout: 8
        - path: path
          method: method
          timeout: 8
        url_rewrites:
        - match_pattern: match_pattern
          path: path
          method: method
          MatchRegexp:
            FromCache: true
          rewrite_to: rewrite_to
          triggers:
          - options:
              path_part_matches:
                key: null
              query_val_matches:
                key: null
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key: null
              session_meta_matches:
                key: null
              payload_matches: null
            rewrite_to: rewrite_to
            "on": "on"
          - options:
              path_part_matches:
                key: null
              query_val_matches:
                key: null
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key: null
              session_meta_matches:
                key: null
              payload_matches: null
            rewrite_to: rewrite_to
            "on": "on"
        - match_pattern: match_pattern
          path: path
          method: method
          MatchRegexp:
            FromCache: true
          rewrite_to: rewrite_to
          triggers:
          - options:
              path_part_matches:
                key: null
              query_val_matches:
                key: null
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key: null
              session_meta_matches:
                key: null
              payload_matches: null
            rewrite_to: rewrite_to
            "on": "on"
          - options:
              path_part_matches:
                key: null
              query_val_matches:
                key: null
              header_matches:
                key:
                  match_rx: match_rx
                  reverse: true
              request_context_matches:
                key: null
              session_meta_matches:
                key: null
              payload_matches: null
            rewrite_to: rewrite_to
            "on": "on"
      x-go-package: github.com/TykTechnologies/tyk/apidef
    GlobalRateLimit:
      type: object
      properties:
        per:
          type: number
          format: double
          x-go-name: Per
        rate:
          type: number
          format: double
          x-go-name: Rate
      example:
        rate: 3.616076749251911
        per: 9.301444243932576
      x-go-package: github.com/TykTechnologies/tyk/apidef
    GraphAccessDefinition:
      type: object
      x-go-package: github.com/TykTechnologies/tyk/user
    HardTimeoutMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        timeout:
          type: integer
          format: int64
          x-go-name: TimeOut
      example:
        path: path
        method: method
        timeout: 8
      x-go-package: github.com/TykTechnologies/tyk/apidef
    HashType:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/user
    HeaderInjectionMeta:
      type: object
      properties:
        act_on:
          type: boolean
          x-go-name: ActOnResponse
        add_headers:
          type: object
          additionalProperties:
            type: string
          x-go-name: AddHeaders
        delete_headers:
          type: array
          items:
            type: string
          x-go-name: DeleteHeaders
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
      example:
        path: path
        add_headers:
          key: add_headers
        act_on: true
        method: method
        delete_headers:
        - delete_headers
        - delete_headers
      x-go-package: github.com/TykTechnologies/tyk/apidef
    HostCheckObject:
      type: object
      properties:
        body:
          type: string
          x-go-name: Body
        headers:
          type: object
          additionalProperties:
            type: string
          x-go-name: Headers
        method:
          type: string
          x-go-name: Method
        url:
          type: string
          x-go-name: CheckURL
      example:
        headers:
          key: headers
        method: method
        body: body
        url: url
      x-go-package: github.com/TykTechnologies/tyk/apidef
    IdExtractorSource:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    IdExtractorType:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    InternalMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
      example:
        path: path
        method: method
      x-go-package: github.com/TykTechnologies/tyk/apidef
    MethodTransformMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        to_method:
          type: string
          x-go-name: ToMethod
      example:
        path: path
        method: method
        to_method: to_method
      x-go-package: github.com/TykTechnologies/tyk/apidef
    MiddlewareDefinition:
      type: object
      properties:
        name:
          type: string
          x-go-name: Name
        path:
          type: string
          x-go-name: Path
        require_session:
          type: boolean
          x-go-name: RequireSession
      example:
        path: path
        require_session: true
        name: name
      x-go-package: github.com/TykTechnologies/tyk/apidef
    MiddlewareDriver:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    MiddlewareIdExtractor:
      type: object
      properties:
        extract_from:
          $ref: '#/components/schemas/IdExtractorSource'
        extract_with:
          $ref: '#/components/schemas/IdExtractorType'
        extractor_config:
          type: object
          additionalProperties:
            type: object
          x-go-name: ExtractorConfig
      example:
        extractor_config:
          key: {}
        extract_from: extract_from
        extract_with: extract_with
      x-go-package: github.com/TykTechnologies/tyk/apidef
    MiddlewareSection:
      type: object
      properties:
        auth_check:
          $ref: '#/components/schemas/MiddlewareDefinition'
        driver:
          $ref: '#/components/schemas/MiddlewareDriver'
        id_extractor:
          $ref: '#/components/schemas/MiddlewareIdExtractor'
        post:
          type: array
          items:
            $ref: '#/components/schemas/MiddlewareDefinition'
          x-go-name: Post
        post_key_auth:
          type: array
          items:
            $ref: '#/components/schemas/MiddlewareDefinition'
          x-go-name: PostKeyAuth
        pre:
          type: array
          items:
            $ref: '#/components/schemas/MiddlewareDefinition'
          x-go-name: Pre
        response:
          type: array
          items:
            $ref: '#/components/schemas/MiddlewareDefinition'
          x-go-name: Response
      example:
        id_extractor:
          extractor_config:
            key: {}
          extract_from: extract_from
          extract_with: extract_with
        pre:
        - null
        - null
        driver: driver
        post:
        - null
        - null
        response:
        - null
        - null
        auth_check:
          path: path
          require_session: true
          name: name
        post_key_auth:
        - null
        - null
      x-go-package: github.com/TykTechnologies/tyk/apidef
    NewClientRequest:
      type: object
      properties:
        api_id:
          type: string
          x-go-name: APIID
        client_id:
          type: string
          x-go-name: ClientID
        description:
          type: string
          x-go-name: Description
        meta_data:
          type: object
          x-go-name: MetaData
        policy_id:
          type: string
          x-go-name: PolicyID
        redirect_uri:
          type: string
          x-go-name: ClientRedirectURI
        secret:
          type: string
          x-go-name: ClientSecret
      description: NewClientRequest is an outward facing JSON object translated from
        osin OAuthClients
      example:
        api_id: api_id
        policy_id: policy_id
        meta_data: {}
        description: description
        redirect_uri: redirect_uri
        secret: secret
        client_id: client_id
      x-go-package: github.com/TykTechnologies/tyk
    NotificationsManager:
      title: NotificationsManager handles sending notifications to OAuth endpoints
        to notify the provider of key changes.
      type: object
      properties:
        oauth_on_keychange_url:
          type: string
          x-go-name: OAuthKeyChangeURL
        shared_secret:
          type: string
          x-go-name: SharedSecret
      description: "TODO: Make this more generic"
      example:
        oauth_on_keychange_url: oauth_on_keychange_url
        shared_secret: shared_secret
      x-go-package: github.com/TykTechnologies/tyk/apidef
    OAuthClientToken:
      type: object
      properties:
        code:
          type: string
          x-go-name: Token
        expires:
          type: integer
          format: int64
          x-go-name: Expires
      x-go-package: github.com/TykTechnologies/tyk
    OIDProviderConfig:
      type: object
      properties:
        client_ids:
          type: object
          additionalProperties:
            type: string
          x-go-name: ClientIDs
        issuer:
          type: string
          x-go-name: Issuer
      example:
        client_ids:
          key: client_ids
        issuer: issuer
      x-go-package: github.com/TykTechnologies/tyk/apidef
    ObjectId:
      title: |-
        ObjectId is a unique ID identifying a BSON value. It must be exactly 12 bytes
        long. MongoDB objects by default have such a property set in their "_id"
        property.
      type: string
      description: http://www.mongodb.org/display/DOCS/Object+IDs
      x-go-package: github.com/TykTechnologies/tyk/vendor/gopkg.in/mgo.v2/bson
    OpenIDOptions:
      type: object
      properties:
        providers:
          type: array
          items:
            $ref: '#/components/schemas/OIDProviderConfig'
          x-go-name: Providers
        segregate_by_client:
          type: boolean
          x-go-name: SegregateByClient
      example:
        segregate_by_client: true
        providers:
        - client_ids:
            key: client_ids
          issuer: issuer
        - client_ids:
            key: client_ids
          issuer: issuer
      x-go-package: github.com/TykTechnologies/tyk/apidef
    Policy:
      type: object
      properties:
        _id:
          $ref: '#/components/schemas/ObjectId'
        id:
          type: string
          x-go-name: ID
        name:
          type: string
          x-go-name: Name
        org_id:
          type: string
          x-go-name: OrgID
        rate:
          type: number
          format: double
          x-go-name: Rate
        per:
          type: number
          format: double
          x-go-name: Per
        quota_max:
          type: integer
          format: int64
          x-go-name: QuotaMax
        quota_renewal_rate:
          type: integer
          format: int64
          x-go-name: QuotaRenewalRate
        throttle_interval:
          type: number
          format: double
          x-go-name: ThrottleInterval
        throttle_retry_limit:
          type: number
          x-go-name: ThrottleRetryLimit
        max_query_depth:
          type: number
          x-go-name: MaxQueryDepth
        access_rights:
          $ref: '#/components/schemas/AccessDefinition'
        hmac_enabled:
          type: boolean
          x-go-name: HMACEnabled
        enable_http_signature_validation:
          type: boolean
          x-go-name: EnableHTTPSignatureValidation
        active:
          type: boolean
          x-go-name: Active
        is_inactive:
          type: boolean
          x-go-name: IsInactive
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        key_expires_in:
          type: number
          format: int64
          x-go-name: KeyExpiresIn
        partitions:
          $ref: '#/components/schemas/PolicyPartitions'
        last_updated:
          type: string
          x-go-name: LastUpdates
        meta_data:
          type: object
          x-go-name: MetaData
        graphql_access_rights:
          $ref: '#/components/schemas/GraphAccessDefinition'
      example:
        partitions:
          complexity: true
          rate_limit: true
          quota: true
          acl: true
          per_api: true
        last_updated: last_updated
        max_query_depth: 7.061401241503109
        throttle_retry_limit: 2.3021358869347655
        graphql_access_rights: {}
        enable_http_signature_validation: true
        throttle_interval: 5.637376656633329
        is_inactive: true
        active: true
        access_rights:
          allowed_urls:
          - methods:
            - methods
            - methods
            url: url
          - methods:
            - methods
            - methods
            url: url
          api_id: api_id
          versions:
          - versions
          - versions
          api_name: api_name
          limit:
            quota_max: 6
            rate: 2.3021358869347655
            throttle_retry_limit: 9
            quota_remaining: 1
            throttle_interval: 7.061401241503109
            quota_renews: 5
            per: 0.8008281904610115
            quota_renewal_rate: 5
            set_by_policy: true
        quota_renewal_rate: 5
        tags:
        - tags
        - tags
        rate: 0.8008281904610115
        quota_max: 1
        org_id: org_id
        key_expires_in: 9.301444243932576
        name: name
        meta_data: {}
        _id: _id
        id: id
        per: 6.027456183070403
        hmac_enabled: true
      x-go-package: github.com/TykTechnologies/tyk/user
    PolicyPartitions:
      type: object
      properties:
        quota:
          type: boolean
          x-go-name: Quota
        rate_limit:
          type: boolean
          x-go-name: RateLimit
        complexity:
          type: boolean
          x-go-name: Complexity
        acl:
          type: boolean
          x-go-name: Acl
        per_api:
          type: boolean
          x-go-name: PerAPI
      example:
        complexity: true
        rate_limit: true
        quota: true
        acl: true
        per_api: true
      x-go-package: github.com/TykTechnologies/tyk/user
    Regexp:
      type: object
      properties:
        FromCache:
          type: boolean
      description: Regexp is a wrapper around regexp.Regexp but with caching
      example:
        FromCache: true
      x-go-package: github.com/TykTechnologies/tyk/regexp
    RequestInputType:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    RequestSizeMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        size_limit:
          type: integer
          format: int64
          x-go-name: SizeLimit
      example:
        path: path
        method: method
        size_limit: 9
      x-go-package: github.com/TykTechnologies/tyk/apidef
    ResponseProcessor:
      type: object
      properties:
        name:
          type: string
          x-go-name: Name
        options:
          type: object
          x-go-name: Options
      example:
        name: name
        options: {}
      x-go-package: github.com/TykTechnologies/tyk/apidef
    RoutingTrigger:
      type: object
      properties:
        "on":
          $ref: '#/components/schemas/RoutingTriggerOnType'
        options:
          $ref: '#/components/schemas/RoutingTriggerOptions'
        rewrite_to:
          type: string
          x-go-name: RewriteTo
      example:
        options:
          path_part_matches:
            key: null
          query_val_matches:
            key: null
          header_matches:
            key:
              match_rx: match_rx
              reverse: true
          request_context_matches:
            key: null
          session_meta_matches:
            key: null
          payload_matches: null
        rewrite_to: rewrite_to
        "on": "on"
      x-go-package: github.com/TykTechnologies/tyk/apidef
    RoutingTriggerOnType:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    RoutingTriggerOptions:
      type: object
      properties:
        header_matches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRegexMap'
          x-go-name: HeaderMatches
        path_part_matches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRegexMap'
          x-go-name: PathPartMatches
        payload_matches:
          $ref: '#/components/schemas/StringRegexMap'
        query_val_matches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRegexMap'
          x-go-name: QueryValMatches
        request_context_matches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRegexMap'
          x-go-name: RequestContextMatches
        session_meta_matches:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/StringRegexMap'
          x-go-name: SessionMetaMatches
      example:
        path_part_matches:
          key: null
        query_val_matches:
          key: null
        header_matches:
          key:
            match_rx: match_rx
            reverse: true
        request_context_matches:
          key: null
        session_meta_matches:
          key: null
        payload_matches: null
      x-go-package: github.com/TykTechnologies/tyk/apidef
    ServiceDiscoveryConfiguration:
      type: object
      properties:
        cache_timeout:
          type: integer
          format: int64
          x-go-name: CacheTimeout
        data_path:
          type: string
          x-go-name: DataPath
        endpoint_returns_list:
          type: boolean
          x-go-name: EndpointReturnsList
        parent_data_path:
          type: string
          x-go-name: ParentDataPath
        port_data_path:
          type: string
          x-go-name: PortDataPath
        query_endpoint:
          type: string
          x-go-name: QueryEndpoint
        target_path:
          type: string
          x-go-name: TargetPath
        use_discovery_service:
          type: boolean
          x-go-name: UseDiscoveryService
        use_nested_query:
          type: boolean
          x-go-name: UseNestedQuery
        use_target_list:
          type: boolean
          x-go-name: UseTargetList
      example:
        parent_data_path: parent_data_path
        query_endpoint: query_endpoint
        use_nested_query: true
        cache_timeout: 1
        use_discovery_service: true
        port_data_path: port_data_path
        use_target_list: true
        endpoint_returns_list: true
        target_path: target_path
        data_path: data_path
      x-go-package: github.com/TykTechnologies/tyk/apidef
    SessionProviderCode:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    SessionProviderMeta:
      type: object
      properties:
        meta:
          type: object
          additionalProperties:
            type: object
          x-go-name: Meta
        name:
          $ref: '#/components/schemas/SessionProviderCode'
        storage_engine:
          $ref: '#/components/schemas/StorageEngineCode'
      example:
        meta:
          key: {}
        name: name
        storage_engine: null
      x-go-package: github.com/TykTechnologies/tyk/apidef
    SessionState:
      title: "SessionState objects represent a current API session, mainly used for\
        \ rate limiting."
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
          x-go-name: Tags
        access_rights:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessDefinition'
          x-go-name: AccessRights
        alias:
          type: string
          x-go-name: Alias
        allowance:
          type: number
          format: double
          x-go-name: Allowance
        apply_policies:
          type: array
          items:
            type: string
          x-go-name: ApplyPolicies
        apply_policy_id:
          type: string
          x-go-name: ApplyPolicyID
        basic_auth_data:
          $ref: '#/components/schemas/SessionState_basic_auth_data'
        certificate:
          type: string
          x-go-name: Certificate
        data_expires:
          type: integer
          format: int64
          x-go-name: DataExpires
        enable_detail_recording:
          type: boolean
          x-go-name: EnableDetailedRecording
        expires:
          type: integer
          format: int64
          x-go-name: Expires
        hmac_enabled:
          type: boolean
          x-go-name: HMACEnabled
        hmac_string:
          type: string
          x-go-name: HmacSecret
        id_extractor_deadline:
          type: integer
          format: int64
          x-go-name: IdExtractorDeadline
        is_inactive:
          type: boolean
          x-go-name: IsInactive
        jwt_data:
          $ref: '#/components/schemas/SessionState_jwt_data'
        last_check:
          type: integer
          format: int64
          x-go-name: LastCheck
        last_updated:
          type: string
          x-go-name: LastUpdated
        meta_data:
          type: object
          additionalProperties:
            type: object
          x-go-name: MetaData
        monitor:
          $ref: '#/components/schemas/SessionState_monitor'
        oauth_client_id:
          type: string
          x-go-name: OauthClientID
        oauth_keys:
          type: object
          additionalProperties:
            type: string
          x-go-name: OauthKeys
        org_id:
          type: string
          x-go-name: OrgID
        per:
          type: number
          format: double
          x-go-name: Per
        quota_max:
          type: integer
          format: int64
          x-go-name: QuotaMax
        quota_remaining:
          type: integer
          format: int64
          x-go-name: QuotaRemaining
        quota_renewal_rate:
          type: integer
          format: int64
          x-go-name: QuotaRenewalRate
        quota_renews:
          type: integer
          format: int64
          x-go-name: QuotaRenews
        rate:
          type: number
          format: double
          x-go-name: Rate
        session_lifetime:
          type: integer
          format: int64
          x-go-name: SessionLifetime
        throttle_interval:
          type: number
          format: double
          x-go-name: ThrottleInterval
        throttle_retry_limit:
          type: integer
          format: int64
          x-go-name: ThrottleRetryLimit
      description: "There's a data structure that's based on this and it's used for\
        \ Protocol Buffer support, make sure to update \"coprocess/proto/coprocess_session_state.proto\"\
        \ and generate the bindings using: cd coprocess/proto && ./update_bindings.sh"
      example:
        expires: 4
        session_lifetime: 9
        apply_policies:
        - apply_policies
        - apply_policies
        throttle_retry_limit: 6
        certificate: certificate
        is_inactive: true
        access_rights:
          key:
            allowed_urls:
            - methods:
              - methods
              - methods
              url: url
            - methods:
              - methods
              - methods
              url: url
            api_id: api_id
            versions:
            - versions
            - versions
            api_name: api_name
            limit:
              quota_max: 6
              rate: 2.3021358869347655
              throttle_retry_limit: 9
              quota_remaining: 1
              throttle_interval: 7.061401241503109
              quota_renews: 5
              per: 0.8008281904610115
              quota_renewal_rate: 5
              set_by_policy: true
        quota_renewal_rate: 1
        id_extractor_deadline: 7
        enable_detail_recording: true
        rate: 5.025004791520295
        data_expires: 2
        meta_data:
          key: {}
        alias: alias
        hmac_enabled: true
        hmac_string: hmac_string
        per: 1.4894159098541704
        oauth_client_id: oauth_client_id
        apply_policy_id: apply_policy_id
        last_updated: last_updated
        quota_remaining: 7
        throttle_interval: 9.369310271410669
        allowance: 3.616076749251911
        monitor:
          trigger_limits:
          - 1.0246457001441578
          - 1.0246457001441578
        tags:
        - tags
        - tags
        basic_auth_data:
          password: password
          hash_type: hash_type
        quota_max: 6
        org_id: org_id
        quota_renews: 4
        last_check: 1
        oauth_keys:
          key: oauth_keys
        jwt_data:
          secret: secret
      x-go-package: github.com/TykTechnologies/tyk/user
    SignatureConfig:
      type: object
      properties:
        algorithm:
          type: string
          x-go-name: Algorithm
        allowed_clock_skew:
          type: integer
          format: int64
          x-go-name: AllowedClockSkew
        error_code:
          type: integer
          format: int64
          x-go-name: ErrorCode
        error_message:
          type: string
          x-go-name: ErrorMessage
        header:
          type: string
          x-go-name: Header
        secret:
          type: string
          x-go-name: Secret
      example:
        allowed_clock_skew: 6
        error_message: error_message
        header: header
        error_code: 1
        secret: secret
        algorithm: algorithm
      x-go-package: github.com/TykTechnologies/tyk/apidef
    StorageEngineCode:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    StringRegexMap:
      type: object
      properties:
        match_rx:
          type: string
          x-go-name: MatchPattern
        reverse:
          type: boolean
          x-go-name: Reverse
      example:
        match_rx: match_rx
        reverse: true
      x-go-package: github.com/TykTechnologies/tyk/apidef
    TemplateData:
      type: object
      properties:
        enable_session:
          type: boolean
          x-go-name: EnableSession
        input_type:
          $ref: '#/components/schemas/RequestInputType'
        template_mode:
          $ref: '#/components/schemas/TemplateMode'
        template_source:
          type: string
          x-go-name: TemplateSource
      example:
        template_source: template_source
        input_type: input_type
        template_mode: template_mode
        enable_session: true
      x-go-package: github.com/TykTechnologies/tyk/apidef
    TemplateMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        template_data:
          $ref: '#/components/schemas/TemplateData'
      example:
        path: path
        template_data:
          template_source: template_source
          input_type: input_type
          template_mode: template_mode
          enable_session: true
        method: method
      x-go-package: github.com/TykTechnologies/tyk/apidef
    TemplateMode:
      type: string
      x-go-package: github.com/TykTechnologies/tyk/apidef
    TrackEndpointMeta:
      type: object
      properties:
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
      example:
        path: path
        method: method
      x-go-package: github.com/TykTechnologies/tyk/apidef
    TransformJQMeta:
      type: object
      properties:
        filter:
          type: string
          x-go-name: Filter
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
      example:
        filter: filter
        path: path
        method: method
      x-go-package: github.com/TykTechnologies/tyk/apidef
    URLRewriteMeta:
      type: object
      properties:
        MatchRegexp:
          $ref: '#/components/schemas/Regexp'
        match_pattern:
          type: string
          x-go-name: MatchPattern
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        rewrite_to:
          type: string
          x-go-name: RewriteTo
        triggers:
          type: array
          items:
            $ref: '#/components/schemas/RoutingTrigger'
          x-go-name: Triggers
      example:
        match_pattern: match_pattern
        path: path
        method: method
        MatchRegexp:
          FromCache: true
        rewrite_to: rewrite_to
        triggers:
        - options:
            path_part_matches:
              key: null
            query_val_matches:
              key: null
            header_matches:
              key:
                match_rx: match_rx
                reverse: true
            request_context_matches:
              key: null
            session_meta_matches:
              key: null
            payload_matches: null
          rewrite_to: rewrite_to
          "on": "on"
        - options:
            path_part_matches:
              key: null
            query_val_matches:
              key: null
            header_matches:
              key:
                match_rx: match_rx
                reverse: true
            request_context_matches:
              key: null
            session_meta_matches:
              key: null
            payload_matches: null
          rewrite_to: rewrite_to
          "on": "on"
      x-go-package: github.com/TykTechnologies/tyk/apidef
    ValidatePathMeta:
      type: object
      properties:
        error_response_code:
          type: integer
          description: Allows override of default 422 Unprocessible Entity response
            code for validation errors.
          format: int64
          x-go-name: ErrorResponseCode
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        schema:
          type: object
          additionalProperties:
            type: object
          x-go-name: Schema
        schema_b64:
          type: string
          x-go-name: SchemaB64
      example:
        schema:
          key: {}
        path: path
        error_response_code: 6
        method: method
        schema_b64: schema_b64
      x-go-package: github.com/TykTechnologies/tyk/apidef
    VersionInfo:
      type: object
      properties:
        paths:
          $ref: '#/components/schemas/VersionInfo_paths'
        expires:
          type: string
          x-go-name: Expires
        extended_paths:
          $ref: '#/components/schemas/ExtendedPathsSet'
        global_headers:
          type: object
          additionalProperties:
            type: string
          x-go-name: GlobalHeaders
        global_headers_remove:
          type: array
          items:
            type: string
          x-go-name: GlobalHeadersRemove
        global_size_limit:
          type: integer
          format: int64
          x-go-name: GlobalSizeLimit
        name:
          type: string
          x-go-name: Name
        override_target:
          type: string
          x-go-name: OverrideTarget
        use_extended_paths:
          type: boolean
          x-go-name: UseExtendedPaths
      example:
        extended_paths:
          circuit_breakers:
          - path: path
            threshold_percent: 6.683562403749608
            method: method
            return_to_service_after: 9
            samples: 9
          - path: path
            threshold_percent: 6.683562403749608
            method: method
            return_to_service_after: 9
            samples: 9
          do_not_track_endpoints:
          - path: path
            method: method
          - path: path
            method: method
          ignored:
          - null
          - null
          cache:
          - cache
          - cache
          internal:
          - path: path
            method: method
          - path: path
            method: method
          method_transforms:
          - path: path
            method: method
            to_method: to_method
          - path: path
            method: method
            to_method: to_method
          transform_jq:
          - filter: filter
            path: path
            method: method
          - filter: filter
            path: path
            method: method
          virtual:
          - path: path
            proxy_on_error: true
            method: method
            response_function_name: response_function_name
            function_source_uri: function_source_uri
            use_session: true
            function_source_type: function_source_type
          - path: path
            proxy_on_error: true
            method: method
            response_function_name: response_function_name
            function_source_uri: function_source_uri
            use_session: true
            function_source_type: function_source_type
          transform_jq_response:
          - null
          - null
          validate_json:
          - schema:
              key: {}
            path: path
            error_response_code: 6
            method: method
            schema_b64: schema_b64
          - schema:
              key: {}
            path: path
            error_response_code: 6
            method: method
            schema_b64: schema_b64
          black_list:
          - path: path
            method_actions:
              key:
                headers:
                  key: headers
                code: 5
                data: data
                action: action
          - path: path
            method_actions:
              key:
                headers:
                  key: headers
                code: 5
                data: data
                action: action
          transform_headers:
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            delete_headers:
            - delete_headers
            - delete_headers
          - path: path
            add_headers:
              key: add_headers
            act_on: true
            method: method
            delete_headers:
            - delete_headers
            - delete_headers
          advance_cache_config:
          - cache_key_regex: cache_key_regex
            path: path
            method: method
            cache_response_codes:
            - 4
            - 4
          - cache_key_regex: cache_key_regex
            path: path
            method: method
            cache_response_codes:
            - 4
            - 4
          transform_response_headers:
          - null
          - null
          white_list:
          - null
          - null
          transform:
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
          - path: path
            template_data:
              template_source: template_source
              input_type: input_type
              template_mode: template_mode
              enable_session: true
            method: method
          size_limits:
          - path: path
            method: method
            size_limit: 9
          - path: path
            method: method
            size_limit: 9
          transform_response:
          - null
          - null
          track_endpoints:
          - null
          - null
          hard_timeouts:
          - path: path
            method: method
            timeout: 8
          - path: path
            method: method
            timeout: 8
          url_rewrites:
          - match_pattern: match_pattern
            path: path
            method: method
            MatchRegexp:
              FromCache: true
            rewrite_to: rewrite_to
            triggers:
            - options:
                path_part_matches:
                  key: null
                query_val_matches:
                  key: null
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key: null
                session_meta_matches:
                  key: null
                payload_matches: null
              rewrite_to: rewrite_to
              "on": "on"
            - options:
                path_part_matches:
                  key: null
                query_val_matches:
                  key: null
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key: null
                session_meta_matches:
                  key: null
                payload_matches: null
              rewrite_to: rewrite_to
              "on": "on"
          - match_pattern: match_pattern
            path: path
            method: method
            MatchRegexp:
              FromCache: true
            rewrite_to: rewrite_to
            triggers:
            - options:
                path_part_matches:
                  key: null
                query_val_matches:
                  key: null
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key: null
                session_meta_matches:
                  key: null
                payload_matches: null
              rewrite_to: rewrite_to
              "on": "on"
            - options:
                path_part_matches:
                  key: null
                query_val_matches:
                  key: null
                header_matches:
                  key:
                    match_rx: match_rx
                    reverse: true
                request_context_matches:
                  key: null
                session_meta_matches:
                  key: null
                payload_matches: null
              rewrite_to: rewrite_to
              "on": "on"
        expires: expires
        global_headers:
          key: global_headers
        paths:
          ignored:
          - ignored
          - ignored
          white_list:
          - white_list
          - white_list
          black_list:
          - black_list
          - black_list
        override_target: override_target
        name: name
        global_headers_remove:
        - global_headers_remove
        - global_headers_remove
        global_size_limit: 3
        use_extended_paths: true
      x-go-package: github.com/TykTechnologies/tyk/apidef
    VirtualMeta:
      type: object
      properties:
        function_source_type:
          type: string
          x-go-name: FunctionSourceType
        function_source_uri:
          type: string
          x-go-name: FunctionSourceURI
        method:
          type: string
          x-go-name: Method
        path:
          type: string
          x-go-name: Path
        proxy_on_error:
          type: boolean
          x-go-name: ProxyOnError
        response_function_name:
          type: string
          x-go-name: ResponseFunctionName
        use_session:
          type: boolean
          x-go-name: UseSession
      example:
        path: path
        proxy_on_error: true
        method: method
        response_function_name: response_function_name
        function_source_uri: function_source_uri
        use_session: true
        function_source_type: function_source_type
      x-go-package: github.com/TykTechnologies/tyk/apidef
    apiAllKeys:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
          x-go-name: APIKeys
      description: apiAllKeys represents a list of keys in the memory store
      example:
        keys:
        - keys
        - keys
      x-go-package: github.com/TykTechnologies/tyk
    apiModifyKeySuccess:
      type: object
      properties:
        action:
          type: string
          x-go-name: Action
        key:
          type: string
          description: in:body
          x-go-name: Key
        key_hash:
          type: string
          x-go-name: KeyHash
        status:
          type: string
          x-go-name: Status
      description: apiModifyKeySuccess represents when a Key modification was successful
      example:
        key_hash: key_hash
        action: action
        key: key
        status: status
      x-go-package: github.com/TykTechnologies/tyk
    apiStatusMessage:
      type: object
      properties:
        message:
          type: string
          description: Response details
          x-go-name: Message
        status:
          type: string
          x-go-name: Status
      description: apiStatusMessage represents an API status message
      example:
        message: message
        status: status
      x-go-package: github.com/TykTechnologies/tyk
    APIAllCertificates:
      type: object
      properties:
        certs:
          type: array
          items:
            type: string
          x-go-name: Certs
      description: APIAllCertificates represents a list of certificates
      x-go-package: github.com/TykTechnologies/tyk
    APIAllCertificateBasics:
      type: object
      properties:
        certs:
          type: array
          items:
            $ref: '#/components/schemas/CertificateBasics'
          x-go-name: Certs
      description: APIAllCertificates represents a list of certificate basics
      x-go-package: github.com/TykTechnologies/tyk
    CertificateBasics:
      type: object
      properties:
        id:
          type: string
          x-go-name: ID
        issuer_cn:
          type: string
          x-go-name: IssuerCN
        subject_cn:
          type: string
          x-go-name: SubjectCN
        dns_names:
          type: array
          items:
            type: string
          x-go-name: DNSNames
        has_private:
          type: string
          x-go-name: HasPrivateKey
        not_before:
          type: string
          x-go-name: NotBefore
        not_after:
          type: string
          x-go-name: NotAfter
      description: CertificateBasics represents basic details of a certificate
      x-go-package: github.com/TykTechnologies/tyk
    CertificateMeta:
      type: object
      properties:
        id:
          type: string
          x-go-name: ID
        fingerprint:
          type: string
          x-go-name: Fingerprint
        has_private:
          type: string
          x-go-name: HasPrivateKey
        issuer:
          $ref: '#/components/schemas/pkixName'
        subject:
          $ref: '#/components/schemas/pkixName'
        not_before:
          type: string
          x-go-name: NotBefore
        not_after:
          type: string
          x-go-name: NotAfter
        dns_names:
          type: array
          items:
            type: string
          x-go-name: DNSNames
      description: CertificateBasics represents basic details of a certificate
      x-go-package: github.com/TykTechnologies/tyk
    pkixName:
      properties:
        Country:
          type: array
          items:
            type: string
        Organization:
          type: array
          items:
            type: string
        OrganizationalUnit:
          type: array
          items:
            type: string
        Locality:
          type: array
          items:
            type: string
        Province:
          type: array
          items:
            type: string
        StreetAddress:
          type: array
          items:
            type: string
        PostalCode:
          type: array
          items:
            type: string
        SerialNumber:
          type: string
        CommonName:
          type: string
        Names:
          type: array
          items:
            $ref: '#/components/schemas/pkixAttributeTypeAndValue'
        ExtraNames:
          type: array
          items:
            $ref: '#/components/schemas/pkixAttributeTypeAndValueSET'
      description: Name represents an X.509 distinguished name
    pkixAttributeTypeAndValue:
      properties:
        Type:
          type: array
          items:
            type: integer
        Value:
          type: object
      description: "AttributeTypeAndValue mirrors the ASN.1 structure of the same\
        \ name in RFC 5280, Section 4.1.2.4."
    pkixAttributeTypeAndValueSET:
      properties:
        Type:
          type: array
          items:
            type: integer
        Value:
          type: array
          items:
            type: array
            items:
              $ref: '#/components/schemas/pkixAttributeTypeAndValue'
      description: AttributeTypeAndValueSET represents a set of ASN.1 sequences of
        AttributeTypeAndValue sequences from RFC 2986 (PKCS
    APICertificateStatusMessage:
      type: object
      properties:
        id:
          type: string
          x-go-name: CertID
        status:
          type: string
          x-go-name: Status
        message:
          type: string
          x-go-name: Message
      description: Status message when certificate is added
      example:
        id: id
        message: message
        status: status
      x-go-package: github.com/TykTechnologies/tyk
    OASSchemaResponse:
      type: object
      properties:
        status:
          type: string
          x-go-name: Status
        message:
          type: string
          x-go-name: Message
        schema:
          type: string
          description: <OAS schema definition>
      description: OAS schema endpoint response
      example:
        schema: schema
        message: message
        status: status
    BooleanQueryParam:
      type: string
      example: "true"
      enum:
      - "true"
      - "false"
    schema:
      required:
      - info
      - openapi
      - paths
      type: object
      properties:
        openapi:
          pattern: ^3\.0\.\d(-.+)?$
          type: string
        info:
          $ref: '#/components/schemas/Info'
        externalDocs:
          $ref: '#/components/schemas/ExternalDocumentation'
        servers:
          type: array
          items:
            $ref: '#/components/schemas/Server'
        security:
          type: array
          items:
            $ref: '#/components/schemas/SecurityRequirement'
        tags:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        paths:
          $ref: '#/components/schemas/Paths'
        components:
          $ref: '#/components/schemas/Components'
      additionalProperties: false
      description: "The description of OpenAPI v3.0.x documents, as defined by https://spec.openapis.org/oas/v3.0.3"
    Info:
      required:
      - title
      - version
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        termsOfService:
          type: string
          format: uri-reference
        contact:
          $ref: '#/components/schemas/Contact'
        license:
          $ref: '#/components/schemas/License'
        version:
          type: string
      additionalProperties: false
    Contact:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
          format: uri-reference
        email:
          type: string
          format: email
      additionalProperties: false
    License:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        url:
          type: string
          format: uri-reference
      additionalProperties: false
    ExternalDocumentation:
      required:
      - url
      type: object
      properties:
        description:
          type: string
        url:
          type: string
          format: uri-reference
      additionalProperties: false
    Server:
      required:
      - url
      type: object
      properties:
        url:
          type: string
        description:
          type: string
        variables:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServerVariable'
      additionalProperties: false
    ServerVariable:
      required:
      - default
      type: object
      properties:
        enum:
          type: array
          items:
            type: string
        default:
          type: string
        description:
          type: string
      additionalProperties: false
    SecurityRequirement:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
      x-schema-name: SecurityRequirement
    Tag:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        externalDocs:
          $ref: '#/components/schemas/ExternalDocumentation'
      additionalProperties: false
    Paths:
      type: object
      additionalProperties: false
    Components:
      type: object
      properties:
        schemas:
          type: object
        responses:
          type: object
        parameters:
          type: object
        examples:
          type: object
        requestBodies:
          type: object
        headers:
          type: object
        securitySchemes:
          type: object
        links:
          type: object
        callbacks:
          type: object
      additionalProperties: false
    inline_response_200:
      oneOf:
      - $ref: '#/components/schemas/APIAllCertificates'
      - $ref: '#/components/schemas/APIAllCertificateBasics'
      - type: array
        items:
          $ref: '#/components/schemas/CertificateMeta'
    oauth_revoke_body:
      type: object
      properties:
        token:
          type: string
          description: token to be revoked
        client_id:
          type: string
          description: id of oauth client
        token_type_hint:
          type: string
          description: "type of token to be revoked, if sent then the accepted values\
            \ are access_token and refresh_token. String value and optional, of not\
            \ provided then it will attempt to remove access and refresh tokens that\
            \ matchs"
    oauth_revoke_all_body:
      type: object
      properties:
        client_id:
          type: string
          description: id of oauth client
        client_secret:
          type: string
          description: OAuth client secret to ensure that its a valid operation
    oauth_authorizeclient_body:
      type: object
      properties:
        response_type:
          type: string
          description: "Should be provided by requesting client as part of authorisation\
            \ request, this should be either `code` or `token` depending on the methods\
            \ you have specified for the API."
        client_id:
          type: string
          description: Should be provided by requesting client as part of authorisation
            request. The Client ID that is making the request.
        redirect_uri:
          type: string
          description: Should be provided by requesting client as part of authorisation
            request. Must match with the record stored with Tyk.
        key_rules:
          type: string
          description: A string representation of a Session Object (form-encoded).
            This should be provided by your application in order to apply any quotas
            or rules to the key.
    inline_response_200_1:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
      example:
        keys:
        - keys
        - keys
    APIDefinition_CORS:
      type: object
      properties:
        allow_credentials:
          type: boolean
          x-go-name: AllowCredentials
        allowed_headers:
          type: array
          items:
            type: string
          x-go-name: AllowedHeaders
        allowed_methods:
          type: array
          items:
            type: string
          x-go-name: AllowedMethods
        allowed_origins:
          type: array
          items:
            type: string
          x-go-name: AllowedOrigins
        debug:
          type: boolean
          x-go-name: Debug
        enable:
          type: boolean
          x-go-name: Enable
        exposed_headers:
          type: array
          items:
            type: string
          x-go-name: ExposedHeaders
        max_age:
          type: integer
          format: int64
          x-go-name: MaxAge
        options_passthrough:
          type: boolean
          x-go-name: OptionsPassthrough
      example:
        max_age: 0
        allowed_methods:
        - allowed_methods
        - allowed_methods
        allowed_headers:
        - allowed_headers
        - allowed_headers
        debug: true
        enable: true
        options_passthrough: true
        allow_credentials: true
        exposed_headers:
        - exposed_headers
        - exposed_headers
        allowed_origins:
        - allowed_origins
        - allowed_origins
    APIDefinition_basic_auth:
      type: object
      properties:
        body_password_regexp:
          type: string
          x-go-name: BodyPasswordRegexp
        body_user_regexp:
          type: string
          x-go-name: BodyUserRegexp
        cache_ttl:
          type: integer
          format: int64
          x-go-name: CacheTTL
        disable_caching:
          type: boolean
          x-go-name: DisableCaching
        extract_from_body:
          type: boolean
          x-go-name: ExtractFromBody
      example:
        body_user_regexp: body_user_regexp
        cache_ttl: 5
        body_password_regexp: body_password_regexp
        disable_caching: true
        extract_from_body: true
    APIDefinition_definition:
      type: object
      properties:
        key:
          type: string
          x-go-name: Key
        location:
          type: string
          x-go-name: Location
        strip_path:
          type: boolean
          x-go-name: StripPath
      example:
        location: location
        key: key
        strip_path: true
    APIDefinition_oauth_meta:
      type: object
      properties:
        allowed_access_types:
          type: array
          items:
            $ref: '#/components/schemas/AccessRequestType'
          x-go-name: AllowedAccessTypes
        allowed_authorize_types:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizeRequestType'
          x-go-name: AllowedAuthorizeTypes
        auth_login_redirect:
          type: string
          x-go-name: AuthorizeLoginRedirect
      example:
        allowed_authorize_types:
        - allowed_authorize_types
        - allowed_authorize_types
        auth_login_redirect: auth_login_redirect
        allowed_access_types:
        - allowed_access_types
        - allowed_access_types
    APIDefinition_proxy_transport:
      type: object
      properties:
        proxy_url:
          type: string
          x-go-name: ProxyURL
        ssl_ciphers:
          type: array
          items:
            type: string
          x-go-name: SSLCipherSuites
        ssl_insecure_skip_verify:
          type: boolean
          x-go-name: SSLInsecureSkipVerify
        ssl_min_version:
          type: integer
          format: uint16
          x-go-name: SSLMinVersion
      example:
        ssl_min_version: 1
        ssl_insecure_skip_verify: true
        proxy_url: proxy_url
        ssl_ciphers:
        - ssl_ciphers
        - ssl_ciphers
    APIDefinition_proxy:
      type: object
      properties:
        check_host_against_uptime_tests:
          type: boolean
          x-go-name: CheckHostAgainstUptimeTests
        disable_strip_slash:
          type: boolean
          x-go-name: DisableStripSlash
        enable_load_balancing:
          type: boolean
          x-go-name: EnableLoadBalancing
        listen_path:
          type: string
          x-go-name: ListenPath
        preserve_host_header:
          type: boolean
          x-go-name: PreserveHostHeader
        service_discovery:
          $ref: '#/components/schemas/ServiceDiscoveryConfiguration'
        strip_listen_path:
          type: boolean
          x-go-name: StripListenPath
        target_list:
          type: array
          items:
            type: string
          x-go-name: Targets
        target_url:
          type: string
          x-go-name: TargetURL
        transport:
          $ref: '#/components/schemas/APIDefinition_proxy_transport'
      example:
        check_host_against_uptime_tests: true
        enable_load_balancing: true
        target_list:
        - target_list
        - target_list
        preserve_host_header: true
        disable_strip_slash: true
        listen_path: listen_path
        target_url: target_url
        service_discovery:
          parent_data_path: parent_data_path
          query_endpoint: query_endpoint
          use_nested_query: true
          cache_timeout: 1
          use_discovery_service: true
          port_data_path: port_data_path
          use_target_list: true
          endpoint_returns_list: true
          target_path: target_path
          data_path: data_path
        strip_listen_path: true
        transport:
          ssl_min_version: 1
          ssl_insecure_skip_verify: true
          proxy_url: proxy_url
          ssl_ciphers:
          - ssl_ciphers
          - ssl_ciphers
    APIDefinition_uptime_tests_config:
      type: object
      properties:
        expire_utime_after:
          type: integer
          format: int64
          x-go-name: ExpireUptimeAnalyticsAfter
        recheck_wait:
          type: integer
          format: int64
          x-go-name: RecheckWait
        service_discovery:
          $ref: '#/components/schemas/ServiceDiscoveryConfiguration'
      example:
        expire_utime_after: 7
        service_discovery: null
        recheck_wait: 1
    APIDefinition_uptime_tests:
      type: object
      properties:
        check_list:
          type: array
          items:
            $ref: '#/components/schemas/HostCheckObject'
          x-go-name: CheckList
        config:
          $ref: '#/components/schemas/APIDefinition_uptime_tests_config'
      example:
        check_list:
        - headers:
            key: headers
          method: method
          body: body
          url: url
        - headers:
            key: headers
          method: method
          body: body
          url: url
        config:
          expire_utime_after: 7
          service_discovery: null
          recheck_wait: 1
    APIDefinition_version_data:
      type: object
      properties:
        default_version:
          type: string
          x-go-name: DefaultVersion
        not_versioned:
          type: boolean
          x-go-name: NotVersioned
        versions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VersionInfo'
          x-go-name: Versions
      example:
        versions:
          key:
            extended_paths:
              circuit_breakers:
              - path: path
                threshold_percent: 6.683562403749608
                method: method
                return_to_service_after: 9
                samples: 9
              - path: path
                threshold_percent: 6.683562403749608
                method: method
                return_to_service_after: 9
                samples: 9
              do_not_track_endpoints:
              - path: path
                method: method
              - path: path
                method: method
              ignored:
              - null
              - null
              cache:
              - cache
              - cache
              internal:
              - path: path
                method: method
              - path: path
                method: method
              method_transforms:
              - path: path
                method: method
                to_method: to_method
              - path: path
                method: method
                to_method: to_method
              transform_jq:
              - filter: filter
                path: path
                method: method
              - filter: filter
                path: path
                method: method
              virtual:
              - path: path
                proxy_on_error: true
                method: method
                response_function_name: response_function_name
                function_source_uri: function_source_uri
                use_session: true
                function_source_type: function_source_type
              - path: path
                proxy_on_error: true
                method: method
                response_function_name: response_function_name
                function_source_uri: function_source_uri
                use_session: true
                function_source_type: function_source_type
              transform_jq_response:
              - null
              - null
              validate_json:
              - schema:
                  key: {}
                path: path
                error_response_code: 6
                method: method
                schema_b64: schema_b64
              - schema:
                  key: {}
                path: path
                error_response_code: 6
                method: method
                schema_b64: schema_b64
              black_list:
              - path: path
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 5
                    data: data
                    action: action
              - path: path
                method_actions:
                  key:
                    headers:
                      key: headers
                    code: 5
                    data: data
                    action: action
              transform_headers:
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                delete_headers:
                - delete_headers
                - delete_headers
              - path: path
                add_headers:
                  key: add_headers
                act_on: true
                method: method
                delete_headers:
                - delete_headers
                - delete_headers
              advance_cache_config:
              - cache_key_regex: cache_key_regex
                path: path
                method: method
                cache_response_codes:
                - 4
                - 4
              - cache_key_regex: cache_key_regex
                path: path
                method: method
                cache_response_codes:
                - 4
                - 4
              transform_response_headers:
              - null
              - null
              white_list:
              - null
              - null
              transform:
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
              - path: path
                template_data:
                  template_source: template_source
                  input_type: input_type
                  template_mode: template_mode
                  enable_session: true
                method: method
              size_limits:
              - path: path
                method: method
                size_limit: 9
              - path: path
                method: method
                size_limit: 9
              transform_response:
              - null
              - null
              track_endpoints:
              - null
              - null
              hard_timeouts:
              - path: path
                method: method
                timeout: 8
              - path: path
                method: method
                timeout: 8
              url_rewrites:
              - match_pattern: match_pattern
                path: path
                method: method
                MatchRegexp:
                  FromCache: true
                rewrite_to: rewrite_to
                triggers:
                - options:
                    path_part_matches:
                      key: null
                    query_val_matches:
                      key: null
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key: null
                    session_meta_matches:
                      key: null
                    payload_matches: null
                  rewrite_to: rewrite_to
                  "on": "on"
                - options:
                    path_part_matches:
                      key: null
                    query_val_matches:
                      key: null
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key: null
                    session_meta_matches:
                      key: null
                    payload_matches: null
                  rewrite_to: rewrite_to
                  "on": "on"
              - match_pattern: match_pattern
                path: path
                method: method
                MatchRegexp:
                  FromCache: true
                rewrite_to: rewrite_to
                triggers:
                - options:
                    path_part_matches:
                      key: null
                    query_val_matches:
                      key: null
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key: null
                    session_meta_matches:
                      key: null
                    payload_matches: null
                  rewrite_to: rewrite_to
                  "on": "on"
                - options:
                    path_part_matches:
                      key: null
                    query_val_matches:
                      key: null
                    header_matches:
                      key:
                        match_rx: match_rx
                        reverse: true
                    request_context_matches:
                      key: null
                    session_meta_matches:
                      key: null
                    payload_matches: null
                  rewrite_to: rewrite_to
                  "on": "on"
            expires: expires
            global_headers:
              key: global_headers
            paths:
              ignored:
              - ignored
              - ignored
              white_list:
              - white_list
              - white_list
              black_list:
              - black_list
              - black_list
            override_target: override_target
            name: name
            global_headers_remove:
            - global_headers_remove
            - global_headers_remove
            global_size_limit: 3
            use_extended_paths: true
        default_version: default_version
        not_versioned: true
    SessionState_basic_auth_data:
      type: object
      properties:
        hash_type:
          $ref: '#/components/schemas/HashType'
        password:
          type: string
          x-go-name: Password
      example:
        password: password
        hash_type: hash_type
    SessionState_jwt_data:
      type: object
      properties:
        secret:
          type: string
          x-go-name: Secret
      example:
        secret: secret
    SessionState_monitor:
      type: object
      properties:
        trigger_limits:
          type: array
          items:
            type: number
            format: double
          x-go-name: TriggerLimits
      example:
        trigger_limits:
        - 1.0246457001441578
        - 1.0246457001441578
    VersionInfo_paths:
      type: object
      properties:
        black_list:
          type: array
          items:
            type: string
          x-go-name: BlackList
        ignored:
          type: array
          items:
            type: string
          x-go-name: Ignored
        white_list:
          type: array
          items:
            type: string
          x-go-name: WhiteList
      example:
        ignored:
        - ignored
        - ignored
        white_list:
        - white_list
        - white_list
        black_list:
        - black_list
        - black_list
  responses:
    parameterBodies:
      description: parameterBodies
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OAuthClientToken'
  parameters:
    UpstreamURL:
      name: upstreamURL
      in: query
      description: Upstream URL for the API
      required: false
      style: form
      explode: true
      schema:
        type: string
    ListenPath:
      name: listenPath
      in: query
      description: Listen path for the API
      required: false
      style: form
      explode: true
      schema:
        type: string
    CustomDomain:
      name: customDomain
      in: query
      description: Custom domain for the API
      required: false
      style: form
      explode: true
      schema:
        type: string
    ApiID:
      name: apiID
      in: query
      description: ID of the API
      required: false
      style: form
      explode: true
      schema:
        type: string
    ValidateRequest:
      name: validateRequest
      in: query
      description: Enable validateRequest middleware for all endpoints having a request
        body with media type application/json
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/BooleanQueryParam'
    AllowList:
      name: allowList
      in: query
      description: Enable allowList middleware for all endpoints
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/BooleanQueryParam'
    Authentication:
      name: authentication
      in: query
      description: Enable or disable authentication in your Tyk Gateway as per your
        OAS document.
      required: false
      style: form
      explode: true
      schema:
        $ref: '#/components/schemas/BooleanQueryParam'
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Tyk-Authorization
      in: header
