/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the GraphQLIntrospectionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLIntrospectionConfig{}

// GraphQLIntrospectionConfig struct for GraphQLIntrospectionConfig
type GraphQLIntrospectionConfig struct {
	Disabled *bool `json:"disabled,omitempty"`
}

// NewGraphQLIntrospectionConfig instantiates a new GraphQLIntrospectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLIntrospectionConfig() *GraphQLIntrospectionConfig {
	this := GraphQLIntrospectionConfig{}
	return &this
}

// NewGraphQLIntrospectionConfigWithDefaults instantiates a new GraphQLIntrospectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLIntrospectionConfigWithDefaults() *GraphQLIntrospectionConfig {
	this := GraphQLIntrospectionConfig{}
	return &this
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *GraphQLIntrospectionConfig) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLIntrospectionConfig) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *GraphQLIntrospectionConfig) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *GraphQLIntrospectionConfig) SetDisabled(v bool) {
	o.Disabled = &v
}

func (o GraphQLIntrospectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLIntrospectionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	return toSerialize, nil
}

type NullableGraphQLIntrospectionConfig struct {
	value *GraphQLIntrospectionConfig
	isSet bool
}

func (v NullableGraphQLIntrospectionConfig) Get() *GraphQLIntrospectionConfig {
	return v.value
}

func (v *NullableGraphQLIntrospectionConfig) Set(val *GraphQLIntrospectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLIntrospectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLIntrospectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLIntrospectionConfig(val *GraphQLIntrospectionConfig) *NullableGraphQLIntrospectionConfig {
	return &NullableGraphQLIntrospectionConfig{value: val, isSet: true}
}

func (v NullableGraphQLIntrospectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLIntrospectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


