/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the GraphQLFieldConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLFieldConfig{}

// GraphQLFieldConfig struct for GraphQLFieldConfig
type GraphQLFieldConfig struct {
	DisableDefaultMapping *bool `json:"disable_default_mapping,omitempty"`
	FieldName *string `json:"field_name,omitempty"`
	Path []string `json:"path,omitempty"`
	TypeName *string `json:"type_name,omitempty"`
}

// NewGraphQLFieldConfig instantiates a new GraphQLFieldConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLFieldConfig() *GraphQLFieldConfig {
	this := GraphQLFieldConfig{}
	return &this
}

// NewGraphQLFieldConfigWithDefaults instantiates a new GraphQLFieldConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLFieldConfigWithDefaults() *GraphQLFieldConfig {
	this := GraphQLFieldConfig{}
	return &this
}

// GetDisableDefaultMapping returns the DisableDefaultMapping field value if set, zero value otherwise.
func (o *GraphQLFieldConfig) GetDisableDefaultMapping() bool {
	if o == nil || IsNil(o.DisableDefaultMapping) {
		var ret bool
		return ret
	}
	return *o.DisableDefaultMapping
}

// GetDisableDefaultMappingOk returns a tuple with the DisableDefaultMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLFieldConfig) GetDisableDefaultMappingOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableDefaultMapping) {
		return nil, false
	}
	return o.DisableDefaultMapping, true
}

// HasDisableDefaultMapping returns a boolean if a field has been set.
func (o *GraphQLFieldConfig) HasDisableDefaultMapping() bool {
	if o != nil && !IsNil(o.DisableDefaultMapping) {
		return true
	}

	return false
}

// SetDisableDefaultMapping gets a reference to the given bool and assigns it to the DisableDefaultMapping field.
func (o *GraphQLFieldConfig) SetDisableDefaultMapping(v bool) {
	o.DisableDefaultMapping = &v
}

// GetFieldName returns the FieldName field value if set, zero value otherwise.
func (o *GraphQLFieldConfig) GetFieldName() string {
	if o == nil || IsNil(o.FieldName) {
		var ret string
		return ret
	}
	return *o.FieldName
}

// GetFieldNameOk returns a tuple with the FieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLFieldConfig) GetFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.FieldName) {
		return nil, false
	}
	return o.FieldName, true
}

// HasFieldName returns a boolean if a field has been set.
func (o *GraphQLFieldConfig) HasFieldName() bool {
	if o != nil && !IsNil(o.FieldName) {
		return true
	}

	return false
}

// SetFieldName gets a reference to the given string and assigns it to the FieldName field.
func (o *GraphQLFieldConfig) SetFieldName(v string) {
	o.FieldName = &v
}

// GetPath returns the Path field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphQLFieldConfig) GetPath() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphQLFieldConfig) GetPathOk() ([]string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *GraphQLFieldConfig) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given []string and assigns it to the Path field.
func (o *GraphQLFieldConfig) SetPath(v []string) {
	o.Path = v
}

// GetTypeName returns the TypeName field value if set, zero value otherwise.
func (o *GraphQLFieldConfig) GetTypeName() string {
	if o == nil || IsNil(o.TypeName) {
		var ret string
		return ret
	}
	return *o.TypeName
}

// GetTypeNameOk returns a tuple with the TypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLFieldConfig) GetTypeNameOk() (*string, bool) {
	if o == nil || IsNil(o.TypeName) {
		return nil, false
	}
	return o.TypeName, true
}

// HasTypeName returns a boolean if a field has been set.
func (o *GraphQLFieldConfig) HasTypeName() bool {
	if o != nil && !IsNil(o.TypeName) {
		return true
	}

	return false
}

// SetTypeName gets a reference to the given string and assigns it to the TypeName field.
func (o *GraphQLFieldConfig) SetTypeName(v string) {
	o.TypeName = &v
}

func (o GraphQLFieldConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLFieldConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DisableDefaultMapping) {
		toSerialize["disable_default_mapping"] = o.DisableDefaultMapping
	}
	if !IsNil(o.FieldName) {
		toSerialize["field_name"] = o.FieldName
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.TypeName) {
		toSerialize["type_name"] = o.TypeName
	}
	return toSerialize, nil
}

type NullableGraphQLFieldConfig struct {
	value *GraphQLFieldConfig
	isSet bool
}

func (v NullableGraphQLFieldConfig) Get() *GraphQLFieldConfig {
	return v.value
}

func (v *NullableGraphQLFieldConfig) Set(val *GraphQLFieldConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLFieldConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLFieldConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLFieldConfig(val *GraphQLFieldConfig) *NullableGraphQLFieldConfig {
	return &NullableGraphQLFieldConfig{value: val, isSet: true}
}

func (v NullableGraphQLFieldConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLFieldConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


