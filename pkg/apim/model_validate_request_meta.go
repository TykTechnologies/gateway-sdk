/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation). * Managing and listing policies. * Managing and listing API Definitions (only when not using the Tyk Dashboard). * Hot reloads / reloading a cluster configuration. * OAuth client creation (only when not using the Tyk Dashboard).  In order to use the Gateway API, you'll need to set the **secret** parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  **x-tyk-authorization: <your-secret>*** <br/>  <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 5.7.1
Contact: support@tyk.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the ValidateRequestMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ValidateRequestMeta{}

// ValidateRequestMeta struct for ValidateRequestMeta
type ValidateRequestMeta struct {
	Enabled           *bool   `json:"enabled,omitempty"`
	ErrorResponseCode *int32  `json:"error_response_code,omitempty"`
	Method            *string `json:"method,omitempty"`
	Path              *string `json:"path,omitempty"`
}

// NewValidateRequestMeta instantiates a new ValidateRequestMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewValidateRequestMeta() *ValidateRequestMeta {
	this := ValidateRequestMeta{}
	return &this
}

// NewValidateRequestMetaWithDefaults instantiates a new ValidateRequestMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewValidateRequestMetaWithDefaults() *ValidateRequestMeta {
	this := ValidateRequestMeta{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *ValidateRequestMeta) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateRequestMeta) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *ValidateRequestMeta) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *ValidateRequestMeta) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetErrorResponseCode returns the ErrorResponseCode field value if set, zero value otherwise.
func (o *ValidateRequestMeta) GetErrorResponseCode() int32 {
	if o == nil || IsNil(o.ErrorResponseCode) {
		var ret int32
		return ret
	}
	return *o.ErrorResponseCode
}

// GetErrorResponseCodeOk returns a tuple with the ErrorResponseCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateRequestMeta) GetErrorResponseCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorResponseCode) {
		return nil, false
	}
	return o.ErrorResponseCode, true
}

// HasErrorResponseCode returns a boolean if a field has been set.
func (o *ValidateRequestMeta) HasErrorResponseCode() bool {
	if o != nil && !IsNil(o.ErrorResponseCode) {
		return true
	}

	return false
}

// SetErrorResponseCode gets a reference to the given int32 and assigns it to the ErrorResponseCode field.
func (o *ValidateRequestMeta) SetErrorResponseCode(v int32) {
	o.ErrorResponseCode = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *ValidateRequestMeta) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateRequestMeta) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *ValidateRequestMeta) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *ValidateRequestMeta) SetMethod(v string) {
	o.Method = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ValidateRequestMeta) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ValidateRequestMeta) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ValidateRequestMeta) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ValidateRequestMeta) SetPath(v string) {
	o.Path = &v
}

func (o ValidateRequestMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ValidateRequestMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ErrorResponseCode) {
		toSerialize["error_response_code"] = o.ErrorResponseCode
	}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	return toSerialize, nil
}

type NullableValidateRequestMeta struct {
	value *ValidateRequestMeta
	isSet bool
}

func (v NullableValidateRequestMeta) Get() *ValidateRequestMeta {
	return v.value
}

func (v *NullableValidateRequestMeta) Set(val *ValidateRequestMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableValidateRequestMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableValidateRequestMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableValidateRequestMeta(val *ValidateRequestMeta) *NullableValidateRequestMeta {
	return &NullableValidateRequestMeta{value: val, isSet: true}
}

func (v NullableValidateRequestMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableValidateRequestMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
