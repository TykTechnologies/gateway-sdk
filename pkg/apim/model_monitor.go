/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Monitor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Monitor{}

// Monitor struct for Monitor
type Monitor struct {
	TriggerLimits []float32 `json:"trigger_limits,omitempty"`
}

// NewMonitor instantiates a new Monitor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitor() *Monitor {
	this := Monitor{}
	return &this
}

// NewMonitorWithDefaults instantiates a new Monitor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorWithDefaults() *Monitor {
	this := Monitor{}
	return &this
}

// GetTriggerLimits returns the TriggerLimits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Monitor) GetTriggerLimits() []float32 {
	if o == nil {
		var ret []float32
		return ret
	}
	return o.TriggerLimits
}

// GetTriggerLimitsOk returns a tuple with the TriggerLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Monitor) GetTriggerLimitsOk() ([]float32, bool) {
	if o == nil || IsNil(o.TriggerLimits) {
		return nil, false
	}
	return o.TriggerLimits, true
}

// HasTriggerLimits returns a boolean if a field has been set.
func (o *Monitor) HasTriggerLimits() bool {
	if o != nil && !IsNil(o.TriggerLimits) {
		return true
	}

	return false
}

// SetTriggerLimits gets a reference to the given []float32 and assigns it to the TriggerLimits field.
func (o *Monitor) SetTriggerLimits(v []float32) {
	o.TriggerLimits = v
}

func (o Monitor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Monitor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TriggerLimits != nil {
		toSerialize["trigger_limits"] = o.TriggerLimits
	}
	return toSerialize, nil
}

type NullableMonitor struct {
	value *Monitor
	isSet bool
}

func (v NullableMonitor) Get() *Monitor {
	return v.value
}

func (v *NullableMonitor) Set(val *Monitor) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitor) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitor(val *Monitor) *NullableMonitor {
	return &NullableMonitor{value: val, isSet: true}
}

func (v NullableMonitor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


