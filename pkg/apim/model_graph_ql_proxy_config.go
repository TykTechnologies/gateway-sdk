/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the GraphQLProxyConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLProxyConfig{}

// GraphQLProxyConfig struct for GraphQLProxyConfig
type GraphQLProxyConfig struct {
	AuthHeaders map[string]string `json:"auth_headers,omitempty"`
	RequestHeaders map[string]string `json:"request_headers,omitempty"`
	SubscriptionType *string `json:"subscription_type,omitempty"`
	UseResponseExtensions *GraphQLResponseExtensions `json:"use_response_extensions,omitempty"`
}

// NewGraphQLProxyConfig instantiates a new GraphQLProxyConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLProxyConfig() *GraphQLProxyConfig {
	this := GraphQLProxyConfig{}
	return &this
}

// NewGraphQLProxyConfigWithDefaults instantiates a new GraphQLProxyConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLProxyConfigWithDefaults() *GraphQLProxyConfig {
	this := GraphQLProxyConfig{}
	return &this
}

// GetAuthHeaders returns the AuthHeaders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphQLProxyConfig) GetAuthHeaders() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.AuthHeaders
}

// GetAuthHeadersOk returns a tuple with the AuthHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphQLProxyConfig) GetAuthHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AuthHeaders) {
		return nil, false
	}
	return &o.AuthHeaders, true
}

// HasAuthHeaders returns a boolean if a field has been set.
func (o *GraphQLProxyConfig) HasAuthHeaders() bool {
	if o != nil && !IsNil(o.AuthHeaders) {
		return true
	}

	return false
}

// SetAuthHeaders gets a reference to the given map[string]string and assigns it to the AuthHeaders field.
func (o *GraphQLProxyConfig) SetAuthHeaders(v map[string]string) {
	o.AuthHeaders = v
}

// GetRequestHeaders returns the RequestHeaders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GraphQLProxyConfig) GetRequestHeaders() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.RequestHeaders
}

// GetRequestHeadersOk returns a tuple with the RequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GraphQLProxyConfig) GetRequestHeadersOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.RequestHeaders) {
		return nil, false
	}
	return &o.RequestHeaders, true
}

// HasRequestHeaders returns a boolean if a field has been set.
func (o *GraphQLProxyConfig) HasRequestHeaders() bool {
	if o != nil && !IsNil(o.RequestHeaders) {
		return true
	}

	return false
}

// SetRequestHeaders gets a reference to the given map[string]string and assigns it to the RequestHeaders field.
func (o *GraphQLProxyConfig) SetRequestHeaders(v map[string]string) {
	o.RequestHeaders = v
}

// GetSubscriptionType returns the SubscriptionType field value if set, zero value otherwise.
func (o *GraphQLProxyConfig) GetSubscriptionType() string {
	if o == nil || IsNil(o.SubscriptionType) {
		var ret string
		return ret
	}
	return *o.SubscriptionType
}

// GetSubscriptionTypeOk returns a tuple with the SubscriptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLProxyConfig) GetSubscriptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionType) {
		return nil, false
	}
	return o.SubscriptionType, true
}

// HasSubscriptionType returns a boolean if a field has been set.
func (o *GraphQLProxyConfig) HasSubscriptionType() bool {
	if o != nil && !IsNil(o.SubscriptionType) {
		return true
	}

	return false
}

// SetSubscriptionType gets a reference to the given string and assigns it to the SubscriptionType field.
func (o *GraphQLProxyConfig) SetSubscriptionType(v string) {
	o.SubscriptionType = &v
}

// GetUseResponseExtensions returns the UseResponseExtensions field value if set, zero value otherwise.
func (o *GraphQLProxyConfig) GetUseResponseExtensions() GraphQLResponseExtensions {
	if o == nil || IsNil(o.UseResponseExtensions) {
		var ret GraphQLResponseExtensions
		return ret
	}
	return *o.UseResponseExtensions
}

// GetUseResponseExtensionsOk returns a tuple with the UseResponseExtensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLProxyConfig) GetUseResponseExtensionsOk() (*GraphQLResponseExtensions, bool) {
	if o == nil || IsNil(o.UseResponseExtensions) {
		return nil, false
	}
	return o.UseResponseExtensions, true
}

// HasUseResponseExtensions returns a boolean if a field has been set.
func (o *GraphQLProxyConfig) HasUseResponseExtensions() bool {
	if o != nil && !IsNil(o.UseResponseExtensions) {
		return true
	}

	return false
}

// SetUseResponseExtensions gets a reference to the given GraphQLResponseExtensions and assigns it to the UseResponseExtensions field.
func (o *GraphQLProxyConfig) SetUseResponseExtensions(v GraphQLResponseExtensions) {
	o.UseResponseExtensions = &v
}

func (o GraphQLProxyConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLProxyConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AuthHeaders != nil {
		toSerialize["auth_headers"] = o.AuthHeaders
	}
	if o.RequestHeaders != nil {
		toSerialize["request_headers"] = o.RequestHeaders
	}
	if !IsNil(o.SubscriptionType) {
		toSerialize["subscription_type"] = o.SubscriptionType
	}
	if !IsNil(o.UseResponseExtensions) {
		toSerialize["use_response_extensions"] = o.UseResponseExtensions
	}
	return toSerialize, nil
}

type NullableGraphQLProxyConfig struct {
	value *GraphQLProxyConfig
	isSet bool
}

func (v NullableGraphQLProxyConfig) Get() *GraphQLProxyConfig {
	return v.value
}

func (v *NullableGraphQLProxyConfig) Set(val *GraphQLProxyConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLProxyConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLProxyConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLProxyConfig(val *GraphQLProxyConfig) *NullableGraphQLProxyConfig {
	return &NullableGraphQLProxyConfig{value: val, isSet: true}
}

func (v NullableGraphQLProxyConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLProxyConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


