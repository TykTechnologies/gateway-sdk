/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation). * Managing and listing policies. * Managing and listing API Definitions (only when not using the Tyk Dashboard). * Hot reloads / reloading a cluster configuration. * OAuth client creation (only when not using the Tyk Dashboard).  In order to use the Gateway API, you'll need to set the **secret** parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  **x-tyk-authorization: <your-secret>*** <br/>  <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 5.7.1
Contact: support@tyk.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the XTykAPIGateway type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &XTykAPIGateway{}

// XTykAPIGateway struct for XTykAPIGateway
type XTykAPIGateway struct {
	Info       *Info       `json:"info,omitempty"`
	Middleware *Middleware `json:"middleware,omitempty"`
	Server     *Server     `json:"server,omitempty"`
	Upstream   *Upstream   `json:"upstream,omitempty"`
}

// NewXTykAPIGateway instantiates a new XTykAPIGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewXTykAPIGateway() *XTykAPIGateway {
	this := XTykAPIGateway{}
	return &this
}

// NewXTykAPIGatewayWithDefaults instantiates a new XTykAPIGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewXTykAPIGatewayWithDefaults() *XTykAPIGateway {
	this := XTykAPIGateway{}
	return &this
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *XTykAPIGateway) GetInfo() Info {
	if o == nil || IsNil(o.Info) {
		var ret Info
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XTykAPIGateway) GetInfoOk() (*Info, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *XTykAPIGateway) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given Info and assigns it to the Info field.
func (o *XTykAPIGateway) SetInfo(v Info) {
	o.Info = &v
}

// GetMiddleware returns the Middleware field value if set, zero value otherwise.
func (o *XTykAPIGateway) GetMiddleware() Middleware {
	if o == nil || IsNil(o.Middleware) {
		var ret Middleware
		return ret
	}
	return *o.Middleware
}

// GetMiddlewareOk returns a tuple with the Middleware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XTykAPIGateway) GetMiddlewareOk() (*Middleware, bool) {
	if o == nil || IsNil(o.Middleware) {
		return nil, false
	}
	return o.Middleware, true
}

// HasMiddleware returns a boolean if a field has been set.
func (o *XTykAPIGateway) HasMiddleware() bool {
	if o != nil && !IsNil(o.Middleware) {
		return true
	}

	return false
}

// SetMiddleware gets a reference to the given Middleware and assigns it to the Middleware field.
func (o *XTykAPIGateway) SetMiddleware(v Middleware) {
	o.Middleware = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *XTykAPIGateway) GetServer() Server {
	if o == nil || IsNil(o.Server) {
		var ret Server
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XTykAPIGateway) GetServerOk() (*Server, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *XTykAPIGateway) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given Server and assigns it to the Server field.
func (o *XTykAPIGateway) SetServer(v Server) {
	o.Server = &v
}

// GetUpstream returns the Upstream field value if set, zero value otherwise.
func (o *XTykAPIGateway) GetUpstream() Upstream {
	if o == nil || IsNil(o.Upstream) {
		var ret Upstream
		return ret
	}
	return *o.Upstream
}

// GetUpstreamOk returns a tuple with the Upstream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *XTykAPIGateway) GetUpstreamOk() (*Upstream, bool) {
	if o == nil || IsNil(o.Upstream) {
		return nil, false
	}
	return o.Upstream, true
}

// HasUpstream returns a boolean if a field has been set.
func (o *XTykAPIGateway) HasUpstream() bool {
	if o != nil && !IsNil(o.Upstream) {
		return true
	}

	return false
}

// SetUpstream gets a reference to the given Upstream and assigns it to the Upstream field.
func (o *XTykAPIGateway) SetUpstream(v Upstream) {
	o.Upstream = &v
}

func (o XTykAPIGateway) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o XTykAPIGateway) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Middleware) {
		toSerialize["middleware"] = o.Middleware
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Upstream) {
		toSerialize["upstream"] = o.Upstream
	}
	return toSerialize, nil
}

type NullableXTykAPIGateway struct {
	value *XTykAPIGateway
	isSet bool
}

func (v NullableXTykAPIGateway) Get() *XTykAPIGateway {
	return v.value
}

func (v *NullableXTykAPIGateway) Set(val *XTykAPIGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableXTykAPIGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableXTykAPIGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableXTykAPIGateway(val *XTykAPIGateway) *NullableXTykAPIGateway {
	return &NullableXTykAPIGateway{value: val, isSet: true}
}

func (v NullableXTykAPIGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableXTykAPIGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
