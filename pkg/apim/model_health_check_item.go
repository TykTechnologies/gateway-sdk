/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the HealthCheckItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HealthCheckItem{}

// HealthCheckItem struct for HealthCheckItem
type HealthCheckItem struct {
	ComponentId *string `json:"componentId,omitempty"`
	ComponentType *string `json:"componentType,omitempty"`
	Output *string `json:"output,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *string `json:"time,omitempty"`
}

// NewHealthCheckItem instantiates a new HealthCheckItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHealthCheckItem() *HealthCheckItem {
	this := HealthCheckItem{}
	return &this
}

// NewHealthCheckItemWithDefaults instantiates a new HealthCheckItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHealthCheckItemWithDefaults() *HealthCheckItem {
	this := HealthCheckItem{}
	return &this
}

// GetComponentId returns the ComponentId field value if set, zero value otherwise.
func (o *HealthCheckItem) GetComponentId() string {
	if o == nil || IsNil(o.ComponentId) {
		var ret string
		return ret
	}
	return *o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckItem) GetComponentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentId) {
		return nil, false
	}
	return o.ComponentId, true
}

// HasComponentId returns a boolean if a field has been set.
func (o *HealthCheckItem) HasComponentId() bool {
	if o != nil && !IsNil(o.ComponentId) {
		return true
	}

	return false
}

// SetComponentId gets a reference to the given string and assigns it to the ComponentId field.
func (o *HealthCheckItem) SetComponentId(v string) {
	o.ComponentId = &v
}

// GetComponentType returns the ComponentType field value if set, zero value otherwise.
func (o *HealthCheckItem) GetComponentType() string {
	if o == nil || IsNil(o.ComponentType) {
		var ret string
		return ret
	}
	return *o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckItem) GetComponentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentType) {
		return nil, false
	}
	return o.ComponentType, true
}

// HasComponentType returns a boolean if a field has been set.
func (o *HealthCheckItem) HasComponentType() bool {
	if o != nil && !IsNil(o.ComponentType) {
		return true
	}

	return false
}

// SetComponentType gets a reference to the given string and assigns it to the ComponentType field.
func (o *HealthCheckItem) SetComponentType(v string) {
	o.ComponentType = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *HealthCheckItem) GetOutput() string {
	if o == nil || IsNil(o.Output) {
		var ret string
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckItem) GetOutputOk() (*string, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *HealthCheckItem) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given string and assigns it to the Output field.
func (o *HealthCheckItem) SetOutput(v string) {
	o.Output = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *HealthCheckItem) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckItem) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *HealthCheckItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *HealthCheckItem) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *HealthCheckItem) GetTime() string {
	if o == nil || IsNil(o.Time) {
		var ret string
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HealthCheckItem) GetTimeOk() (*string, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *HealthCheckItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given string and assigns it to the Time field.
func (o *HealthCheckItem) SetTime(v string) {
	o.Time = &v
}

func (o HealthCheckItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HealthCheckItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentId) {
		toSerialize["componentId"] = o.ComponentId
	}
	if !IsNil(o.ComponentType) {
		toSerialize["componentType"] = o.ComponentType
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableHealthCheckItem struct {
	value *HealthCheckItem
	isSet bool
}

func (v NullableHealthCheckItem) Get() *HealthCheckItem {
	return v.value
}

func (v *NullableHealthCheckItem) Set(val *HealthCheckItem) {
	v.value = val
	v.isSet = true
}

func (v NullableHealthCheckItem) IsSet() bool {
	return v.isSet
}

func (v *NullableHealthCheckItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHealthCheckItem(val *HealthCheckItem) *NullableHealthCheckItem {
	return &NullableHealthCheckItem{value: val, isSet: true}
}

func (v NullableHealthCheckItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHealthCheckItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


