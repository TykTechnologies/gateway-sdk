/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the APIDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &APIDefinition{}

// APIDefinition struct for APIDefinition
type APIDefinition struct {
	Tags []string `json:"tags,omitempty"`
	CORS *APIDefinitionCORS `json:"CORS,omitempty"`
	Active *bool `json:"active,omitempty"`
	AllowedIps []string `json:"allowed_ips,omitempty"`
	ApiId *string `json:"api_id,omitempty"`
	Auth *Auth `json:"auth,omitempty"`
	AuthProvider *AuthProviderMeta `json:"auth_provider,omitempty"`
	BaseIdentityProvidedBy *string `json:"base_identity_provided_by,omitempty"`
	BasicAuth *APIDefinitionBasicAuth `json:"basic_auth,omitempty"`
	BlacklistedIps []string `json:"blacklisted_ips,omitempty"`
	CacheOptions *CacheOptions `json:"cache_options,omitempty"`
	Certificates []string `json:"certificates,omitempty"`
	ClientCertificates []string `json:"client_certificates,omitempty"`
	ConfigData map[string]map[string]interface{} `json:"config_data,omitempty"`
	CustomMiddleware *MiddlewareSection `json:"custom_middleware,omitempty"`
	CustomMiddlewareBundle *string `json:"custom_middleware_bundle,omitempty"`
	Definition *APIDefinitionDefinition `json:"definition,omitempty"`
	DisableQuota *bool `json:"disable_quota,omitempty"`
	DisableRateLimit *bool `json:"disable_rate_limit,omitempty"`
	DoNotTrack *bool `json:"do_not_track,omitempty"`
	Domain *string `json:"domain,omitempty"`
	DontSetQuotaOnCreate *bool `json:"dont_set_quota_on_create,omitempty"`
	EnableBatchRequestSupport *bool `json:"enable_batch_request_support,omitempty"`
	EnableContextVars *bool `json:"enable_context_vars,omitempty"`
	EnableCoprocessAuth *bool `json:"enable_coprocess_auth,omitempty"`
	EnableIpBlacklisting *bool `json:"enable_ip_blacklisting,omitempty"`
	EnableIpWhitelisting *bool `json:"enable_ip_whitelisting,omitempty"`
	EnableJwt *bool `json:"enable_jwt,omitempty"`
	EnableSignatureChecking *bool `json:"enable_signature_checking,omitempty"`
	EventHandlers *EventHandlerMetaConfig `json:"event_handlers,omitempty"`
	ExpireAnalyticsAfter *int64 `json:"expire_analytics_after,omitempty"`
	GlobalRateLimit *GlobalRateLimit `json:"global_rate_limit,omitempty"`
	HmacAllowedAlgorithms []string `json:"hmac_allowed_algorithms,omitempty"`
	HmacAllowedClockSkew *float64 `json:"hmac_allowed_clock_skew,omitempty"`
	// http://www.mongodb.org/display/DOCS/Object+IDs
	Id *string `json:"id,omitempty"`
	Internal *bool `json:"internal,omitempty"`
	JwtClientBaseField *string `json:"jwt_client_base_field,omitempty"`
	JwtExpiresAtValidationSkew *int32 `json:"jwt_expires_at_validation_skew,omitempty"`
	JwtIdentityBaseField *string `json:"jwt_identity_base_field,omitempty"`
	JwtIssuedAtValidationSkew *int32 `json:"jwt_issued_at_validation_skew,omitempty"`
	JwtNotBeforeValidationSkew *int32 `json:"jwt_not_before_validation_skew,omitempty"`
	JwtPolicyFieldName *string `json:"jwt_policy_field_name,omitempty"`
	JwtScopeClaimName *string `json:"jwt_scope_claim_name,omitempty"`
	JwtScopeToPolicyMapping *map[string]string `json:"jwt_scope_to_policy_mapping,omitempty"`
	JwtSigningMethod *string `json:"jwt_signing_method,omitempty"`
	JwtSkipKid *bool `json:"jwt_skip_kid,omitempty"`
	JwtSource *string `json:"jwt_source,omitempty"`
	Name *string `json:"name,omitempty"`
	Notifications *NotificationsManager `json:"notifications,omitempty"`
	OauthMeta *APIDefinitionOauthMeta `json:"oauth_meta,omitempty"`
	OpenidOptions *OpenIDOptions `json:"openid_options,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	PinnedPublicKeys *map[string]string `json:"pinned_public_keys,omitempty"`
	Proxy *APIDefinitionProxy `json:"proxy,omitempty"`
	ResponseProcessors []ResponseProcessor `json:"response_processors,omitempty"`
	SessionLifetime *int64 `json:"session_lifetime,omitempty"`
	SessionProvider *SessionProviderMeta `json:"session_provider,omitempty"`
	Slug *string `json:"slug,omitempty"`
	StripAuthData *bool `json:"strip_auth_data,omitempty"`
	TagHeaders []string `json:"tag_headers,omitempty"`
	UpstreamCertificates *map[string]string `json:"upstream_certificates,omitempty"`
	UptimeTests *APIDefinitionUptimeTests `json:"uptime_tests,omitempty"`
	UseBasicAuth *bool `json:"use_basic_auth,omitempty"`
	UseKeyless *bool `json:"use_keyless,omitempty"`
	UseMutualTlsAuth *bool `json:"use_mutual_tls_auth,omitempty"`
	UseOauth2 *bool `json:"use_oauth2,omitempty"`
	UseOpenid *bool `json:"use_openid,omitempty"`
	UseStandardAuth *bool `json:"use_standard_auth,omitempty"`
	VersionData *APIDefinitionVersionData `json:"version_data,omitempty"`
}

// NewAPIDefinition instantiates a new APIDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIDefinition() *APIDefinition {
	this := APIDefinition{}
	return &this
}

// NewAPIDefinitionWithDefaults instantiates a new APIDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIDefinitionWithDefaults() *APIDefinition {
	this := APIDefinition{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *APIDefinition) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *APIDefinition) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *APIDefinition) SetTags(v []string) {
	o.Tags = v
}

// GetCORS returns the CORS field value if set, zero value otherwise.
func (o *APIDefinition) GetCORS() APIDefinitionCORS {
	if o == nil || IsNil(o.CORS) {
		var ret APIDefinitionCORS
		return ret
	}
	return *o.CORS
}

// GetCORSOk returns a tuple with the CORS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetCORSOk() (*APIDefinitionCORS, bool) {
	if o == nil || IsNil(o.CORS) {
		return nil, false
	}
	return o.CORS, true
}

// HasCORS returns a boolean if a field has been set.
func (o *APIDefinition) HasCORS() bool {
	if o != nil && !IsNil(o.CORS) {
		return true
	}

	return false
}

// SetCORS gets a reference to the given APIDefinitionCORS and assigns it to the CORS field.
func (o *APIDefinition) SetCORS(v APIDefinitionCORS) {
	o.CORS = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *APIDefinition) GetActive() bool {
	if o == nil || IsNil(o.Active) {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.Active) {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *APIDefinition) HasActive() bool {
	if o != nil && !IsNil(o.Active) {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *APIDefinition) SetActive(v bool) {
	o.Active = &v
}

// GetAllowedIps returns the AllowedIps field value if set, zero value otherwise.
func (o *APIDefinition) GetAllowedIps() []string {
	if o == nil || IsNil(o.AllowedIps) {
		var ret []string
		return ret
	}
	return o.AllowedIps
}

// GetAllowedIpsOk returns a tuple with the AllowedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetAllowedIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedIps) {
		return nil, false
	}
	return o.AllowedIps, true
}

// HasAllowedIps returns a boolean if a field has been set.
func (o *APIDefinition) HasAllowedIps() bool {
	if o != nil && !IsNil(o.AllowedIps) {
		return true
	}

	return false
}

// SetAllowedIps gets a reference to the given []string and assigns it to the AllowedIps field.
func (o *APIDefinition) SetAllowedIps(v []string) {
	o.AllowedIps = v
}

// GetApiId returns the ApiId field value if set, zero value otherwise.
func (o *APIDefinition) GetApiId() string {
	if o == nil || IsNil(o.ApiId) {
		var ret string
		return ret
	}
	return *o.ApiId
}

// GetApiIdOk returns a tuple with the ApiId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetApiIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApiId) {
		return nil, false
	}
	return o.ApiId, true
}

// HasApiId returns a boolean if a field has been set.
func (o *APIDefinition) HasApiId() bool {
	if o != nil && !IsNil(o.ApiId) {
		return true
	}

	return false
}

// SetApiId gets a reference to the given string and assigns it to the ApiId field.
func (o *APIDefinition) SetApiId(v string) {
	o.ApiId = &v
}

// GetAuth returns the Auth field value if set, zero value otherwise.
func (o *APIDefinition) GetAuth() Auth {
	if o == nil || IsNil(o.Auth) {
		var ret Auth
		return ret
	}
	return *o.Auth
}

// GetAuthOk returns a tuple with the Auth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetAuthOk() (*Auth, bool) {
	if o == nil || IsNil(o.Auth) {
		return nil, false
	}
	return o.Auth, true
}

// HasAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasAuth() bool {
	if o != nil && !IsNil(o.Auth) {
		return true
	}

	return false
}

// SetAuth gets a reference to the given Auth and assigns it to the Auth field.
func (o *APIDefinition) SetAuth(v Auth) {
	o.Auth = &v
}

// GetAuthProvider returns the AuthProvider field value if set, zero value otherwise.
func (o *APIDefinition) GetAuthProvider() AuthProviderMeta {
	if o == nil || IsNil(o.AuthProvider) {
		var ret AuthProviderMeta
		return ret
	}
	return *o.AuthProvider
}

// GetAuthProviderOk returns a tuple with the AuthProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetAuthProviderOk() (*AuthProviderMeta, bool) {
	if o == nil || IsNil(o.AuthProvider) {
		return nil, false
	}
	return o.AuthProvider, true
}

// HasAuthProvider returns a boolean if a field has been set.
func (o *APIDefinition) HasAuthProvider() bool {
	if o != nil && !IsNil(o.AuthProvider) {
		return true
	}

	return false
}

// SetAuthProvider gets a reference to the given AuthProviderMeta and assigns it to the AuthProvider field.
func (o *APIDefinition) SetAuthProvider(v AuthProviderMeta) {
	o.AuthProvider = &v
}

// GetBaseIdentityProvidedBy returns the BaseIdentityProvidedBy field value if set, zero value otherwise.
func (o *APIDefinition) GetBaseIdentityProvidedBy() string {
	if o == nil || IsNil(o.BaseIdentityProvidedBy) {
		var ret string
		return ret
	}
	return *o.BaseIdentityProvidedBy
}

// GetBaseIdentityProvidedByOk returns a tuple with the BaseIdentityProvidedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetBaseIdentityProvidedByOk() (*string, bool) {
	if o == nil || IsNil(o.BaseIdentityProvidedBy) {
		return nil, false
	}
	return o.BaseIdentityProvidedBy, true
}

// HasBaseIdentityProvidedBy returns a boolean if a field has been set.
func (o *APIDefinition) HasBaseIdentityProvidedBy() bool {
	if o != nil && !IsNil(o.BaseIdentityProvidedBy) {
		return true
	}

	return false
}

// SetBaseIdentityProvidedBy gets a reference to the given string and assigns it to the BaseIdentityProvidedBy field.
func (o *APIDefinition) SetBaseIdentityProvidedBy(v string) {
	o.BaseIdentityProvidedBy = &v
}

// GetBasicAuth returns the BasicAuth field value if set, zero value otherwise.
func (o *APIDefinition) GetBasicAuth() APIDefinitionBasicAuth {
	if o == nil || IsNil(o.BasicAuth) {
		var ret APIDefinitionBasicAuth
		return ret
	}
	return *o.BasicAuth
}

// GetBasicAuthOk returns a tuple with the BasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetBasicAuthOk() (*APIDefinitionBasicAuth, bool) {
	if o == nil || IsNil(o.BasicAuth) {
		return nil, false
	}
	return o.BasicAuth, true
}

// HasBasicAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasBasicAuth() bool {
	if o != nil && !IsNil(o.BasicAuth) {
		return true
	}

	return false
}

// SetBasicAuth gets a reference to the given APIDefinitionBasicAuth and assigns it to the BasicAuth field.
func (o *APIDefinition) SetBasicAuth(v APIDefinitionBasicAuth) {
	o.BasicAuth = &v
}

// GetBlacklistedIps returns the BlacklistedIps field value if set, zero value otherwise.
func (o *APIDefinition) GetBlacklistedIps() []string {
	if o == nil || IsNil(o.BlacklistedIps) {
		var ret []string
		return ret
	}
	return o.BlacklistedIps
}

// GetBlacklistedIpsOk returns a tuple with the BlacklistedIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetBlacklistedIpsOk() ([]string, bool) {
	if o == nil || IsNil(o.BlacklistedIps) {
		return nil, false
	}
	return o.BlacklistedIps, true
}

// HasBlacklistedIps returns a boolean if a field has been set.
func (o *APIDefinition) HasBlacklistedIps() bool {
	if o != nil && !IsNil(o.BlacklistedIps) {
		return true
	}

	return false
}

// SetBlacklistedIps gets a reference to the given []string and assigns it to the BlacklistedIps field.
func (o *APIDefinition) SetBlacklistedIps(v []string) {
	o.BlacklistedIps = v
}

// GetCacheOptions returns the CacheOptions field value if set, zero value otherwise.
func (o *APIDefinition) GetCacheOptions() CacheOptions {
	if o == nil || IsNil(o.CacheOptions) {
		var ret CacheOptions
		return ret
	}
	return *o.CacheOptions
}

// GetCacheOptionsOk returns a tuple with the CacheOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetCacheOptionsOk() (*CacheOptions, bool) {
	if o == nil || IsNil(o.CacheOptions) {
		return nil, false
	}
	return o.CacheOptions, true
}

// HasCacheOptions returns a boolean if a field has been set.
func (o *APIDefinition) HasCacheOptions() bool {
	if o != nil && !IsNil(o.CacheOptions) {
		return true
	}

	return false
}

// SetCacheOptions gets a reference to the given CacheOptions and assigns it to the CacheOptions field.
func (o *APIDefinition) SetCacheOptions(v CacheOptions) {
	o.CacheOptions = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise.
func (o *APIDefinition) GetCertificates() []string {
	if o == nil || IsNil(o.Certificates) {
		var ret []string
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetCertificatesOk() ([]string, bool) {
	if o == nil || IsNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *APIDefinition) HasCertificates() bool {
	if o != nil && !IsNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []string and assigns it to the Certificates field.
func (o *APIDefinition) SetCertificates(v []string) {
	o.Certificates = v
}

// GetClientCertificates returns the ClientCertificates field value if set, zero value otherwise.
func (o *APIDefinition) GetClientCertificates() []string {
	if o == nil || IsNil(o.ClientCertificates) {
		var ret []string
		return ret
	}
	return o.ClientCertificates
}

// GetClientCertificatesOk returns a tuple with the ClientCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetClientCertificatesOk() ([]string, bool) {
	if o == nil || IsNil(o.ClientCertificates) {
		return nil, false
	}
	return o.ClientCertificates, true
}

// HasClientCertificates returns a boolean if a field has been set.
func (o *APIDefinition) HasClientCertificates() bool {
	if o != nil && !IsNil(o.ClientCertificates) {
		return true
	}

	return false
}

// SetClientCertificates gets a reference to the given []string and assigns it to the ClientCertificates field.
func (o *APIDefinition) SetClientCertificates(v []string) {
	o.ClientCertificates = v
}

// GetConfigData returns the ConfigData field value if set, zero value otherwise.
func (o *APIDefinition) GetConfigData() map[string]map[string]interface{} {
	if o == nil || IsNil(o.ConfigData) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return o.ConfigData
}

// GetConfigDataOk returns a tuple with the ConfigData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetConfigDataOk() (map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.ConfigData) {
		return map[string]map[string]interface{}{}, false
	}
	return o.ConfigData, true
}

// HasConfigData returns a boolean if a field has been set.
func (o *APIDefinition) HasConfigData() bool {
	if o != nil && !IsNil(o.ConfigData) {
		return true
	}

	return false
}

// SetConfigData gets a reference to the given map[string]map[string]interface{} and assigns it to the ConfigData field.
func (o *APIDefinition) SetConfigData(v map[string]map[string]interface{}) {
	o.ConfigData = v
}

// GetCustomMiddleware returns the CustomMiddleware field value if set, zero value otherwise.
func (o *APIDefinition) GetCustomMiddleware() MiddlewareSection {
	if o == nil || IsNil(o.CustomMiddleware) {
		var ret MiddlewareSection
		return ret
	}
	return *o.CustomMiddleware
}

// GetCustomMiddlewareOk returns a tuple with the CustomMiddleware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetCustomMiddlewareOk() (*MiddlewareSection, bool) {
	if o == nil || IsNil(o.CustomMiddleware) {
		return nil, false
	}
	return o.CustomMiddleware, true
}

// HasCustomMiddleware returns a boolean if a field has been set.
func (o *APIDefinition) HasCustomMiddleware() bool {
	if o != nil && !IsNil(o.CustomMiddleware) {
		return true
	}

	return false
}

// SetCustomMiddleware gets a reference to the given MiddlewareSection and assigns it to the CustomMiddleware field.
func (o *APIDefinition) SetCustomMiddleware(v MiddlewareSection) {
	o.CustomMiddleware = &v
}

// GetCustomMiddlewareBundle returns the CustomMiddlewareBundle field value if set, zero value otherwise.
func (o *APIDefinition) GetCustomMiddlewareBundle() string {
	if o == nil || IsNil(o.CustomMiddlewareBundle) {
		var ret string
		return ret
	}
	return *o.CustomMiddlewareBundle
}

// GetCustomMiddlewareBundleOk returns a tuple with the CustomMiddlewareBundle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetCustomMiddlewareBundleOk() (*string, bool) {
	if o == nil || IsNil(o.CustomMiddlewareBundle) {
		return nil, false
	}
	return o.CustomMiddlewareBundle, true
}

// HasCustomMiddlewareBundle returns a boolean if a field has been set.
func (o *APIDefinition) HasCustomMiddlewareBundle() bool {
	if o != nil && !IsNil(o.CustomMiddlewareBundle) {
		return true
	}

	return false
}

// SetCustomMiddlewareBundle gets a reference to the given string and assigns it to the CustomMiddlewareBundle field.
func (o *APIDefinition) SetCustomMiddlewareBundle(v string) {
	o.CustomMiddlewareBundle = &v
}

// GetDefinition returns the Definition field value if set, zero value otherwise.
func (o *APIDefinition) GetDefinition() APIDefinitionDefinition {
	if o == nil || IsNil(o.Definition) {
		var ret APIDefinitionDefinition
		return ret
	}
	return *o.Definition
}

// GetDefinitionOk returns a tuple with the Definition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDefinitionOk() (*APIDefinitionDefinition, bool) {
	if o == nil || IsNil(o.Definition) {
		return nil, false
	}
	return o.Definition, true
}

// HasDefinition returns a boolean if a field has been set.
func (o *APIDefinition) HasDefinition() bool {
	if o != nil && !IsNil(o.Definition) {
		return true
	}

	return false
}

// SetDefinition gets a reference to the given APIDefinitionDefinition and assigns it to the Definition field.
func (o *APIDefinition) SetDefinition(v APIDefinitionDefinition) {
	o.Definition = &v
}

// GetDisableQuota returns the DisableQuota field value if set, zero value otherwise.
func (o *APIDefinition) GetDisableQuota() bool {
	if o == nil || IsNil(o.DisableQuota) {
		var ret bool
		return ret
	}
	return *o.DisableQuota
}

// GetDisableQuotaOk returns a tuple with the DisableQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDisableQuotaOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableQuota) {
		return nil, false
	}
	return o.DisableQuota, true
}

// HasDisableQuota returns a boolean if a field has been set.
func (o *APIDefinition) HasDisableQuota() bool {
	if o != nil && !IsNil(o.DisableQuota) {
		return true
	}

	return false
}

// SetDisableQuota gets a reference to the given bool and assigns it to the DisableQuota field.
func (o *APIDefinition) SetDisableQuota(v bool) {
	o.DisableQuota = &v
}

// GetDisableRateLimit returns the DisableRateLimit field value if set, zero value otherwise.
func (o *APIDefinition) GetDisableRateLimit() bool {
	if o == nil || IsNil(o.DisableRateLimit) {
		var ret bool
		return ret
	}
	return *o.DisableRateLimit
}

// GetDisableRateLimitOk returns a tuple with the DisableRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDisableRateLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableRateLimit) {
		return nil, false
	}
	return o.DisableRateLimit, true
}

// HasDisableRateLimit returns a boolean if a field has been set.
func (o *APIDefinition) HasDisableRateLimit() bool {
	if o != nil && !IsNil(o.DisableRateLimit) {
		return true
	}

	return false
}

// SetDisableRateLimit gets a reference to the given bool and assigns it to the DisableRateLimit field.
func (o *APIDefinition) SetDisableRateLimit(v bool) {
	o.DisableRateLimit = &v
}

// GetDoNotTrack returns the DoNotTrack field value if set, zero value otherwise.
func (o *APIDefinition) GetDoNotTrack() bool {
	if o == nil || IsNil(o.DoNotTrack) {
		var ret bool
		return ret
	}
	return *o.DoNotTrack
}

// GetDoNotTrackOk returns a tuple with the DoNotTrack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDoNotTrackOk() (*bool, bool) {
	if o == nil || IsNil(o.DoNotTrack) {
		return nil, false
	}
	return o.DoNotTrack, true
}

// HasDoNotTrack returns a boolean if a field has been set.
func (o *APIDefinition) HasDoNotTrack() bool {
	if o != nil && !IsNil(o.DoNotTrack) {
		return true
	}

	return false
}

// SetDoNotTrack gets a reference to the given bool and assigns it to the DoNotTrack field.
func (o *APIDefinition) SetDoNotTrack(v bool) {
	o.DoNotTrack = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *APIDefinition) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *APIDefinition) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *APIDefinition) SetDomain(v string) {
	o.Domain = &v
}

// GetDontSetQuotaOnCreate returns the DontSetQuotaOnCreate field value if set, zero value otherwise.
func (o *APIDefinition) GetDontSetQuotaOnCreate() bool {
	if o == nil || IsNil(o.DontSetQuotaOnCreate) {
		var ret bool
		return ret
	}
	return *o.DontSetQuotaOnCreate
}

// GetDontSetQuotaOnCreateOk returns a tuple with the DontSetQuotaOnCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetDontSetQuotaOnCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.DontSetQuotaOnCreate) {
		return nil, false
	}
	return o.DontSetQuotaOnCreate, true
}

// HasDontSetQuotaOnCreate returns a boolean if a field has been set.
func (o *APIDefinition) HasDontSetQuotaOnCreate() bool {
	if o != nil && !IsNil(o.DontSetQuotaOnCreate) {
		return true
	}

	return false
}

// SetDontSetQuotaOnCreate gets a reference to the given bool and assigns it to the DontSetQuotaOnCreate field.
func (o *APIDefinition) SetDontSetQuotaOnCreate(v bool) {
	o.DontSetQuotaOnCreate = &v
}

// GetEnableBatchRequestSupport returns the EnableBatchRequestSupport field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableBatchRequestSupport() bool {
	if o == nil || IsNil(o.EnableBatchRequestSupport) {
		var ret bool
		return ret
	}
	return *o.EnableBatchRequestSupport
}

// GetEnableBatchRequestSupportOk returns a tuple with the EnableBatchRequestSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableBatchRequestSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableBatchRequestSupport) {
		return nil, false
	}
	return o.EnableBatchRequestSupport, true
}

// HasEnableBatchRequestSupport returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableBatchRequestSupport() bool {
	if o != nil && !IsNil(o.EnableBatchRequestSupport) {
		return true
	}

	return false
}

// SetEnableBatchRequestSupport gets a reference to the given bool and assigns it to the EnableBatchRequestSupport field.
func (o *APIDefinition) SetEnableBatchRequestSupport(v bool) {
	o.EnableBatchRequestSupport = &v
}

// GetEnableContextVars returns the EnableContextVars field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableContextVars() bool {
	if o == nil || IsNil(o.EnableContextVars) {
		var ret bool
		return ret
	}
	return *o.EnableContextVars
}

// GetEnableContextVarsOk returns a tuple with the EnableContextVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableContextVarsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableContextVars) {
		return nil, false
	}
	return o.EnableContextVars, true
}

// HasEnableContextVars returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableContextVars() bool {
	if o != nil && !IsNil(o.EnableContextVars) {
		return true
	}

	return false
}

// SetEnableContextVars gets a reference to the given bool and assigns it to the EnableContextVars field.
func (o *APIDefinition) SetEnableContextVars(v bool) {
	o.EnableContextVars = &v
}

// GetEnableCoprocessAuth returns the EnableCoprocessAuth field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableCoprocessAuth() bool {
	if o == nil || IsNil(o.EnableCoprocessAuth) {
		var ret bool
		return ret
	}
	return *o.EnableCoprocessAuth
}

// GetEnableCoprocessAuthOk returns a tuple with the EnableCoprocessAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableCoprocessAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableCoprocessAuth) {
		return nil, false
	}
	return o.EnableCoprocessAuth, true
}

// HasEnableCoprocessAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableCoprocessAuth() bool {
	if o != nil && !IsNil(o.EnableCoprocessAuth) {
		return true
	}

	return false
}

// SetEnableCoprocessAuth gets a reference to the given bool and assigns it to the EnableCoprocessAuth field.
func (o *APIDefinition) SetEnableCoprocessAuth(v bool) {
	o.EnableCoprocessAuth = &v
}

// GetEnableIpBlacklisting returns the EnableIpBlacklisting field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableIpBlacklisting() bool {
	if o == nil || IsNil(o.EnableIpBlacklisting) {
		var ret bool
		return ret
	}
	return *o.EnableIpBlacklisting
}

// GetEnableIpBlacklistingOk returns a tuple with the EnableIpBlacklisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableIpBlacklistingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIpBlacklisting) {
		return nil, false
	}
	return o.EnableIpBlacklisting, true
}

// HasEnableIpBlacklisting returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableIpBlacklisting() bool {
	if o != nil && !IsNil(o.EnableIpBlacklisting) {
		return true
	}

	return false
}

// SetEnableIpBlacklisting gets a reference to the given bool and assigns it to the EnableIpBlacklisting field.
func (o *APIDefinition) SetEnableIpBlacklisting(v bool) {
	o.EnableIpBlacklisting = &v
}

// GetEnableIpWhitelisting returns the EnableIpWhitelisting field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableIpWhitelisting() bool {
	if o == nil || IsNil(o.EnableIpWhitelisting) {
		var ret bool
		return ret
	}
	return *o.EnableIpWhitelisting
}

// GetEnableIpWhitelistingOk returns a tuple with the EnableIpWhitelisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableIpWhitelistingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableIpWhitelisting) {
		return nil, false
	}
	return o.EnableIpWhitelisting, true
}

// HasEnableIpWhitelisting returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableIpWhitelisting() bool {
	if o != nil && !IsNil(o.EnableIpWhitelisting) {
		return true
	}

	return false
}

// SetEnableIpWhitelisting gets a reference to the given bool and assigns it to the EnableIpWhitelisting field.
func (o *APIDefinition) SetEnableIpWhitelisting(v bool) {
	o.EnableIpWhitelisting = &v
}

// GetEnableJwt returns the EnableJwt field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableJwt() bool {
	if o == nil || IsNil(o.EnableJwt) {
		var ret bool
		return ret
	}
	return *o.EnableJwt
}

// GetEnableJwtOk returns a tuple with the EnableJwt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableJwtOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableJwt) {
		return nil, false
	}
	return o.EnableJwt, true
}

// HasEnableJwt returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableJwt() bool {
	if o != nil && !IsNil(o.EnableJwt) {
		return true
	}

	return false
}

// SetEnableJwt gets a reference to the given bool and assigns it to the EnableJwt field.
func (o *APIDefinition) SetEnableJwt(v bool) {
	o.EnableJwt = &v
}

// GetEnableSignatureChecking returns the EnableSignatureChecking field value if set, zero value otherwise.
func (o *APIDefinition) GetEnableSignatureChecking() bool {
	if o == nil || IsNil(o.EnableSignatureChecking) {
		var ret bool
		return ret
	}
	return *o.EnableSignatureChecking
}

// GetEnableSignatureCheckingOk returns a tuple with the EnableSignatureChecking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEnableSignatureCheckingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSignatureChecking) {
		return nil, false
	}
	return o.EnableSignatureChecking, true
}

// HasEnableSignatureChecking returns a boolean if a field has been set.
func (o *APIDefinition) HasEnableSignatureChecking() bool {
	if o != nil && !IsNil(o.EnableSignatureChecking) {
		return true
	}

	return false
}

// SetEnableSignatureChecking gets a reference to the given bool and assigns it to the EnableSignatureChecking field.
func (o *APIDefinition) SetEnableSignatureChecking(v bool) {
	o.EnableSignatureChecking = &v
}

// GetEventHandlers returns the EventHandlers field value if set, zero value otherwise.
func (o *APIDefinition) GetEventHandlers() EventHandlerMetaConfig {
	if o == nil || IsNil(o.EventHandlers) {
		var ret EventHandlerMetaConfig
		return ret
	}
	return *o.EventHandlers
}

// GetEventHandlersOk returns a tuple with the EventHandlers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetEventHandlersOk() (*EventHandlerMetaConfig, bool) {
	if o == nil || IsNil(o.EventHandlers) {
		return nil, false
	}
	return o.EventHandlers, true
}

// HasEventHandlers returns a boolean if a field has been set.
func (o *APIDefinition) HasEventHandlers() bool {
	if o != nil && !IsNil(o.EventHandlers) {
		return true
	}

	return false
}

// SetEventHandlers gets a reference to the given EventHandlerMetaConfig and assigns it to the EventHandlers field.
func (o *APIDefinition) SetEventHandlers(v EventHandlerMetaConfig) {
	o.EventHandlers = &v
}

// GetExpireAnalyticsAfter returns the ExpireAnalyticsAfter field value if set, zero value otherwise.
func (o *APIDefinition) GetExpireAnalyticsAfter() int64 {
	if o == nil || IsNil(o.ExpireAnalyticsAfter) {
		var ret int64
		return ret
	}
	return *o.ExpireAnalyticsAfter
}

// GetExpireAnalyticsAfterOk returns a tuple with the ExpireAnalyticsAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetExpireAnalyticsAfterOk() (*int64, bool) {
	if o == nil || IsNil(o.ExpireAnalyticsAfter) {
		return nil, false
	}
	return o.ExpireAnalyticsAfter, true
}

// HasExpireAnalyticsAfter returns a boolean if a field has been set.
func (o *APIDefinition) HasExpireAnalyticsAfter() bool {
	if o != nil && !IsNil(o.ExpireAnalyticsAfter) {
		return true
	}

	return false
}

// SetExpireAnalyticsAfter gets a reference to the given int64 and assigns it to the ExpireAnalyticsAfter field.
func (o *APIDefinition) SetExpireAnalyticsAfter(v int64) {
	o.ExpireAnalyticsAfter = &v
}

// GetGlobalRateLimit returns the GlobalRateLimit field value if set, zero value otherwise.
func (o *APIDefinition) GetGlobalRateLimit() GlobalRateLimit {
	if o == nil || IsNil(o.GlobalRateLimit) {
		var ret GlobalRateLimit
		return ret
	}
	return *o.GlobalRateLimit
}

// GetGlobalRateLimitOk returns a tuple with the GlobalRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetGlobalRateLimitOk() (*GlobalRateLimit, bool) {
	if o == nil || IsNil(o.GlobalRateLimit) {
		return nil, false
	}
	return o.GlobalRateLimit, true
}

// HasGlobalRateLimit returns a boolean if a field has been set.
func (o *APIDefinition) HasGlobalRateLimit() bool {
	if o != nil && !IsNil(o.GlobalRateLimit) {
		return true
	}

	return false
}

// SetGlobalRateLimit gets a reference to the given GlobalRateLimit and assigns it to the GlobalRateLimit field.
func (o *APIDefinition) SetGlobalRateLimit(v GlobalRateLimit) {
	o.GlobalRateLimit = &v
}

// GetHmacAllowedAlgorithms returns the HmacAllowedAlgorithms field value if set, zero value otherwise.
func (o *APIDefinition) GetHmacAllowedAlgorithms() []string {
	if o == nil || IsNil(o.HmacAllowedAlgorithms) {
		var ret []string
		return ret
	}
	return o.HmacAllowedAlgorithms
}

// GetHmacAllowedAlgorithmsOk returns a tuple with the HmacAllowedAlgorithms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetHmacAllowedAlgorithmsOk() ([]string, bool) {
	if o == nil || IsNil(o.HmacAllowedAlgorithms) {
		return nil, false
	}
	return o.HmacAllowedAlgorithms, true
}

// HasHmacAllowedAlgorithms returns a boolean if a field has been set.
func (o *APIDefinition) HasHmacAllowedAlgorithms() bool {
	if o != nil && !IsNil(o.HmacAllowedAlgorithms) {
		return true
	}

	return false
}

// SetHmacAllowedAlgorithms gets a reference to the given []string and assigns it to the HmacAllowedAlgorithms field.
func (o *APIDefinition) SetHmacAllowedAlgorithms(v []string) {
	o.HmacAllowedAlgorithms = v
}

// GetHmacAllowedClockSkew returns the HmacAllowedClockSkew field value if set, zero value otherwise.
func (o *APIDefinition) GetHmacAllowedClockSkew() float64 {
	if o == nil || IsNil(o.HmacAllowedClockSkew) {
		var ret float64
		return ret
	}
	return *o.HmacAllowedClockSkew
}

// GetHmacAllowedClockSkewOk returns a tuple with the HmacAllowedClockSkew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetHmacAllowedClockSkewOk() (*float64, bool) {
	if o == nil || IsNil(o.HmacAllowedClockSkew) {
		return nil, false
	}
	return o.HmacAllowedClockSkew, true
}

// HasHmacAllowedClockSkew returns a boolean if a field has been set.
func (o *APIDefinition) HasHmacAllowedClockSkew() bool {
	if o != nil && !IsNil(o.HmacAllowedClockSkew) {
		return true
	}

	return false
}

// SetHmacAllowedClockSkew gets a reference to the given float64 and assigns it to the HmacAllowedClockSkew field.
func (o *APIDefinition) SetHmacAllowedClockSkew(v float64) {
	o.HmacAllowedClockSkew = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *APIDefinition) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *APIDefinition) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *APIDefinition) SetId(v string) {
	o.Id = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *APIDefinition) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *APIDefinition) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *APIDefinition) SetInternal(v bool) {
	o.Internal = &v
}

// GetJwtClientBaseField returns the JwtClientBaseField field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtClientBaseField() string {
	if o == nil || IsNil(o.JwtClientBaseField) {
		var ret string
		return ret
	}
	return *o.JwtClientBaseField
}

// GetJwtClientBaseFieldOk returns a tuple with the JwtClientBaseField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtClientBaseFieldOk() (*string, bool) {
	if o == nil || IsNil(o.JwtClientBaseField) {
		return nil, false
	}
	return o.JwtClientBaseField, true
}

// HasJwtClientBaseField returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtClientBaseField() bool {
	if o != nil && !IsNil(o.JwtClientBaseField) {
		return true
	}

	return false
}

// SetJwtClientBaseField gets a reference to the given string and assigns it to the JwtClientBaseField field.
func (o *APIDefinition) SetJwtClientBaseField(v string) {
	o.JwtClientBaseField = &v
}

// GetJwtExpiresAtValidationSkew returns the JwtExpiresAtValidationSkew field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtExpiresAtValidationSkew() int32 {
	if o == nil || IsNil(o.JwtExpiresAtValidationSkew) {
		var ret int32
		return ret
	}
	return *o.JwtExpiresAtValidationSkew
}

// GetJwtExpiresAtValidationSkewOk returns a tuple with the JwtExpiresAtValidationSkew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtExpiresAtValidationSkewOk() (*int32, bool) {
	if o == nil || IsNil(o.JwtExpiresAtValidationSkew) {
		return nil, false
	}
	return o.JwtExpiresAtValidationSkew, true
}

// HasJwtExpiresAtValidationSkew returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtExpiresAtValidationSkew() bool {
	if o != nil && !IsNil(o.JwtExpiresAtValidationSkew) {
		return true
	}

	return false
}

// SetJwtExpiresAtValidationSkew gets a reference to the given int32 and assigns it to the JwtExpiresAtValidationSkew field.
func (o *APIDefinition) SetJwtExpiresAtValidationSkew(v int32) {
	o.JwtExpiresAtValidationSkew = &v
}

// GetJwtIdentityBaseField returns the JwtIdentityBaseField field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtIdentityBaseField() string {
	if o == nil || IsNil(o.JwtIdentityBaseField) {
		var ret string
		return ret
	}
	return *o.JwtIdentityBaseField
}

// GetJwtIdentityBaseFieldOk returns a tuple with the JwtIdentityBaseField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtIdentityBaseFieldOk() (*string, bool) {
	if o == nil || IsNil(o.JwtIdentityBaseField) {
		return nil, false
	}
	return o.JwtIdentityBaseField, true
}

// HasJwtIdentityBaseField returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtIdentityBaseField() bool {
	if o != nil && !IsNil(o.JwtIdentityBaseField) {
		return true
	}

	return false
}

// SetJwtIdentityBaseField gets a reference to the given string and assigns it to the JwtIdentityBaseField field.
func (o *APIDefinition) SetJwtIdentityBaseField(v string) {
	o.JwtIdentityBaseField = &v
}

// GetJwtIssuedAtValidationSkew returns the JwtIssuedAtValidationSkew field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtIssuedAtValidationSkew() int32 {
	if o == nil || IsNil(o.JwtIssuedAtValidationSkew) {
		var ret int32
		return ret
	}
	return *o.JwtIssuedAtValidationSkew
}

// GetJwtIssuedAtValidationSkewOk returns a tuple with the JwtIssuedAtValidationSkew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtIssuedAtValidationSkewOk() (*int32, bool) {
	if o == nil || IsNil(o.JwtIssuedAtValidationSkew) {
		return nil, false
	}
	return o.JwtIssuedAtValidationSkew, true
}

// HasJwtIssuedAtValidationSkew returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtIssuedAtValidationSkew() bool {
	if o != nil && !IsNil(o.JwtIssuedAtValidationSkew) {
		return true
	}

	return false
}

// SetJwtIssuedAtValidationSkew gets a reference to the given int32 and assigns it to the JwtIssuedAtValidationSkew field.
func (o *APIDefinition) SetJwtIssuedAtValidationSkew(v int32) {
	o.JwtIssuedAtValidationSkew = &v
}

// GetJwtNotBeforeValidationSkew returns the JwtNotBeforeValidationSkew field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtNotBeforeValidationSkew() int32 {
	if o == nil || IsNil(o.JwtNotBeforeValidationSkew) {
		var ret int32
		return ret
	}
	return *o.JwtNotBeforeValidationSkew
}

// GetJwtNotBeforeValidationSkewOk returns a tuple with the JwtNotBeforeValidationSkew field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtNotBeforeValidationSkewOk() (*int32, bool) {
	if o == nil || IsNil(o.JwtNotBeforeValidationSkew) {
		return nil, false
	}
	return o.JwtNotBeforeValidationSkew, true
}

// HasJwtNotBeforeValidationSkew returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtNotBeforeValidationSkew() bool {
	if o != nil && !IsNil(o.JwtNotBeforeValidationSkew) {
		return true
	}

	return false
}

// SetJwtNotBeforeValidationSkew gets a reference to the given int32 and assigns it to the JwtNotBeforeValidationSkew field.
func (o *APIDefinition) SetJwtNotBeforeValidationSkew(v int32) {
	o.JwtNotBeforeValidationSkew = &v
}

// GetJwtPolicyFieldName returns the JwtPolicyFieldName field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtPolicyFieldName() string {
	if o == nil || IsNil(o.JwtPolicyFieldName) {
		var ret string
		return ret
	}
	return *o.JwtPolicyFieldName
}

// GetJwtPolicyFieldNameOk returns a tuple with the JwtPolicyFieldName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtPolicyFieldNameOk() (*string, bool) {
	if o == nil || IsNil(o.JwtPolicyFieldName) {
		return nil, false
	}
	return o.JwtPolicyFieldName, true
}

// HasJwtPolicyFieldName returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtPolicyFieldName() bool {
	if o != nil && !IsNil(o.JwtPolicyFieldName) {
		return true
	}

	return false
}

// SetJwtPolicyFieldName gets a reference to the given string and assigns it to the JwtPolicyFieldName field.
func (o *APIDefinition) SetJwtPolicyFieldName(v string) {
	o.JwtPolicyFieldName = &v
}

// GetJwtScopeClaimName returns the JwtScopeClaimName field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtScopeClaimName() string {
	if o == nil || IsNil(o.JwtScopeClaimName) {
		var ret string
		return ret
	}
	return *o.JwtScopeClaimName
}

// GetJwtScopeClaimNameOk returns a tuple with the JwtScopeClaimName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtScopeClaimNameOk() (*string, bool) {
	if o == nil || IsNil(o.JwtScopeClaimName) {
		return nil, false
	}
	return o.JwtScopeClaimName, true
}

// HasJwtScopeClaimName returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtScopeClaimName() bool {
	if o != nil && !IsNil(o.JwtScopeClaimName) {
		return true
	}

	return false
}

// SetJwtScopeClaimName gets a reference to the given string and assigns it to the JwtScopeClaimName field.
func (o *APIDefinition) SetJwtScopeClaimName(v string) {
	o.JwtScopeClaimName = &v
}

// GetJwtScopeToPolicyMapping returns the JwtScopeToPolicyMapping field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtScopeToPolicyMapping() map[string]string {
	if o == nil || IsNil(o.JwtScopeToPolicyMapping) {
		var ret map[string]string
		return ret
	}
	return *o.JwtScopeToPolicyMapping
}

// GetJwtScopeToPolicyMappingOk returns a tuple with the JwtScopeToPolicyMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtScopeToPolicyMappingOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.JwtScopeToPolicyMapping) {
		return nil, false
	}
	return o.JwtScopeToPolicyMapping, true
}

// HasJwtScopeToPolicyMapping returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtScopeToPolicyMapping() bool {
	if o != nil && !IsNil(o.JwtScopeToPolicyMapping) {
		return true
	}

	return false
}

// SetJwtScopeToPolicyMapping gets a reference to the given map[string]string and assigns it to the JwtScopeToPolicyMapping field.
func (o *APIDefinition) SetJwtScopeToPolicyMapping(v map[string]string) {
	o.JwtScopeToPolicyMapping = &v
}

// GetJwtSigningMethod returns the JwtSigningMethod field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtSigningMethod() string {
	if o == nil || IsNil(o.JwtSigningMethod) {
		var ret string
		return ret
	}
	return *o.JwtSigningMethod
}

// GetJwtSigningMethodOk returns a tuple with the JwtSigningMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtSigningMethodOk() (*string, bool) {
	if o == nil || IsNil(o.JwtSigningMethod) {
		return nil, false
	}
	return o.JwtSigningMethod, true
}

// HasJwtSigningMethod returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtSigningMethod() bool {
	if o != nil && !IsNil(o.JwtSigningMethod) {
		return true
	}

	return false
}

// SetJwtSigningMethod gets a reference to the given string and assigns it to the JwtSigningMethod field.
func (o *APIDefinition) SetJwtSigningMethod(v string) {
	o.JwtSigningMethod = &v
}

// GetJwtSkipKid returns the JwtSkipKid field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtSkipKid() bool {
	if o == nil || IsNil(o.JwtSkipKid) {
		var ret bool
		return ret
	}
	return *o.JwtSkipKid
}

// GetJwtSkipKidOk returns a tuple with the JwtSkipKid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtSkipKidOk() (*bool, bool) {
	if o == nil || IsNil(o.JwtSkipKid) {
		return nil, false
	}
	return o.JwtSkipKid, true
}

// HasJwtSkipKid returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtSkipKid() bool {
	if o != nil && !IsNil(o.JwtSkipKid) {
		return true
	}

	return false
}

// SetJwtSkipKid gets a reference to the given bool and assigns it to the JwtSkipKid field.
func (o *APIDefinition) SetJwtSkipKid(v bool) {
	o.JwtSkipKid = &v
}

// GetJwtSource returns the JwtSource field value if set, zero value otherwise.
func (o *APIDefinition) GetJwtSource() string {
	if o == nil || IsNil(o.JwtSource) {
		var ret string
		return ret
	}
	return *o.JwtSource
}

// GetJwtSourceOk returns a tuple with the JwtSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetJwtSourceOk() (*string, bool) {
	if o == nil || IsNil(o.JwtSource) {
		return nil, false
	}
	return o.JwtSource, true
}

// HasJwtSource returns a boolean if a field has been set.
func (o *APIDefinition) HasJwtSource() bool {
	if o != nil && !IsNil(o.JwtSource) {
		return true
	}

	return false
}

// SetJwtSource gets a reference to the given string and assigns it to the JwtSource field.
func (o *APIDefinition) SetJwtSource(v string) {
	o.JwtSource = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *APIDefinition) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *APIDefinition) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *APIDefinition) SetName(v string) {
	o.Name = &v
}

// GetNotifications returns the Notifications field value if set, zero value otherwise.
func (o *APIDefinition) GetNotifications() NotificationsManager {
	if o == nil || IsNil(o.Notifications) {
		var ret NotificationsManager
		return ret
	}
	return *o.Notifications
}

// GetNotificationsOk returns a tuple with the Notifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetNotificationsOk() (*NotificationsManager, bool) {
	if o == nil || IsNil(o.Notifications) {
		return nil, false
	}
	return o.Notifications, true
}

// HasNotifications returns a boolean if a field has been set.
func (o *APIDefinition) HasNotifications() bool {
	if o != nil && !IsNil(o.Notifications) {
		return true
	}

	return false
}

// SetNotifications gets a reference to the given NotificationsManager and assigns it to the Notifications field.
func (o *APIDefinition) SetNotifications(v NotificationsManager) {
	o.Notifications = &v
}

// GetOauthMeta returns the OauthMeta field value if set, zero value otherwise.
func (o *APIDefinition) GetOauthMeta() APIDefinitionOauthMeta {
	if o == nil || IsNil(o.OauthMeta) {
		var ret APIDefinitionOauthMeta
		return ret
	}
	return *o.OauthMeta
}

// GetOauthMetaOk returns a tuple with the OauthMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetOauthMetaOk() (*APIDefinitionOauthMeta, bool) {
	if o == nil || IsNil(o.OauthMeta) {
		return nil, false
	}
	return o.OauthMeta, true
}

// HasOauthMeta returns a boolean if a field has been set.
func (o *APIDefinition) HasOauthMeta() bool {
	if o != nil && !IsNil(o.OauthMeta) {
		return true
	}

	return false
}

// SetOauthMeta gets a reference to the given APIDefinitionOauthMeta and assigns it to the OauthMeta field.
func (o *APIDefinition) SetOauthMeta(v APIDefinitionOauthMeta) {
	o.OauthMeta = &v
}

// GetOpenidOptions returns the OpenidOptions field value if set, zero value otherwise.
func (o *APIDefinition) GetOpenidOptions() OpenIDOptions {
	if o == nil || IsNil(o.OpenidOptions) {
		var ret OpenIDOptions
		return ret
	}
	return *o.OpenidOptions
}

// GetOpenidOptionsOk returns a tuple with the OpenidOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetOpenidOptionsOk() (*OpenIDOptions, bool) {
	if o == nil || IsNil(o.OpenidOptions) {
		return nil, false
	}
	return o.OpenidOptions, true
}

// HasOpenidOptions returns a boolean if a field has been set.
func (o *APIDefinition) HasOpenidOptions() bool {
	if o != nil && !IsNil(o.OpenidOptions) {
		return true
	}

	return false
}

// SetOpenidOptions gets a reference to the given OpenIDOptions and assigns it to the OpenidOptions field.
func (o *APIDefinition) SetOpenidOptions(v OpenIDOptions) {
	o.OpenidOptions = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *APIDefinition) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *APIDefinition) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *APIDefinition) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPinnedPublicKeys returns the PinnedPublicKeys field value if set, zero value otherwise.
func (o *APIDefinition) GetPinnedPublicKeys() map[string]string {
	if o == nil || IsNil(o.PinnedPublicKeys) {
		var ret map[string]string
		return ret
	}
	return *o.PinnedPublicKeys
}

// GetPinnedPublicKeysOk returns a tuple with the PinnedPublicKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetPinnedPublicKeysOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.PinnedPublicKeys) {
		return nil, false
	}
	return o.PinnedPublicKeys, true
}

// HasPinnedPublicKeys returns a boolean if a field has been set.
func (o *APIDefinition) HasPinnedPublicKeys() bool {
	if o != nil && !IsNil(o.PinnedPublicKeys) {
		return true
	}

	return false
}

// SetPinnedPublicKeys gets a reference to the given map[string]string and assigns it to the PinnedPublicKeys field.
func (o *APIDefinition) SetPinnedPublicKeys(v map[string]string) {
	o.PinnedPublicKeys = &v
}

// GetProxy returns the Proxy field value if set, zero value otherwise.
func (o *APIDefinition) GetProxy() APIDefinitionProxy {
	if o == nil || IsNil(o.Proxy) {
		var ret APIDefinitionProxy
		return ret
	}
	return *o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetProxyOk() (*APIDefinitionProxy, bool) {
	if o == nil || IsNil(o.Proxy) {
		return nil, false
	}
	return o.Proxy, true
}

// HasProxy returns a boolean if a field has been set.
func (o *APIDefinition) HasProxy() bool {
	if o != nil && !IsNil(o.Proxy) {
		return true
	}

	return false
}

// SetProxy gets a reference to the given APIDefinitionProxy and assigns it to the Proxy field.
func (o *APIDefinition) SetProxy(v APIDefinitionProxy) {
	o.Proxy = &v
}

// GetResponseProcessors returns the ResponseProcessors field value if set, zero value otherwise.
func (o *APIDefinition) GetResponseProcessors() []ResponseProcessor {
	if o == nil || IsNil(o.ResponseProcessors) {
		var ret []ResponseProcessor
		return ret
	}
	return o.ResponseProcessors
}

// GetResponseProcessorsOk returns a tuple with the ResponseProcessors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetResponseProcessorsOk() ([]ResponseProcessor, bool) {
	if o == nil || IsNil(o.ResponseProcessors) {
		return nil, false
	}
	return o.ResponseProcessors, true
}

// HasResponseProcessors returns a boolean if a field has been set.
func (o *APIDefinition) HasResponseProcessors() bool {
	if o != nil && !IsNil(o.ResponseProcessors) {
		return true
	}

	return false
}

// SetResponseProcessors gets a reference to the given []ResponseProcessor and assigns it to the ResponseProcessors field.
func (o *APIDefinition) SetResponseProcessors(v []ResponseProcessor) {
	o.ResponseProcessors = v
}

// GetSessionLifetime returns the SessionLifetime field value if set, zero value otherwise.
func (o *APIDefinition) GetSessionLifetime() int64 {
	if o == nil || IsNil(o.SessionLifetime) {
		var ret int64
		return ret
	}
	return *o.SessionLifetime
}

// GetSessionLifetimeOk returns a tuple with the SessionLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetSessionLifetimeOk() (*int64, bool) {
	if o == nil || IsNil(o.SessionLifetime) {
		return nil, false
	}
	return o.SessionLifetime, true
}

// HasSessionLifetime returns a boolean if a field has been set.
func (o *APIDefinition) HasSessionLifetime() bool {
	if o != nil && !IsNil(o.SessionLifetime) {
		return true
	}

	return false
}

// SetSessionLifetime gets a reference to the given int64 and assigns it to the SessionLifetime field.
func (o *APIDefinition) SetSessionLifetime(v int64) {
	o.SessionLifetime = &v
}

// GetSessionProvider returns the SessionProvider field value if set, zero value otherwise.
func (o *APIDefinition) GetSessionProvider() SessionProviderMeta {
	if o == nil || IsNil(o.SessionProvider) {
		var ret SessionProviderMeta
		return ret
	}
	return *o.SessionProvider
}

// GetSessionProviderOk returns a tuple with the SessionProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetSessionProviderOk() (*SessionProviderMeta, bool) {
	if o == nil || IsNil(o.SessionProvider) {
		return nil, false
	}
	return o.SessionProvider, true
}

// HasSessionProvider returns a boolean if a field has been set.
func (o *APIDefinition) HasSessionProvider() bool {
	if o != nil && !IsNil(o.SessionProvider) {
		return true
	}

	return false
}

// SetSessionProvider gets a reference to the given SessionProviderMeta and assigns it to the SessionProvider field.
func (o *APIDefinition) SetSessionProvider(v SessionProviderMeta) {
	o.SessionProvider = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *APIDefinition) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *APIDefinition) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *APIDefinition) SetSlug(v string) {
	o.Slug = &v
}

// GetStripAuthData returns the StripAuthData field value if set, zero value otherwise.
func (o *APIDefinition) GetStripAuthData() bool {
	if o == nil || IsNil(o.StripAuthData) {
		var ret bool
		return ret
	}
	return *o.StripAuthData
}

// GetStripAuthDataOk returns a tuple with the StripAuthData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetStripAuthDataOk() (*bool, bool) {
	if o == nil || IsNil(o.StripAuthData) {
		return nil, false
	}
	return o.StripAuthData, true
}

// HasStripAuthData returns a boolean if a field has been set.
func (o *APIDefinition) HasStripAuthData() bool {
	if o != nil && !IsNil(o.StripAuthData) {
		return true
	}

	return false
}

// SetStripAuthData gets a reference to the given bool and assigns it to the StripAuthData field.
func (o *APIDefinition) SetStripAuthData(v bool) {
	o.StripAuthData = &v
}

// GetTagHeaders returns the TagHeaders field value if set, zero value otherwise.
func (o *APIDefinition) GetTagHeaders() []string {
	if o == nil || IsNil(o.TagHeaders) {
		var ret []string
		return ret
	}
	return o.TagHeaders
}

// GetTagHeadersOk returns a tuple with the TagHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetTagHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.TagHeaders) {
		return nil, false
	}
	return o.TagHeaders, true
}

// HasTagHeaders returns a boolean if a field has been set.
func (o *APIDefinition) HasTagHeaders() bool {
	if o != nil && !IsNil(o.TagHeaders) {
		return true
	}

	return false
}

// SetTagHeaders gets a reference to the given []string and assigns it to the TagHeaders field.
func (o *APIDefinition) SetTagHeaders(v []string) {
	o.TagHeaders = v
}

// GetUpstreamCertificates returns the UpstreamCertificates field value if set, zero value otherwise.
func (o *APIDefinition) GetUpstreamCertificates() map[string]string {
	if o == nil || IsNil(o.UpstreamCertificates) {
		var ret map[string]string
		return ret
	}
	return *o.UpstreamCertificates
}

// GetUpstreamCertificatesOk returns a tuple with the UpstreamCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUpstreamCertificatesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.UpstreamCertificates) {
		return nil, false
	}
	return o.UpstreamCertificates, true
}

// HasUpstreamCertificates returns a boolean if a field has been set.
func (o *APIDefinition) HasUpstreamCertificates() bool {
	if o != nil && !IsNil(o.UpstreamCertificates) {
		return true
	}

	return false
}

// SetUpstreamCertificates gets a reference to the given map[string]string and assigns it to the UpstreamCertificates field.
func (o *APIDefinition) SetUpstreamCertificates(v map[string]string) {
	o.UpstreamCertificates = &v
}

// GetUptimeTests returns the UptimeTests field value if set, zero value otherwise.
func (o *APIDefinition) GetUptimeTests() APIDefinitionUptimeTests {
	if o == nil || IsNil(o.UptimeTests) {
		var ret APIDefinitionUptimeTests
		return ret
	}
	return *o.UptimeTests
}

// GetUptimeTestsOk returns a tuple with the UptimeTests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUptimeTestsOk() (*APIDefinitionUptimeTests, bool) {
	if o == nil || IsNil(o.UptimeTests) {
		return nil, false
	}
	return o.UptimeTests, true
}

// HasUptimeTests returns a boolean if a field has been set.
func (o *APIDefinition) HasUptimeTests() bool {
	if o != nil && !IsNil(o.UptimeTests) {
		return true
	}

	return false
}

// SetUptimeTests gets a reference to the given APIDefinitionUptimeTests and assigns it to the UptimeTests field.
func (o *APIDefinition) SetUptimeTests(v APIDefinitionUptimeTests) {
	o.UptimeTests = &v
}

// GetUseBasicAuth returns the UseBasicAuth field value if set, zero value otherwise.
func (o *APIDefinition) GetUseBasicAuth() bool {
	if o == nil || IsNil(o.UseBasicAuth) {
		var ret bool
		return ret
	}
	return *o.UseBasicAuth
}

// GetUseBasicAuthOk returns a tuple with the UseBasicAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseBasicAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.UseBasicAuth) {
		return nil, false
	}
	return o.UseBasicAuth, true
}

// HasUseBasicAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasUseBasicAuth() bool {
	if o != nil && !IsNil(o.UseBasicAuth) {
		return true
	}

	return false
}

// SetUseBasicAuth gets a reference to the given bool and assigns it to the UseBasicAuth field.
func (o *APIDefinition) SetUseBasicAuth(v bool) {
	o.UseBasicAuth = &v
}

// GetUseKeyless returns the UseKeyless field value if set, zero value otherwise.
func (o *APIDefinition) GetUseKeyless() bool {
	if o == nil || IsNil(o.UseKeyless) {
		var ret bool
		return ret
	}
	return *o.UseKeyless
}

// GetUseKeylessOk returns a tuple with the UseKeyless field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseKeylessOk() (*bool, bool) {
	if o == nil || IsNil(o.UseKeyless) {
		return nil, false
	}
	return o.UseKeyless, true
}

// HasUseKeyless returns a boolean if a field has been set.
func (o *APIDefinition) HasUseKeyless() bool {
	if o != nil && !IsNil(o.UseKeyless) {
		return true
	}

	return false
}

// SetUseKeyless gets a reference to the given bool and assigns it to the UseKeyless field.
func (o *APIDefinition) SetUseKeyless(v bool) {
	o.UseKeyless = &v
}

// GetUseMutualTlsAuth returns the UseMutualTlsAuth field value if set, zero value otherwise.
func (o *APIDefinition) GetUseMutualTlsAuth() bool {
	if o == nil || IsNil(o.UseMutualTlsAuth) {
		var ret bool
		return ret
	}
	return *o.UseMutualTlsAuth
}

// GetUseMutualTlsAuthOk returns a tuple with the UseMutualTlsAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseMutualTlsAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.UseMutualTlsAuth) {
		return nil, false
	}
	return o.UseMutualTlsAuth, true
}

// HasUseMutualTlsAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasUseMutualTlsAuth() bool {
	if o != nil && !IsNil(o.UseMutualTlsAuth) {
		return true
	}

	return false
}

// SetUseMutualTlsAuth gets a reference to the given bool and assigns it to the UseMutualTlsAuth field.
func (o *APIDefinition) SetUseMutualTlsAuth(v bool) {
	o.UseMutualTlsAuth = &v
}

// GetUseOauth2 returns the UseOauth2 field value if set, zero value otherwise.
func (o *APIDefinition) GetUseOauth2() bool {
	if o == nil || IsNil(o.UseOauth2) {
		var ret bool
		return ret
	}
	return *o.UseOauth2
}

// GetUseOauth2Ok returns a tuple with the UseOauth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseOauth2Ok() (*bool, bool) {
	if o == nil || IsNil(o.UseOauth2) {
		return nil, false
	}
	return o.UseOauth2, true
}

// HasUseOauth2 returns a boolean if a field has been set.
func (o *APIDefinition) HasUseOauth2() bool {
	if o != nil && !IsNil(o.UseOauth2) {
		return true
	}

	return false
}

// SetUseOauth2 gets a reference to the given bool and assigns it to the UseOauth2 field.
func (o *APIDefinition) SetUseOauth2(v bool) {
	o.UseOauth2 = &v
}

// GetUseOpenid returns the UseOpenid field value if set, zero value otherwise.
func (o *APIDefinition) GetUseOpenid() bool {
	if o == nil || IsNil(o.UseOpenid) {
		var ret bool
		return ret
	}
	return *o.UseOpenid
}

// GetUseOpenidOk returns a tuple with the UseOpenid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseOpenidOk() (*bool, bool) {
	if o == nil || IsNil(o.UseOpenid) {
		return nil, false
	}
	return o.UseOpenid, true
}

// HasUseOpenid returns a boolean if a field has been set.
func (o *APIDefinition) HasUseOpenid() bool {
	if o != nil && !IsNil(o.UseOpenid) {
		return true
	}

	return false
}

// SetUseOpenid gets a reference to the given bool and assigns it to the UseOpenid field.
func (o *APIDefinition) SetUseOpenid(v bool) {
	o.UseOpenid = &v
}

// GetUseStandardAuth returns the UseStandardAuth field value if set, zero value otherwise.
func (o *APIDefinition) GetUseStandardAuth() bool {
	if o == nil || IsNil(o.UseStandardAuth) {
		var ret bool
		return ret
	}
	return *o.UseStandardAuth
}

// GetUseStandardAuthOk returns a tuple with the UseStandardAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetUseStandardAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.UseStandardAuth) {
		return nil, false
	}
	return o.UseStandardAuth, true
}

// HasUseStandardAuth returns a boolean if a field has been set.
func (o *APIDefinition) HasUseStandardAuth() bool {
	if o != nil && !IsNil(o.UseStandardAuth) {
		return true
	}

	return false
}

// SetUseStandardAuth gets a reference to the given bool and assigns it to the UseStandardAuth field.
func (o *APIDefinition) SetUseStandardAuth(v bool) {
	o.UseStandardAuth = &v
}

// GetVersionData returns the VersionData field value if set, zero value otherwise.
func (o *APIDefinition) GetVersionData() APIDefinitionVersionData {
	if o == nil || IsNil(o.VersionData) {
		var ret APIDefinitionVersionData
		return ret
	}
	return *o.VersionData
}

// GetVersionDataOk returns a tuple with the VersionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinition) GetVersionDataOk() (*APIDefinitionVersionData, bool) {
	if o == nil || IsNil(o.VersionData) {
		return nil, false
	}
	return o.VersionData, true
}

// HasVersionData returns a boolean if a field has been set.
func (o *APIDefinition) HasVersionData() bool {
	if o != nil && !IsNil(o.VersionData) {
		return true
	}

	return false
}

// SetVersionData gets a reference to the given APIDefinitionVersionData and assigns it to the VersionData field.
func (o *APIDefinition) SetVersionData(v APIDefinitionVersionData) {
	o.VersionData = &v
}

func (o APIDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o APIDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.CORS) {
		toSerialize["CORS"] = o.CORS
	}
	if !IsNil(o.Active) {
		toSerialize["active"] = o.Active
	}
	if !IsNil(o.AllowedIps) {
		toSerialize["allowed_ips"] = o.AllowedIps
	}
	if !IsNil(o.ApiId) {
		toSerialize["api_id"] = o.ApiId
	}
	if !IsNil(o.Auth) {
		toSerialize["auth"] = o.Auth
	}
	if !IsNil(o.AuthProvider) {
		toSerialize["auth_provider"] = o.AuthProvider
	}
	if !IsNil(o.BaseIdentityProvidedBy) {
		toSerialize["base_identity_provided_by"] = o.BaseIdentityProvidedBy
	}
	if !IsNil(o.BasicAuth) {
		toSerialize["basic_auth"] = o.BasicAuth
	}
	if !IsNil(o.BlacklistedIps) {
		toSerialize["blacklisted_ips"] = o.BlacklistedIps
	}
	if !IsNil(o.CacheOptions) {
		toSerialize["cache_options"] = o.CacheOptions
	}
	if !IsNil(o.Certificates) {
		toSerialize["certificates"] = o.Certificates
	}
	if !IsNil(o.ClientCertificates) {
		toSerialize["client_certificates"] = o.ClientCertificates
	}
	if !IsNil(o.ConfigData) {
		toSerialize["config_data"] = o.ConfigData
	}
	if !IsNil(o.CustomMiddleware) {
		toSerialize["custom_middleware"] = o.CustomMiddleware
	}
	if !IsNil(o.CustomMiddlewareBundle) {
		toSerialize["custom_middleware_bundle"] = o.CustomMiddlewareBundle
	}
	if !IsNil(o.Definition) {
		toSerialize["definition"] = o.Definition
	}
	if !IsNil(o.DisableQuota) {
		toSerialize["disable_quota"] = o.DisableQuota
	}
	if !IsNil(o.DisableRateLimit) {
		toSerialize["disable_rate_limit"] = o.DisableRateLimit
	}
	if !IsNil(o.DoNotTrack) {
		toSerialize["do_not_track"] = o.DoNotTrack
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.DontSetQuotaOnCreate) {
		toSerialize["dont_set_quota_on_create"] = o.DontSetQuotaOnCreate
	}
	if !IsNil(o.EnableBatchRequestSupport) {
		toSerialize["enable_batch_request_support"] = o.EnableBatchRequestSupport
	}
	if !IsNil(o.EnableContextVars) {
		toSerialize["enable_context_vars"] = o.EnableContextVars
	}
	if !IsNil(o.EnableCoprocessAuth) {
		toSerialize["enable_coprocess_auth"] = o.EnableCoprocessAuth
	}
	if !IsNil(o.EnableIpBlacklisting) {
		toSerialize["enable_ip_blacklisting"] = o.EnableIpBlacklisting
	}
	if !IsNil(o.EnableIpWhitelisting) {
		toSerialize["enable_ip_whitelisting"] = o.EnableIpWhitelisting
	}
	if !IsNil(o.EnableJwt) {
		toSerialize["enable_jwt"] = o.EnableJwt
	}
	if !IsNil(o.EnableSignatureChecking) {
		toSerialize["enable_signature_checking"] = o.EnableSignatureChecking
	}
	if !IsNil(o.EventHandlers) {
		toSerialize["event_handlers"] = o.EventHandlers
	}
	if !IsNil(o.ExpireAnalyticsAfter) {
		toSerialize["expire_analytics_after"] = o.ExpireAnalyticsAfter
	}
	if !IsNil(o.GlobalRateLimit) {
		toSerialize["global_rate_limit"] = o.GlobalRateLimit
	}
	if !IsNil(o.HmacAllowedAlgorithms) {
		toSerialize["hmac_allowed_algorithms"] = o.HmacAllowedAlgorithms
	}
	if !IsNil(o.HmacAllowedClockSkew) {
		toSerialize["hmac_allowed_clock_skew"] = o.HmacAllowedClockSkew
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.JwtClientBaseField) {
		toSerialize["jwt_client_base_field"] = o.JwtClientBaseField
	}
	if !IsNil(o.JwtExpiresAtValidationSkew) {
		toSerialize["jwt_expires_at_validation_skew"] = o.JwtExpiresAtValidationSkew
	}
	if !IsNil(o.JwtIdentityBaseField) {
		toSerialize["jwt_identity_base_field"] = o.JwtIdentityBaseField
	}
	if !IsNil(o.JwtIssuedAtValidationSkew) {
		toSerialize["jwt_issued_at_validation_skew"] = o.JwtIssuedAtValidationSkew
	}
	if !IsNil(o.JwtNotBeforeValidationSkew) {
		toSerialize["jwt_not_before_validation_skew"] = o.JwtNotBeforeValidationSkew
	}
	if !IsNil(o.JwtPolicyFieldName) {
		toSerialize["jwt_policy_field_name"] = o.JwtPolicyFieldName
	}
	if !IsNil(o.JwtScopeClaimName) {
		toSerialize["jwt_scope_claim_name"] = o.JwtScopeClaimName
	}
	if !IsNil(o.JwtScopeToPolicyMapping) {
		toSerialize["jwt_scope_to_policy_mapping"] = o.JwtScopeToPolicyMapping
	}
	if !IsNil(o.JwtSigningMethod) {
		toSerialize["jwt_signing_method"] = o.JwtSigningMethod
	}
	if !IsNil(o.JwtSkipKid) {
		toSerialize["jwt_skip_kid"] = o.JwtSkipKid
	}
	if !IsNil(o.JwtSource) {
		toSerialize["jwt_source"] = o.JwtSource
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Notifications) {
		toSerialize["notifications"] = o.Notifications
	}
	if !IsNil(o.OauthMeta) {
		toSerialize["oauth_meta"] = o.OauthMeta
	}
	if !IsNil(o.OpenidOptions) {
		toSerialize["openid_options"] = o.OpenidOptions
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.PinnedPublicKeys) {
		toSerialize["pinned_public_keys"] = o.PinnedPublicKeys
	}
	if !IsNil(o.Proxy) {
		toSerialize["proxy"] = o.Proxy
	}
	if !IsNil(o.ResponseProcessors) {
		toSerialize["response_processors"] = o.ResponseProcessors
	}
	if !IsNil(o.SessionLifetime) {
		toSerialize["session_lifetime"] = o.SessionLifetime
	}
	if !IsNil(o.SessionProvider) {
		toSerialize["session_provider"] = o.SessionProvider
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.StripAuthData) {
		toSerialize["strip_auth_data"] = o.StripAuthData
	}
	if !IsNil(o.TagHeaders) {
		toSerialize["tag_headers"] = o.TagHeaders
	}
	if !IsNil(o.UpstreamCertificates) {
		toSerialize["upstream_certificates"] = o.UpstreamCertificates
	}
	if !IsNil(o.UptimeTests) {
		toSerialize["uptime_tests"] = o.UptimeTests
	}
	if !IsNil(o.UseBasicAuth) {
		toSerialize["use_basic_auth"] = o.UseBasicAuth
	}
	if !IsNil(o.UseKeyless) {
		toSerialize["use_keyless"] = o.UseKeyless
	}
	if !IsNil(o.UseMutualTlsAuth) {
		toSerialize["use_mutual_tls_auth"] = o.UseMutualTlsAuth
	}
	if !IsNil(o.UseOauth2) {
		toSerialize["use_oauth2"] = o.UseOauth2
	}
	if !IsNil(o.UseOpenid) {
		toSerialize["use_openid"] = o.UseOpenid
	}
	if !IsNil(o.UseStandardAuth) {
		toSerialize["use_standard_auth"] = o.UseStandardAuth
	}
	if !IsNil(o.VersionData) {
		toSerialize["version_data"] = o.VersionData
	}
	return toSerialize, nil
}

type NullableAPIDefinition struct {
	value *APIDefinition
	isSet bool
}

func (v NullableAPIDefinition) Get() *APIDefinition {
	return v.value
}

func (v *NullableAPIDefinition) Set(val *APIDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIDefinition(val *APIDefinition) *NullableAPIDefinition {
	return &NullableAPIDefinition{value: val, isSet: true}
}

func (v NullableAPIDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


