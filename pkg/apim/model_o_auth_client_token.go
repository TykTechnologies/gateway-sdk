/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the OAuthClientToken type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthClientToken{}

// OAuthClientToken struct for OAuthClientToken
type OAuthClientToken struct {
	Code *string `json:"code,omitempty"`
	Expires *int32 `json:"expires,omitempty"`
}

// NewOAuthClientToken instantiates a new OAuthClientToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthClientToken() *OAuthClientToken {
	this := OAuthClientToken{}
	return &this
}

// NewOAuthClientTokenWithDefaults instantiates a new OAuthClientToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthClientTokenWithDefaults() *OAuthClientToken {
	this := OAuthClientToken{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *OAuthClientToken) GetCode() string {
	if o == nil || IsNil(o.Code) {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientToken) GetCodeOk() (*string, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *OAuthClientToken) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *OAuthClientToken) SetCode(v string) {
	o.Code = &v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *OAuthClientToken) GetExpires() int32 {
	if o == nil || IsNil(o.Expires) {
		var ret int32
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClientToken) GetExpiresOk() (*int32, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *OAuthClientToken) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given int32 and assigns it to the Expires field.
func (o *OAuthClientToken) SetExpires(v int32) {
	o.Expires = &v
}

func (o OAuthClientToken) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthClientToken) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	return toSerialize, nil
}

type NullableOAuthClientToken struct {
	value *OAuthClientToken
	isSet bool
}

func (v NullableOAuthClientToken) Get() *OAuthClientToken {
	return v.value
}

func (v *NullableOAuthClientToken) Set(val *OAuthClientToken) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthClientToken) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthClientToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthClientToken(val *OAuthClientToken) *NullableOAuthClientToken {
	return &NullableOAuthClientToken{value: val, isSet: true}
}

func (v NullableOAuthClientToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthClientToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


