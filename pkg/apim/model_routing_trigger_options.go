/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the RoutingTriggerOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingTriggerOptions{}

// RoutingTriggerOptions struct for RoutingTriggerOptions
type RoutingTriggerOptions struct {
	HeaderMatches map[string]StringRegexMap `json:"header_matches,omitempty"`
	PathPartMatches map[string]StringRegexMap `json:"path_part_matches,omitempty"`
	PayloadMatches *StringRegexMap `json:"payload_matches,omitempty"`
	QueryValMatches map[string]StringRegexMap `json:"query_val_matches,omitempty"`
	RequestContextMatches map[string]StringRegexMap `json:"request_context_matches,omitempty"`
	SessionMetaMatches map[string]StringRegexMap `json:"session_meta_matches,omitempty"`
}

// NewRoutingTriggerOptions instantiates a new RoutingTriggerOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingTriggerOptions() *RoutingTriggerOptions {
	this := RoutingTriggerOptions{}
	return &this
}

// NewRoutingTriggerOptionsWithDefaults instantiates a new RoutingTriggerOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingTriggerOptionsWithDefaults() *RoutingTriggerOptions {
	this := RoutingTriggerOptions{}
	return &this
}

// GetHeaderMatches returns the HeaderMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoutingTriggerOptions) GetHeaderMatches() map[string]StringRegexMap {
	if o == nil {
		var ret map[string]StringRegexMap
		return ret
	}
	return o.HeaderMatches
}

// GetHeaderMatchesOk returns a tuple with the HeaderMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoutingTriggerOptions) GetHeaderMatchesOk() (*map[string]StringRegexMap, bool) {
	if o == nil || IsNil(o.HeaderMatches) {
		return nil, false
	}
	return &o.HeaderMatches, true
}

// HasHeaderMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasHeaderMatches() bool {
	if o != nil && !IsNil(o.HeaderMatches) {
		return true
	}

	return false
}

// SetHeaderMatches gets a reference to the given map[string]StringRegexMap and assigns it to the HeaderMatches field.
func (o *RoutingTriggerOptions) SetHeaderMatches(v map[string]StringRegexMap) {
	o.HeaderMatches = v
}

// GetPathPartMatches returns the PathPartMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoutingTriggerOptions) GetPathPartMatches() map[string]StringRegexMap {
	if o == nil {
		var ret map[string]StringRegexMap
		return ret
	}
	return o.PathPartMatches
}

// GetPathPartMatchesOk returns a tuple with the PathPartMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoutingTriggerOptions) GetPathPartMatchesOk() (*map[string]StringRegexMap, bool) {
	if o == nil || IsNil(o.PathPartMatches) {
		return nil, false
	}
	return &o.PathPartMatches, true
}

// HasPathPartMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasPathPartMatches() bool {
	if o != nil && !IsNil(o.PathPartMatches) {
		return true
	}

	return false
}

// SetPathPartMatches gets a reference to the given map[string]StringRegexMap and assigns it to the PathPartMatches field.
func (o *RoutingTriggerOptions) SetPathPartMatches(v map[string]StringRegexMap) {
	o.PathPartMatches = v
}

// GetPayloadMatches returns the PayloadMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptions) GetPayloadMatches() StringRegexMap {
	if o == nil || IsNil(o.PayloadMatches) {
		var ret StringRegexMap
		return ret
	}
	return *o.PayloadMatches
}

// GetPayloadMatchesOk returns a tuple with the PayloadMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptions) GetPayloadMatchesOk() (*StringRegexMap, bool) {
	if o == nil || IsNil(o.PayloadMatches) {
		return nil, false
	}
	return o.PayloadMatches, true
}

// HasPayloadMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasPayloadMatches() bool {
	if o != nil && !IsNil(o.PayloadMatches) {
		return true
	}

	return false
}

// SetPayloadMatches gets a reference to the given StringRegexMap and assigns it to the PayloadMatches field.
func (o *RoutingTriggerOptions) SetPayloadMatches(v StringRegexMap) {
	o.PayloadMatches = &v
}

// GetQueryValMatches returns the QueryValMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoutingTriggerOptions) GetQueryValMatches() map[string]StringRegexMap {
	if o == nil {
		var ret map[string]StringRegexMap
		return ret
	}
	return o.QueryValMatches
}

// GetQueryValMatchesOk returns a tuple with the QueryValMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoutingTriggerOptions) GetQueryValMatchesOk() (*map[string]StringRegexMap, bool) {
	if o == nil || IsNil(o.QueryValMatches) {
		return nil, false
	}
	return &o.QueryValMatches, true
}

// HasQueryValMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasQueryValMatches() bool {
	if o != nil && !IsNil(o.QueryValMatches) {
		return true
	}

	return false
}

// SetQueryValMatches gets a reference to the given map[string]StringRegexMap and assigns it to the QueryValMatches field.
func (o *RoutingTriggerOptions) SetQueryValMatches(v map[string]StringRegexMap) {
	o.QueryValMatches = v
}

// GetRequestContextMatches returns the RequestContextMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoutingTriggerOptions) GetRequestContextMatches() map[string]StringRegexMap {
	if o == nil {
		var ret map[string]StringRegexMap
		return ret
	}
	return o.RequestContextMatches
}

// GetRequestContextMatchesOk returns a tuple with the RequestContextMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoutingTriggerOptions) GetRequestContextMatchesOk() (*map[string]StringRegexMap, bool) {
	if o == nil || IsNil(o.RequestContextMatches) {
		return nil, false
	}
	return &o.RequestContextMatches, true
}

// HasRequestContextMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasRequestContextMatches() bool {
	if o != nil && !IsNil(o.RequestContextMatches) {
		return true
	}

	return false
}

// SetRequestContextMatches gets a reference to the given map[string]StringRegexMap and assigns it to the RequestContextMatches field.
func (o *RoutingTriggerOptions) SetRequestContextMatches(v map[string]StringRegexMap) {
	o.RequestContextMatches = v
}

// GetSessionMetaMatches returns the SessionMetaMatches field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *RoutingTriggerOptions) GetSessionMetaMatches() map[string]StringRegexMap {
	if o == nil {
		var ret map[string]StringRegexMap
		return ret
	}
	return o.SessionMetaMatches
}

// GetSessionMetaMatchesOk returns a tuple with the SessionMetaMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *RoutingTriggerOptions) GetSessionMetaMatchesOk() (*map[string]StringRegexMap, bool) {
	if o == nil || IsNil(o.SessionMetaMatches) {
		return nil, false
	}
	return &o.SessionMetaMatches, true
}

// HasSessionMetaMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptions) HasSessionMetaMatches() bool {
	if o != nil && !IsNil(o.SessionMetaMatches) {
		return true
	}

	return false
}

// SetSessionMetaMatches gets a reference to the given map[string]StringRegexMap and assigns it to the SessionMetaMatches field.
func (o *RoutingTriggerOptions) SetSessionMetaMatches(v map[string]StringRegexMap) {
	o.SessionMetaMatches = v
}

func (o RoutingTriggerOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingTriggerOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.HeaderMatches != nil {
		toSerialize["header_matches"] = o.HeaderMatches
	}
	if o.PathPartMatches != nil {
		toSerialize["path_part_matches"] = o.PathPartMatches
	}
	if !IsNil(o.PayloadMatches) {
		toSerialize["payload_matches"] = o.PayloadMatches
	}
	if o.QueryValMatches != nil {
		toSerialize["query_val_matches"] = o.QueryValMatches
	}
	if o.RequestContextMatches != nil {
		toSerialize["request_context_matches"] = o.RequestContextMatches
	}
	if o.SessionMetaMatches != nil {
		toSerialize["session_meta_matches"] = o.SessionMetaMatches
	}
	return toSerialize, nil
}

type NullableRoutingTriggerOptions struct {
	value *RoutingTriggerOptions
	isSet bool
}

func (v NullableRoutingTriggerOptions) Get() *RoutingTriggerOptions {
	return v.value
}

func (v *NullableRoutingTriggerOptions) Set(val *RoutingTriggerOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingTriggerOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingTriggerOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingTriggerOptions(val *RoutingTriggerOptions) *NullableRoutingTriggerOptions {
	return &NullableRoutingTriggerOptions{value: val, isSet: true}
}

func (v NullableRoutingTriggerOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingTriggerOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


