/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the OAS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAS{}

// OAS struct for OAS
type OAS struct {
	Components *Openapi3Components `json:"components,omitempty"`
	ExternalDocs *Openapi3ExternalDocs `json:"externalDocs,omitempty"`
	Info *Openapi3Info `json:"info,omitempty"`
	Openapi *string `json:"openapi,omitempty"`
	Paths *map[string]Openapi3PathItem `json:"paths,omitempty"`
	Security []map[string][]string `json:"security,omitempty"`
	Servers []Openapi3Server `json:"servers,omitempty"`
	Tags []Openapi3Tag `json:"tags,omitempty"`
}

// NewOAS instantiates a new OAS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAS() *OAS {
	this := OAS{}
	return &this
}

// NewOASWithDefaults instantiates a new OAS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOASWithDefaults() *OAS {
	this := OAS{}
	return &this
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *OAS) GetComponents() Openapi3Components {
	if o == nil || IsNil(o.Components) {
		var ret Openapi3Components
		return ret
	}
	return *o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetComponentsOk() (*Openapi3Components, bool) {
	if o == nil || IsNil(o.Components) {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *OAS) HasComponents() bool {
	if o != nil && !IsNil(o.Components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given Openapi3Components and assigns it to the Components field.
func (o *OAS) SetComponents(v Openapi3Components) {
	o.Components = &v
}

// GetExternalDocs returns the ExternalDocs field value if set, zero value otherwise.
func (o *OAS) GetExternalDocs() Openapi3ExternalDocs {
	if o == nil || IsNil(o.ExternalDocs) {
		var ret Openapi3ExternalDocs
		return ret
	}
	return *o.ExternalDocs
}

// GetExternalDocsOk returns a tuple with the ExternalDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetExternalDocsOk() (*Openapi3ExternalDocs, bool) {
	if o == nil || IsNil(o.ExternalDocs) {
		return nil, false
	}
	return o.ExternalDocs, true
}

// HasExternalDocs returns a boolean if a field has been set.
func (o *OAS) HasExternalDocs() bool {
	if o != nil && !IsNil(o.ExternalDocs) {
		return true
	}

	return false
}

// SetExternalDocs gets a reference to the given Openapi3ExternalDocs and assigns it to the ExternalDocs field.
func (o *OAS) SetExternalDocs(v Openapi3ExternalDocs) {
	o.ExternalDocs = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *OAS) GetInfo() Openapi3Info {
	if o == nil || IsNil(o.Info) {
		var ret Openapi3Info
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetInfoOk() (*Openapi3Info, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *OAS) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given Openapi3Info and assigns it to the Info field.
func (o *OAS) SetInfo(v Openapi3Info) {
	o.Info = &v
}

// GetOpenapi returns the Openapi field value if set, zero value otherwise.
func (o *OAS) GetOpenapi() string {
	if o == nil || IsNil(o.Openapi) {
		var ret string
		return ret
	}
	return *o.Openapi
}

// GetOpenapiOk returns a tuple with the Openapi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetOpenapiOk() (*string, bool) {
	if o == nil || IsNil(o.Openapi) {
		return nil, false
	}
	return o.Openapi, true
}

// HasOpenapi returns a boolean if a field has been set.
func (o *OAS) HasOpenapi() bool {
	if o != nil && !IsNil(o.Openapi) {
		return true
	}

	return false
}

// SetOpenapi gets a reference to the given string and assigns it to the Openapi field.
func (o *OAS) SetOpenapi(v string) {
	o.Openapi = &v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *OAS) GetPaths() map[string]Openapi3PathItem {
	if o == nil || IsNil(o.Paths) {
		var ret map[string]Openapi3PathItem
		return ret
	}
	return *o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetPathsOk() (*map[string]Openapi3PathItem, bool) {
	if o == nil || IsNil(o.Paths) {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *OAS) HasPaths() bool {
	if o != nil && !IsNil(o.Paths) {
		return true
	}

	return false
}

// SetPaths gets a reference to the given map[string]Openapi3PathItem and assigns it to the Paths field.
func (o *OAS) SetPaths(v map[string]Openapi3PathItem) {
	o.Paths = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAS) GetSecurity() []map[string][]string {
	if o == nil {
		var ret []map[string][]string
		return ret
	}
	return o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAS) GetSecurityOk() ([]map[string][]string, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *OAS) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given []map[string][]string and assigns it to the Security field.
func (o *OAS) SetSecurity(v []map[string][]string) {
	o.Security = v
}

// GetServers returns the Servers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OAS) GetServers() []Openapi3Server {
	if o == nil {
		var ret []Openapi3Server
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OAS) GetServersOk() ([]Openapi3Server, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *OAS) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []Openapi3Server and assigns it to the Servers field.
func (o *OAS) SetServers(v []Openapi3Server) {
	o.Servers = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *OAS) GetTags() []Openapi3Tag {
	if o == nil || IsNil(o.Tags) {
		var ret []Openapi3Tag
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAS) GetTagsOk() ([]Openapi3Tag, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *OAS) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []Openapi3Tag and assigns it to the Tags field.
func (o *OAS) SetTags(v []Openapi3Tag) {
	o.Tags = v
}

func (o OAS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Components) {
		toSerialize["components"] = o.Components
	}
	if !IsNil(o.ExternalDocs) {
		toSerialize["externalDocs"] = o.ExternalDocs
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Openapi) {
		toSerialize["openapi"] = o.Openapi
	}
	if !IsNil(o.Paths) {
		toSerialize["paths"] = o.Paths
	}
	if o.Security != nil {
		toSerialize["security"] = o.Security
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableOAS struct {
	value *OAS
	isSet bool
}

func (v NullableOAS) Get() *OAS {
	return v.value
}

func (v *NullableOAS) Set(val *OAS) {
	v.value = val
	v.isSet = true
}

func (v NullableOAS) IsSet() bool {
	return v.isSet
}

func (v *NullableOAS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAS(val *OAS) *NullableOAS {
	return &NullableOAS{value: val, isSet: true}
}

func (v NullableOAS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


