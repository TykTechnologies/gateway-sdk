/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the GraphQLResponseExtensions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GraphQLResponseExtensions{}

// GraphQLResponseExtensions struct for GraphQLResponseExtensions
type GraphQLResponseExtensions struct {
	OnErrorForwarding *bool `json:"on_error_forwarding,omitempty"`
}

// NewGraphQLResponseExtensions instantiates a new GraphQLResponseExtensions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGraphQLResponseExtensions() *GraphQLResponseExtensions {
	this := GraphQLResponseExtensions{}
	return &this
}

// NewGraphQLResponseExtensionsWithDefaults instantiates a new GraphQLResponseExtensions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGraphQLResponseExtensionsWithDefaults() *GraphQLResponseExtensions {
	this := GraphQLResponseExtensions{}
	return &this
}

// GetOnErrorForwarding returns the OnErrorForwarding field value if set, zero value otherwise.
func (o *GraphQLResponseExtensions) GetOnErrorForwarding() bool {
	if o == nil || IsNil(o.OnErrorForwarding) {
		var ret bool
		return ret
	}
	return *o.OnErrorForwarding
}

// GetOnErrorForwardingOk returns a tuple with the OnErrorForwarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GraphQLResponseExtensions) GetOnErrorForwardingOk() (*bool, bool) {
	if o == nil || IsNil(o.OnErrorForwarding) {
		return nil, false
	}
	return o.OnErrorForwarding, true
}

// HasOnErrorForwarding returns a boolean if a field has been set.
func (o *GraphQLResponseExtensions) HasOnErrorForwarding() bool {
	if o != nil && !IsNil(o.OnErrorForwarding) {
		return true
	}

	return false
}

// SetOnErrorForwarding gets a reference to the given bool and assigns it to the OnErrorForwarding field.
func (o *GraphQLResponseExtensions) SetOnErrorForwarding(v bool) {
	o.OnErrorForwarding = &v
}

func (o GraphQLResponseExtensions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GraphQLResponseExtensions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OnErrorForwarding) {
		toSerialize["on_error_forwarding"] = o.OnErrorForwarding
	}
	return toSerialize, nil
}

type NullableGraphQLResponseExtensions struct {
	value *GraphQLResponseExtensions
	isSet bool
}

func (v NullableGraphQLResponseExtensions) Get() *GraphQLResponseExtensions {
	return v.value
}

func (v *NullableGraphQLResponseExtensions) Set(val *GraphQLResponseExtensions) {
	v.value = val
	v.isSet = true
}

func (v NullableGraphQLResponseExtensions) IsSet() bool {
	return v.isSet
}

func (v *NullableGraphQLResponseExtensions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGraphQLResponseExtensions(val *GraphQLResponseExtensions) *NullableGraphQLResponseExtensions {
	return &NullableGraphQLResponseExtensions{value: val, isSet: true}
}

func (v NullableGraphQLResponseExtensions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGraphQLResponseExtensions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


