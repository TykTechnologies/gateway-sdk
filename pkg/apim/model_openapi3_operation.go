/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Openapi3Operation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Openapi3Operation{}

// Openapi3Operation struct for Openapi3Operation
type Openapi3Operation struct {
	Callbacks *map[string]map[string]interface{} `json:"callbacks,omitempty"`
	Deprecated *bool `json:"deprecated,omitempty"`
	Description *string `json:"description,omitempty"`
	ExternalDocs *Openapi3ExternalDocs `json:"externalDocs,omitempty"`
	OperationId *string `json:"operationId,omitempty"`
	Parameters []map[string]interface{} `json:"parameters,omitempty"`
	RequestBody map[string]interface{} `json:"requestBody,omitempty"`
	Responses *map[string]map[string]interface{} `json:"responses,omitempty"`
	Security []map[string][]string `json:"security,omitempty"`
	Servers []Openapi3Server `json:"servers,omitempty"`
	Summary *string `json:"summary,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewOpenapi3Operation instantiates a new Openapi3Operation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapi3Operation() *Openapi3Operation {
	this := Openapi3Operation{}
	return &this
}

// NewOpenapi3OperationWithDefaults instantiates a new Openapi3Operation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapi3OperationWithDefaults() *Openapi3Operation {
	this := Openapi3Operation{}
	return &this
}

// GetCallbacks returns the Callbacks field value if set, zero value otherwise.
func (o *Openapi3Operation) GetCallbacks() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Callbacks) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Callbacks
}

// GetCallbacksOk returns a tuple with the Callbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetCallbacksOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Callbacks) {
		return nil, false
	}
	return o.Callbacks, true
}

// HasCallbacks returns a boolean if a field has been set.
func (o *Openapi3Operation) HasCallbacks() bool {
	if o != nil && !IsNil(o.Callbacks) {
		return true
	}

	return false
}

// SetCallbacks gets a reference to the given map[string]map[string]interface{} and assigns it to the Callbacks field.
func (o *Openapi3Operation) SetCallbacks(v map[string]map[string]interface{}) {
	o.Callbacks = &v
}

// GetDeprecated returns the Deprecated field value if set, zero value otherwise.
func (o *Openapi3Operation) GetDeprecated() bool {
	if o == nil || IsNil(o.Deprecated) {
		var ret bool
		return ret
	}
	return *o.Deprecated
}

// GetDeprecatedOk returns a tuple with the Deprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.Deprecated) {
		return nil, false
	}
	return o.Deprecated, true
}

// HasDeprecated returns a boolean if a field has been set.
func (o *Openapi3Operation) HasDeprecated() bool {
	if o != nil && !IsNil(o.Deprecated) {
		return true
	}

	return false
}

// SetDeprecated gets a reference to the given bool and assigns it to the Deprecated field.
func (o *Openapi3Operation) SetDeprecated(v bool) {
	o.Deprecated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Openapi3Operation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Openapi3Operation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Openapi3Operation) SetDescription(v string) {
	o.Description = &v
}

// GetExternalDocs returns the ExternalDocs field value if set, zero value otherwise.
func (o *Openapi3Operation) GetExternalDocs() Openapi3ExternalDocs {
	if o == nil || IsNil(o.ExternalDocs) {
		var ret Openapi3ExternalDocs
		return ret
	}
	return *o.ExternalDocs
}

// GetExternalDocsOk returns a tuple with the ExternalDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetExternalDocsOk() (*Openapi3ExternalDocs, bool) {
	if o == nil || IsNil(o.ExternalDocs) {
		return nil, false
	}
	return o.ExternalDocs, true
}

// HasExternalDocs returns a boolean if a field has been set.
func (o *Openapi3Operation) HasExternalDocs() bool {
	if o != nil && !IsNil(o.ExternalDocs) {
		return true
	}

	return false
}

// SetExternalDocs gets a reference to the given Openapi3ExternalDocs and assigns it to the ExternalDocs field.
func (o *Openapi3Operation) SetExternalDocs(v Openapi3ExternalDocs) {
	o.ExternalDocs = &v
}

// GetOperationId returns the OperationId field value if set, zero value otherwise.
func (o *Openapi3Operation) GetOperationId() string {
	if o == nil || IsNil(o.OperationId) {
		var ret string
		return ret
	}
	return *o.OperationId
}

// GetOperationIdOk returns a tuple with the OperationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetOperationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OperationId) {
		return nil, false
	}
	return o.OperationId, true
}

// HasOperationId returns a boolean if a field has been set.
func (o *Openapi3Operation) HasOperationId() bool {
	if o != nil && !IsNil(o.OperationId) {
		return true
	}

	return false
}

// SetOperationId gets a reference to the given string and assigns it to the OperationId field.
func (o *Openapi3Operation) SetOperationId(v string) {
	o.OperationId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *Openapi3Operation) GetParameters() []map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetParametersOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *Openapi3Operation) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []map[string]interface{} and assigns it to the Parameters field.
func (o *Openapi3Operation) SetParameters(v []map[string]interface{}) {
	o.Parameters = v
}

// GetRequestBody returns the RequestBody field value if set, zero value otherwise.
func (o *Openapi3Operation) GetRequestBody() map[string]interface{} {
	if o == nil || IsNil(o.RequestBody) {
		var ret map[string]interface{}
		return ret
	}
	return o.RequestBody
}

// GetRequestBodyOk returns a tuple with the RequestBody field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetRequestBodyOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.RequestBody) {
		return map[string]interface{}{}, false
	}
	return o.RequestBody, true
}

// HasRequestBody returns a boolean if a field has been set.
func (o *Openapi3Operation) HasRequestBody() bool {
	if o != nil && !IsNil(o.RequestBody) {
		return true
	}

	return false
}

// SetRequestBody gets a reference to the given map[string]interface{} and assigns it to the RequestBody field.
func (o *Openapi3Operation) SetRequestBody(v map[string]interface{}) {
	o.RequestBody = v
}

// GetResponses returns the Responses field value if set, zero value otherwise.
func (o *Openapi3Operation) GetResponses() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Responses) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetResponsesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Responses) {
		return nil, false
	}
	return o.Responses, true
}

// HasResponses returns a boolean if a field has been set.
func (o *Openapi3Operation) HasResponses() bool {
	if o != nil && !IsNil(o.Responses) {
		return true
	}

	return false
}

// SetResponses gets a reference to the given map[string]map[string]interface{} and assigns it to the Responses field.
func (o *Openapi3Operation) SetResponses(v map[string]map[string]interface{}) {
	o.Responses = &v
}

// GetSecurity returns the Security field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Openapi3Operation) GetSecurity() []map[string][]string {
	if o == nil {
		var ret []map[string][]string
		return ret
	}
	return o.Security
}

// GetSecurityOk returns a tuple with the Security field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Openapi3Operation) GetSecurityOk() ([]map[string][]string, bool) {
	if o == nil || IsNil(o.Security) {
		return nil, false
	}
	return o.Security, true
}

// HasSecurity returns a boolean if a field has been set.
func (o *Openapi3Operation) HasSecurity() bool {
	if o != nil && !IsNil(o.Security) {
		return true
	}

	return false
}

// SetSecurity gets a reference to the given []map[string][]string and assigns it to the Security field.
func (o *Openapi3Operation) SetSecurity(v []map[string][]string) {
	o.Security = v
}

// GetServers returns the Servers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Openapi3Operation) GetServers() []Openapi3Server {
	if o == nil {
		var ret []Openapi3Server
		return ret
	}
	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Openapi3Operation) GetServersOk() ([]Openapi3Server, bool) {
	if o == nil || IsNil(o.Servers) {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *Openapi3Operation) HasServers() bool {
	if o != nil && !IsNil(o.Servers) {
		return true
	}

	return false
}

// SetServers gets a reference to the given []Openapi3Server and assigns it to the Servers field.
func (o *Openapi3Operation) SetServers(v []Openapi3Server) {
	o.Servers = v
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *Openapi3Operation) GetSummary() string {
	if o == nil || IsNil(o.Summary) {
		var ret string
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetSummaryOk() (*string, bool) {
	if o == nil || IsNil(o.Summary) {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *Openapi3Operation) HasSummary() bool {
	if o != nil && !IsNil(o.Summary) {
		return true
	}

	return false
}

// SetSummary gets a reference to the given string and assigns it to the Summary field.
func (o *Openapi3Operation) SetSummary(v string) {
	o.Summary = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Openapi3Operation) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Operation) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Openapi3Operation) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Openapi3Operation) SetTags(v []string) {
	o.Tags = v
}

func (o Openapi3Operation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Openapi3Operation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Callbacks) {
		toSerialize["callbacks"] = o.Callbacks
	}
	if !IsNil(o.Deprecated) {
		toSerialize["deprecated"] = o.Deprecated
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalDocs) {
		toSerialize["externalDocs"] = o.ExternalDocs
	}
	if !IsNil(o.OperationId) {
		toSerialize["operationId"] = o.OperationId
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.RequestBody) {
		toSerialize["requestBody"] = o.RequestBody
	}
	if !IsNil(o.Responses) {
		toSerialize["responses"] = o.Responses
	}
	if o.Security != nil {
		toSerialize["security"] = o.Security
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	if !IsNil(o.Summary) {
		toSerialize["summary"] = o.Summary
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableOpenapi3Operation struct {
	value *Openapi3Operation
	isSet bool
}

func (v NullableOpenapi3Operation) Get() *Openapi3Operation {
	return v.value
}

func (v *NullableOpenapi3Operation) Set(val *Openapi3Operation) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapi3Operation) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapi3Operation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapi3Operation(val *Openapi3Operation) *NullableOpenapi3Operation {
	return &NullableOpenapi3Operation{value: val, isSet: true}
}

func (v NullableOpenapi3Operation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapi3Operation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


