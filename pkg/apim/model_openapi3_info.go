/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Openapi3Info type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Openapi3Info{}

// Openapi3Info struct for Openapi3Info
type Openapi3Info struct {
	Contact *Openapi3Contact `json:"contact,omitempty"`
	Description *string `json:"description,omitempty"`
	License *Openapi3License `json:"license,omitempty"`
	TermsOfService *string `json:"termsOfService,omitempty"`
	Title *string `json:"title,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewOpenapi3Info instantiates a new Openapi3Info object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapi3Info() *Openapi3Info {
	this := Openapi3Info{}
	return &this
}

// NewOpenapi3InfoWithDefaults instantiates a new Openapi3Info object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapi3InfoWithDefaults() *Openapi3Info {
	this := Openapi3Info{}
	return &this
}

// GetContact returns the Contact field value if set, zero value otherwise.
func (o *Openapi3Info) GetContact() Openapi3Contact {
	if o == nil || IsNil(o.Contact) {
		var ret Openapi3Contact
		return ret
	}
	return *o.Contact
}

// GetContactOk returns a tuple with the Contact field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetContactOk() (*Openapi3Contact, bool) {
	if o == nil || IsNil(o.Contact) {
		return nil, false
	}
	return o.Contact, true
}

// HasContact returns a boolean if a field has been set.
func (o *Openapi3Info) HasContact() bool {
	if o != nil && !IsNil(o.Contact) {
		return true
	}

	return false
}

// SetContact gets a reference to the given Openapi3Contact and assigns it to the Contact field.
func (o *Openapi3Info) SetContact(v Openapi3Contact) {
	o.Contact = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Openapi3Info) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Openapi3Info) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Openapi3Info) SetDescription(v string) {
	o.Description = &v
}

// GetLicense returns the License field value if set, zero value otherwise.
func (o *Openapi3Info) GetLicense() Openapi3License {
	if o == nil || IsNil(o.License) {
		var ret Openapi3License
		return ret
	}
	return *o.License
}

// GetLicenseOk returns a tuple with the License field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetLicenseOk() (*Openapi3License, bool) {
	if o == nil || IsNil(o.License) {
		return nil, false
	}
	return o.License, true
}

// HasLicense returns a boolean if a field has been set.
func (o *Openapi3Info) HasLicense() bool {
	if o != nil && !IsNil(o.License) {
		return true
	}

	return false
}

// SetLicense gets a reference to the given Openapi3License and assigns it to the License field.
func (o *Openapi3Info) SetLicense(v Openapi3License) {
	o.License = &v
}

// GetTermsOfService returns the TermsOfService field value if set, zero value otherwise.
func (o *Openapi3Info) GetTermsOfService() string {
	if o == nil || IsNil(o.TermsOfService) {
		var ret string
		return ret
	}
	return *o.TermsOfService
}

// GetTermsOfServiceOk returns a tuple with the TermsOfService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetTermsOfServiceOk() (*string, bool) {
	if o == nil || IsNil(o.TermsOfService) {
		return nil, false
	}
	return o.TermsOfService, true
}

// HasTermsOfService returns a boolean if a field has been set.
func (o *Openapi3Info) HasTermsOfService() bool {
	if o != nil && !IsNil(o.TermsOfService) {
		return true
	}

	return false
}

// SetTermsOfService gets a reference to the given string and assigns it to the TermsOfService field.
func (o *Openapi3Info) SetTermsOfService(v string) {
	o.TermsOfService = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Openapi3Info) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Openapi3Info) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Openapi3Info) SetTitle(v string) {
	o.Title = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Openapi3Info) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Info) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Openapi3Info) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *Openapi3Info) SetVersion(v string) {
	o.Version = &v
}

func (o Openapi3Info) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Openapi3Info) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Contact) {
		toSerialize["contact"] = o.Contact
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.License) {
		toSerialize["license"] = o.License
	}
	if !IsNil(o.TermsOfService) {
		toSerialize["termsOfService"] = o.TermsOfService
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableOpenapi3Info struct {
	value *Openapi3Info
	isSet bool
}

func (v NullableOpenapi3Info) Get() *Openapi3Info {
	return v.value
}

func (v *NullableOpenapi3Info) Set(val *Openapi3Info) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapi3Info) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapi3Info) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapi3Info(val *Openapi3Info) *NullableOpenapi3Info {
	return &NullableOpenapi3Info{value: val, isSet: true}
}

func (v NullableOpenapi3Info) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapi3Info) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


