/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the ServiceDiscoveryConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceDiscoveryConfiguration{}

// ServiceDiscoveryConfiguration struct for ServiceDiscoveryConfiguration
type ServiceDiscoveryConfiguration struct {
	CacheDisabled *bool `json:"cache_disabled,omitempty"`
	CacheTimeout *int32 `json:"cache_timeout,omitempty"`
	DataPath *string `json:"data_path,omitempty"`
	EndpointReturnsList *bool `json:"endpoint_returns_list,omitempty"`
	ParentDataPath *string `json:"parent_data_path,omitempty"`
	PortDataPath *string `json:"port_data_path,omitempty"`
	QueryEndpoint *string `json:"query_endpoint,omitempty"`
	TargetPath *string `json:"target_path,omitempty"`
	UseDiscoveryService *bool `json:"use_discovery_service,omitempty"`
	UseNestedQuery *bool `json:"use_nested_query,omitempty"`
	UseTargetList *bool `json:"use_target_list,omitempty"`
}

// NewServiceDiscoveryConfiguration instantiates a new ServiceDiscoveryConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceDiscoveryConfiguration() *ServiceDiscoveryConfiguration {
	this := ServiceDiscoveryConfiguration{}
	return &this
}

// NewServiceDiscoveryConfigurationWithDefaults instantiates a new ServiceDiscoveryConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceDiscoveryConfigurationWithDefaults() *ServiceDiscoveryConfiguration {
	this := ServiceDiscoveryConfiguration{}
	return &this
}

// GetCacheDisabled returns the CacheDisabled field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetCacheDisabled() bool {
	if o == nil || IsNil(o.CacheDisabled) {
		var ret bool
		return ret
	}
	return *o.CacheDisabled
}

// GetCacheDisabledOk returns a tuple with the CacheDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetCacheDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CacheDisabled) {
		return nil, false
	}
	return o.CacheDisabled, true
}

// HasCacheDisabled returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasCacheDisabled() bool {
	if o != nil && !IsNil(o.CacheDisabled) {
		return true
	}

	return false
}

// SetCacheDisabled gets a reference to the given bool and assigns it to the CacheDisabled field.
func (o *ServiceDiscoveryConfiguration) SetCacheDisabled(v bool) {
	o.CacheDisabled = &v
}

// GetCacheTimeout returns the CacheTimeout field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetCacheTimeout() int32 {
	if o == nil || IsNil(o.CacheTimeout) {
		var ret int32
		return ret
	}
	return *o.CacheTimeout
}

// GetCacheTimeoutOk returns a tuple with the CacheTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetCacheTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.CacheTimeout) {
		return nil, false
	}
	return o.CacheTimeout, true
}

// HasCacheTimeout returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasCacheTimeout() bool {
	if o != nil && !IsNil(o.CacheTimeout) {
		return true
	}

	return false
}

// SetCacheTimeout gets a reference to the given int32 and assigns it to the CacheTimeout field.
func (o *ServiceDiscoveryConfiguration) SetCacheTimeout(v int32) {
	o.CacheTimeout = &v
}

// GetDataPath returns the DataPath field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetDataPath() string {
	if o == nil || IsNil(o.DataPath) {
		var ret string
		return ret
	}
	return *o.DataPath
}

// GetDataPathOk returns a tuple with the DataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetDataPathOk() (*string, bool) {
	if o == nil || IsNil(o.DataPath) {
		return nil, false
	}
	return o.DataPath, true
}

// HasDataPath returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasDataPath() bool {
	if o != nil && !IsNil(o.DataPath) {
		return true
	}

	return false
}

// SetDataPath gets a reference to the given string and assigns it to the DataPath field.
func (o *ServiceDiscoveryConfiguration) SetDataPath(v string) {
	o.DataPath = &v
}

// GetEndpointReturnsList returns the EndpointReturnsList field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetEndpointReturnsList() bool {
	if o == nil || IsNil(o.EndpointReturnsList) {
		var ret bool
		return ret
	}
	return *o.EndpointReturnsList
}

// GetEndpointReturnsListOk returns a tuple with the EndpointReturnsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetEndpointReturnsListOk() (*bool, bool) {
	if o == nil || IsNil(o.EndpointReturnsList) {
		return nil, false
	}
	return o.EndpointReturnsList, true
}

// HasEndpointReturnsList returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasEndpointReturnsList() bool {
	if o != nil && !IsNil(o.EndpointReturnsList) {
		return true
	}

	return false
}

// SetEndpointReturnsList gets a reference to the given bool and assigns it to the EndpointReturnsList field.
func (o *ServiceDiscoveryConfiguration) SetEndpointReturnsList(v bool) {
	o.EndpointReturnsList = &v
}

// GetParentDataPath returns the ParentDataPath field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetParentDataPath() string {
	if o == nil || IsNil(o.ParentDataPath) {
		var ret string
		return ret
	}
	return *o.ParentDataPath
}

// GetParentDataPathOk returns a tuple with the ParentDataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetParentDataPathOk() (*string, bool) {
	if o == nil || IsNil(o.ParentDataPath) {
		return nil, false
	}
	return o.ParentDataPath, true
}

// HasParentDataPath returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasParentDataPath() bool {
	if o != nil && !IsNil(o.ParentDataPath) {
		return true
	}

	return false
}

// SetParentDataPath gets a reference to the given string and assigns it to the ParentDataPath field.
func (o *ServiceDiscoveryConfiguration) SetParentDataPath(v string) {
	o.ParentDataPath = &v
}

// GetPortDataPath returns the PortDataPath field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetPortDataPath() string {
	if o == nil || IsNil(o.PortDataPath) {
		var ret string
		return ret
	}
	return *o.PortDataPath
}

// GetPortDataPathOk returns a tuple with the PortDataPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetPortDataPathOk() (*string, bool) {
	if o == nil || IsNil(o.PortDataPath) {
		return nil, false
	}
	return o.PortDataPath, true
}

// HasPortDataPath returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasPortDataPath() bool {
	if o != nil && !IsNil(o.PortDataPath) {
		return true
	}

	return false
}

// SetPortDataPath gets a reference to the given string and assigns it to the PortDataPath field.
func (o *ServiceDiscoveryConfiguration) SetPortDataPath(v string) {
	o.PortDataPath = &v
}

// GetQueryEndpoint returns the QueryEndpoint field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetQueryEndpoint() string {
	if o == nil || IsNil(o.QueryEndpoint) {
		var ret string
		return ret
	}
	return *o.QueryEndpoint
}

// GetQueryEndpointOk returns a tuple with the QueryEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetQueryEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.QueryEndpoint) {
		return nil, false
	}
	return o.QueryEndpoint, true
}

// HasQueryEndpoint returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasQueryEndpoint() bool {
	if o != nil && !IsNil(o.QueryEndpoint) {
		return true
	}

	return false
}

// SetQueryEndpoint gets a reference to the given string and assigns it to the QueryEndpoint field.
func (o *ServiceDiscoveryConfiguration) SetQueryEndpoint(v string) {
	o.QueryEndpoint = &v
}

// GetTargetPath returns the TargetPath field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetTargetPath() string {
	if o == nil || IsNil(o.TargetPath) {
		var ret string
		return ret
	}
	return *o.TargetPath
}

// GetTargetPathOk returns a tuple with the TargetPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetTargetPathOk() (*string, bool) {
	if o == nil || IsNil(o.TargetPath) {
		return nil, false
	}
	return o.TargetPath, true
}

// HasTargetPath returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasTargetPath() bool {
	if o != nil && !IsNil(o.TargetPath) {
		return true
	}

	return false
}

// SetTargetPath gets a reference to the given string and assigns it to the TargetPath field.
func (o *ServiceDiscoveryConfiguration) SetTargetPath(v string) {
	o.TargetPath = &v
}

// GetUseDiscoveryService returns the UseDiscoveryService field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetUseDiscoveryService() bool {
	if o == nil || IsNil(o.UseDiscoveryService) {
		var ret bool
		return ret
	}
	return *o.UseDiscoveryService
}

// GetUseDiscoveryServiceOk returns a tuple with the UseDiscoveryService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetUseDiscoveryServiceOk() (*bool, bool) {
	if o == nil || IsNil(o.UseDiscoveryService) {
		return nil, false
	}
	return o.UseDiscoveryService, true
}

// HasUseDiscoveryService returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasUseDiscoveryService() bool {
	if o != nil && !IsNil(o.UseDiscoveryService) {
		return true
	}

	return false
}

// SetUseDiscoveryService gets a reference to the given bool and assigns it to the UseDiscoveryService field.
func (o *ServiceDiscoveryConfiguration) SetUseDiscoveryService(v bool) {
	o.UseDiscoveryService = &v
}

// GetUseNestedQuery returns the UseNestedQuery field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetUseNestedQuery() bool {
	if o == nil || IsNil(o.UseNestedQuery) {
		var ret bool
		return ret
	}
	return *o.UseNestedQuery
}

// GetUseNestedQueryOk returns a tuple with the UseNestedQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetUseNestedQueryOk() (*bool, bool) {
	if o == nil || IsNil(o.UseNestedQuery) {
		return nil, false
	}
	return o.UseNestedQuery, true
}

// HasUseNestedQuery returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasUseNestedQuery() bool {
	if o != nil && !IsNil(o.UseNestedQuery) {
		return true
	}

	return false
}

// SetUseNestedQuery gets a reference to the given bool and assigns it to the UseNestedQuery field.
func (o *ServiceDiscoveryConfiguration) SetUseNestedQuery(v bool) {
	o.UseNestedQuery = &v
}

// GetUseTargetList returns the UseTargetList field value if set, zero value otherwise.
func (o *ServiceDiscoveryConfiguration) GetUseTargetList() bool {
	if o == nil || IsNil(o.UseTargetList) {
		var ret bool
		return ret
	}
	return *o.UseTargetList
}

// GetUseTargetListOk returns a tuple with the UseTargetList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceDiscoveryConfiguration) GetUseTargetListOk() (*bool, bool) {
	if o == nil || IsNil(o.UseTargetList) {
		return nil, false
	}
	return o.UseTargetList, true
}

// HasUseTargetList returns a boolean if a field has been set.
func (o *ServiceDiscoveryConfiguration) HasUseTargetList() bool {
	if o != nil && !IsNil(o.UseTargetList) {
		return true
	}

	return false
}

// SetUseTargetList gets a reference to the given bool and assigns it to the UseTargetList field.
func (o *ServiceDiscoveryConfiguration) SetUseTargetList(v bool) {
	o.UseTargetList = &v
}

func (o ServiceDiscoveryConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceDiscoveryConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CacheDisabled) {
		toSerialize["cache_disabled"] = o.CacheDisabled
	}
	if !IsNil(o.CacheTimeout) {
		toSerialize["cache_timeout"] = o.CacheTimeout
	}
	if !IsNil(o.DataPath) {
		toSerialize["data_path"] = o.DataPath
	}
	if !IsNil(o.EndpointReturnsList) {
		toSerialize["endpoint_returns_list"] = o.EndpointReturnsList
	}
	if !IsNil(o.ParentDataPath) {
		toSerialize["parent_data_path"] = o.ParentDataPath
	}
	if !IsNil(o.PortDataPath) {
		toSerialize["port_data_path"] = o.PortDataPath
	}
	if !IsNil(o.QueryEndpoint) {
		toSerialize["query_endpoint"] = o.QueryEndpoint
	}
	if !IsNil(o.TargetPath) {
		toSerialize["target_path"] = o.TargetPath
	}
	if !IsNil(o.UseDiscoveryService) {
		toSerialize["use_discovery_service"] = o.UseDiscoveryService
	}
	if !IsNil(o.UseNestedQuery) {
		toSerialize["use_nested_query"] = o.UseNestedQuery
	}
	if !IsNil(o.UseTargetList) {
		toSerialize["use_target_list"] = o.UseTargetList
	}
	return toSerialize, nil
}

type NullableServiceDiscoveryConfiguration struct {
	value *ServiceDiscoveryConfiguration
	isSet bool
}

func (v NullableServiceDiscoveryConfiguration) Get() *ServiceDiscoveryConfiguration {
	return v.value
}

func (v *NullableServiceDiscoveryConfiguration) Set(val *ServiceDiscoveryConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceDiscoveryConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceDiscoveryConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceDiscoveryConfiguration(val *ServiceDiscoveryConfiguration) *NullableServiceDiscoveryConfiguration {
	return &NullableServiceDiscoveryConfiguration{value: val, isSet: true}
}

func (v NullableServiceDiscoveryConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceDiscoveryConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


