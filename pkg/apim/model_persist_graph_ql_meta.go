/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation). * Managing and listing policies. * Managing and listing API Definitions (only when not using the Tyk Dashboard). * Hot reloads / reloading a cluster configuration. * OAuth client creation (only when not using the Tyk Dashboard).  In order to use the Gateway API, you'll need to set the **secret** parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  **x-tyk-authorization: <your-secret>*** <br/>  <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 5.7.1
Contact: support@tyk.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the PersistGraphQLMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PersistGraphQLMeta{}

// PersistGraphQLMeta struct for PersistGraphQLMeta
type PersistGraphQLMeta struct {
	Method    *string                `json:"method,omitempty"`
	Operation *string                `json:"operation,omitempty"`
	Path      *string                `json:"path,omitempty"`
	Variables map[string]interface{} `json:"variables,omitempty"`
}

// NewPersistGraphQLMeta instantiates a new PersistGraphQLMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPersistGraphQLMeta() *PersistGraphQLMeta {
	this := PersistGraphQLMeta{}
	return &this
}

// NewPersistGraphQLMetaWithDefaults instantiates a new PersistGraphQLMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPersistGraphQLMetaWithDefaults() *PersistGraphQLMeta {
	this := PersistGraphQLMeta{}
	return &this
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *PersistGraphQLMeta) GetMethod() string {
	if o == nil || IsNil(o.Method) {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistGraphQLMeta) GetMethodOk() (*string, bool) {
	if o == nil || IsNil(o.Method) {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *PersistGraphQLMeta) HasMethod() bool {
	if o != nil && !IsNil(o.Method) {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *PersistGraphQLMeta) SetMethod(v string) {
	o.Method = &v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *PersistGraphQLMeta) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistGraphQLMeta) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *PersistGraphQLMeta) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *PersistGraphQLMeta) SetOperation(v string) {
	o.Operation = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *PersistGraphQLMeta) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PersistGraphQLMeta) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *PersistGraphQLMeta) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *PersistGraphQLMeta) SetPath(v string) {
	o.Path = &v
}

// GetVariables returns the Variables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PersistGraphQLMeta) GetVariables() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Variables
}

// GetVariablesOk returns a tuple with the Variables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PersistGraphQLMeta) GetVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Variables) {
		return map[string]interface{}{}, false
	}
	return o.Variables, true
}

// HasVariables returns a boolean if a field has been set.
func (o *PersistGraphQLMeta) HasVariables() bool {
	if o != nil && !IsNil(o.Variables) {
		return true
	}

	return false
}

// SetVariables gets a reference to the given map[string]interface{} and assigns it to the Variables field.
func (o *PersistGraphQLMeta) SetVariables(v map[string]interface{}) {
	o.Variables = v
}

func (o PersistGraphQLMeta) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PersistGraphQLMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Method) {
		toSerialize["method"] = o.Method
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if o.Variables != nil {
		toSerialize["variables"] = o.Variables
	}
	return toSerialize, nil
}

type NullablePersistGraphQLMeta struct {
	value *PersistGraphQLMeta
	isSet bool
}

func (v NullablePersistGraphQLMeta) Get() *PersistGraphQLMeta {
	return v.value
}

func (v *NullablePersistGraphQLMeta) Set(val *PersistGraphQLMeta) {
	v.value = val
	v.isSet = true
}

func (v NullablePersistGraphQLMeta) IsSet() bool {
	return v.isSet
}

func (v *NullablePersistGraphQLMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePersistGraphQLMeta(val *PersistGraphQLMeta) *NullablePersistGraphQLMeta {
	return &NullablePersistGraphQLMeta{value: val, isSet: true}
}

func (v NullablePersistGraphQLMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePersistGraphQLMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
