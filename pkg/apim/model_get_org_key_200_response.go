/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation). * Managing and listing policies. * Managing and listing API Definitions (only when not using the Tyk Dashboard). * Hot reloads / reloading a cluster configuration. * OAuth client creation (only when not using the Tyk Dashboard).  In order to use the Gateway API, you'll need to set the **secret** parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  **x-tyk-authorization: <your-secret>*** <br/>  <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 5.7.1
Contact: support@tyk.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
	"time"
)

// checks if the GetOrgKey200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrgKey200Response{}

// GetOrgKey200Response struct for GetOrgKey200Response
type GetOrgKey200Response struct {
	AccessRights            map[string]GetOrgKey200ResponseAccessRightsValue `json:"access_rights,omitempty"`
	Alias                   *string                                          `json:"alias,omitempty"`
	Allowance               *int32                                           `json:"allowance,omitempty"`
	ApplyPolicies           []string                                         `json:"apply_policies,omitempty"`
	DateCreated             *time.Time                                       `json:"date_created,omitempty"`
	EnableDetailedRecording *bool                                            `json:"enable_detailed_recording,omitempty"`
	LastUpdated             *string                                          `json:"last_updated,omitempty"`
	MetaData                map[string]string                                `json:"meta_data,omitempty"`
	OrgId                   *string                                          `json:"org_id,omitempty"`
	Per                     *int32                                           `json:"per,omitempty"`
	QuotaMax                *int32                                           `json:"quota_max,omitempty"`
	QuotaRenewalRate        *int32                                           `json:"quota_renewal_rate,omitempty"`
	QuotaRenews             *int32                                           `json:"quota_renews,omitempty"`
	Rate                    *int32                                           `json:"rate,omitempty"`
	Tags                    []string                                         `json:"tags,omitempty"`
	ThrottleInterval        *int32                                           `json:"throttle_interval,omitempty"`
	ThrottleRetryLimit      *int32                                           `json:"throttle_retry_limit,omitempty"`
}

// NewGetOrgKey200Response instantiates a new GetOrgKey200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrgKey200Response() *GetOrgKey200Response {
	this := GetOrgKey200Response{}
	return &this
}

// NewGetOrgKey200ResponseWithDefaults instantiates a new GetOrgKey200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrgKey200ResponseWithDefaults() *GetOrgKey200Response {
	this := GetOrgKey200Response{}
	return &this
}

// GetAccessRights returns the AccessRights field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrgKey200Response) GetAccessRights() map[string]GetOrgKey200ResponseAccessRightsValue {
	if o == nil {
		var ret map[string]GetOrgKey200ResponseAccessRightsValue
		return ret
	}
	return o.AccessRights
}

// GetAccessRightsOk returns a tuple with the AccessRights field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrgKey200Response) GetAccessRightsOk() (*map[string]GetOrgKey200ResponseAccessRightsValue, bool) {
	if o == nil || IsNil(o.AccessRights) {
		return nil, false
	}
	return &o.AccessRights, true
}

// HasAccessRights returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasAccessRights() bool {
	if o != nil && !IsNil(o.AccessRights) {
		return true
	}

	return false
}

// SetAccessRights gets a reference to the given map[string]GetOrgKey200ResponseAccessRightsValue and assigns it to the AccessRights field.
func (o *GetOrgKey200Response) SetAccessRights(v map[string]GetOrgKey200ResponseAccessRightsValue) {
	o.AccessRights = v
}

// GetAlias returns the Alias field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetAlias() string {
	if o == nil || IsNil(o.Alias) {
		var ret string
		return ret
	}
	return *o.Alias
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetAliasOk() (*string, bool) {
	if o == nil || IsNil(o.Alias) {
		return nil, false
	}
	return o.Alias, true
}

// HasAlias returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasAlias() bool {
	if o != nil && !IsNil(o.Alias) {
		return true
	}

	return false
}

// SetAlias gets a reference to the given string and assigns it to the Alias field.
func (o *GetOrgKey200Response) SetAlias(v string) {
	o.Alias = &v
}

// GetAllowance returns the Allowance field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetAllowance() int32 {
	if o == nil || IsNil(o.Allowance) {
		var ret int32
		return ret
	}
	return *o.Allowance
}

// GetAllowanceOk returns a tuple with the Allowance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetAllowanceOk() (*int32, bool) {
	if o == nil || IsNil(o.Allowance) {
		return nil, false
	}
	return o.Allowance, true
}

// HasAllowance returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasAllowance() bool {
	if o != nil && !IsNil(o.Allowance) {
		return true
	}

	return false
}

// SetAllowance gets a reference to the given int32 and assigns it to the Allowance field.
func (o *GetOrgKey200Response) SetAllowance(v int32) {
	o.Allowance = &v
}

// GetApplyPolicies returns the ApplyPolicies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrgKey200Response) GetApplyPolicies() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.ApplyPolicies
}

// GetApplyPoliciesOk returns a tuple with the ApplyPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrgKey200Response) GetApplyPoliciesOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplyPolicies) {
		return nil, false
	}
	return o.ApplyPolicies, true
}

// HasApplyPolicies returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasApplyPolicies() bool {
	if o != nil && !IsNil(o.ApplyPolicies) {
		return true
	}

	return false
}

// SetApplyPolicies gets a reference to the given []string and assigns it to the ApplyPolicies field.
func (o *GetOrgKey200Response) SetApplyPolicies(v []string) {
	o.ApplyPolicies = v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetDateCreated() time.Time {
	if o == nil || IsNil(o.DateCreated) {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCreated) {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasDateCreated() bool {
	if o != nil && !IsNil(o.DateCreated) {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *GetOrgKey200Response) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetEnableDetailedRecording returns the EnableDetailedRecording field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetEnableDetailedRecording() bool {
	if o == nil || IsNil(o.EnableDetailedRecording) {
		var ret bool
		return ret
	}
	return *o.EnableDetailedRecording
}

// GetEnableDetailedRecordingOk returns a tuple with the EnableDetailedRecording field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetEnableDetailedRecordingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableDetailedRecording) {
		return nil, false
	}
	return o.EnableDetailedRecording, true
}

// HasEnableDetailedRecording returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasEnableDetailedRecording() bool {
	if o != nil && !IsNil(o.EnableDetailedRecording) {
		return true
	}

	return false
}

// SetEnableDetailedRecording gets a reference to the given bool and assigns it to the EnableDetailedRecording field.
func (o *GetOrgKey200Response) SetEnableDetailedRecording(v bool) {
	o.EnableDetailedRecording = &v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetLastUpdated() string {
	if o == nil || IsNil(o.LastUpdated) {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetLastUpdatedOk() (*string, bool) {
	if o == nil || IsNil(o.LastUpdated) {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasLastUpdated() bool {
	if o != nil && !IsNil(o.LastUpdated) {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *GetOrgKey200Response) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrgKey200Response) GetMetaData() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrgKey200Response) GetMetaDataOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.MetaData) {
		return nil, false
	}
	return &o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]string and assigns it to the MetaData field.
func (o *GetOrgKey200Response) SetMetaData(v map[string]string) {
	o.MetaData = v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetOrgId() string {
	if o == nil || IsNil(o.OrgId) {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrgId) {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasOrgId() bool {
	if o != nil && !IsNil(o.OrgId) {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *GetOrgKey200Response) SetOrgId(v string) {
	o.OrgId = &v
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetPer() int32 {
	if o == nil || IsNil(o.Per) {
		var ret int32
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetPerOk() (*int32, bool) {
	if o == nil || IsNil(o.Per) {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasPer() bool {
	if o != nil && !IsNil(o.Per) {
		return true
	}

	return false
}

// SetPer gets a reference to the given int32 and assigns it to the Per field.
func (o *GetOrgKey200Response) SetPer(v int32) {
	o.Per = &v
}

// GetQuotaMax returns the QuotaMax field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetQuotaMax() int32 {
	if o == nil || IsNil(o.QuotaMax) {
		var ret int32
		return ret
	}
	return *o.QuotaMax
}

// GetQuotaMaxOk returns a tuple with the QuotaMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetQuotaMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaMax) {
		return nil, false
	}
	return o.QuotaMax, true
}

// HasQuotaMax returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasQuotaMax() bool {
	if o != nil && !IsNil(o.QuotaMax) {
		return true
	}

	return false
}

// SetQuotaMax gets a reference to the given int32 and assigns it to the QuotaMax field.
func (o *GetOrgKey200Response) SetQuotaMax(v int32) {
	o.QuotaMax = &v
}

// GetQuotaRenewalRate returns the QuotaRenewalRate field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetQuotaRenewalRate() int32 {
	if o == nil || IsNil(o.QuotaRenewalRate) {
		var ret int32
		return ret
	}
	return *o.QuotaRenewalRate
}

// GetQuotaRenewalRateOk returns a tuple with the QuotaRenewalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetQuotaRenewalRateOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaRenewalRate) {
		return nil, false
	}
	return o.QuotaRenewalRate, true
}

// HasQuotaRenewalRate returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasQuotaRenewalRate() bool {
	if o != nil && !IsNil(o.QuotaRenewalRate) {
		return true
	}

	return false
}

// SetQuotaRenewalRate gets a reference to the given int32 and assigns it to the QuotaRenewalRate field.
func (o *GetOrgKey200Response) SetQuotaRenewalRate(v int32) {
	o.QuotaRenewalRate = &v
}

// GetQuotaRenews returns the QuotaRenews field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetQuotaRenews() int32 {
	if o == nil || IsNil(o.QuotaRenews) {
		var ret int32
		return ret
	}
	return *o.QuotaRenews
}

// GetQuotaRenewsOk returns a tuple with the QuotaRenews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetQuotaRenewsOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotaRenews) {
		return nil, false
	}
	return o.QuotaRenews, true
}

// HasQuotaRenews returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasQuotaRenews() bool {
	if o != nil && !IsNil(o.QuotaRenews) {
		return true
	}

	return false
}

// SetQuotaRenews gets a reference to the given int32 and assigns it to the QuotaRenews field.
func (o *GetOrgKey200Response) SetQuotaRenews(v int32) {
	o.QuotaRenews = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetRate() int32 {
	if o == nil || IsNil(o.Rate) {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetRateOk() (*int32, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *GetOrgKey200Response) SetRate(v int32) {
	o.Rate = &v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrgKey200Response) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrgKey200Response) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *GetOrgKey200Response) SetTags(v []string) {
	o.Tags = v
}

// GetThrottleInterval returns the ThrottleInterval field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetThrottleInterval() int32 {
	if o == nil || IsNil(o.ThrottleInterval) {
		var ret int32
		return ret
	}
	return *o.ThrottleInterval
}

// GetThrottleIntervalOk returns a tuple with the ThrottleInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetThrottleIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.ThrottleInterval) {
		return nil, false
	}
	return o.ThrottleInterval, true
}

// HasThrottleInterval returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasThrottleInterval() bool {
	if o != nil && !IsNil(o.ThrottleInterval) {
		return true
	}

	return false
}

// SetThrottleInterval gets a reference to the given int32 and assigns it to the ThrottleInterval field.
func (o *GetOrgKey200Response) SetThrottleInterval(v int32) {
	o.ThrottleInterval = &v
}

// GetThrottleRetryLimit returns the ThrottleRetryLimit field value if set, zero value otherwise.
func (o *GetOrgKey200Response) GetThrottleRetryLimit() int32 {
	if o == nil || IsNil(o.ThrottleRetryLimit) {
		var ret int32
		return ret
	}
	return *o.ThrottleRetryLimit
}

// GetThrottleRetryLimitOk returns a tuple with the ThrottleRetryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrgKey200Response) GetThrottleRetryLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.ThrottleRetryLimit) {
		return nil, false
	}
	return o.ThrottleRetryLimit, true
}

// HasThrottleRetryLimit returns a boolean if a field has been set.
func (o *GetOrgKey200Response) HasThrottleRetryLimit() bool {
	if o != nil && !IsNil(o.ThrottleRetryLimit) {
		return true
	}

	return false
}

// SetThrottleRetryLimit gets a reference to the given int32 and assigns it to the ThrottleRetryLimit field.
func (o *GetOrgKey200Response) SetThrottleRetryLimit(v int32) {
	o.ThrottleRetryLimit = &v
}

func (o GetOrgKey200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrgKey200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessRights != nil {
		toSerialize["access_rights"] = o.AccessRights
	}
	if !IsNil(o.Alias) {
		toSerialize["alias"] = o.Alias
	}
	if !IsNil(o.Allowance) {
		toSerialize["allowance"] = o.Allowance
	}
	if o.ApplyPolicies != nil {
		toSerialize["apply_policies"] = o.ApplyPolicies
	}
	if !IsNil(o.DateCreated) {
		toSerialize["date_created"] = o.DateCreated
	}
	if !IsNil(o.EnableDetailedRecording) {
		toSerialize["enable_detailed_recording"] = o.EnableDetailedRecording
	}
	if !IsNil(o.LastUpdated) {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if !IsNil(o.OrgId) {
		toSerialize["org_id"] = o.OrgId
	}
	if !IsNil(o.Per) {
		toSerialize["per"] = o.Per
	}
	if !IsNil(o.QuotaMax) {
		toSerialize["quota_max"] = o.QuotaMax
	}
	if !IsNil(o.QuotaRenewalRate) {
		toSerialize["quota_renewal_rate"] = o.QuotaRenewalRate
	}
	if !IsNil(o.QuotaRenews) {
		toSerialize["quota_renews"] = o.QuotaRenews
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.ThrottleInterval) {
		toSerialize["throttle_interval"] = o.ThrottleInterval
	}
	if !IsNil(o.ThrottleRetryLimit) {
		toSerialize["throttle_retry_limit"] = o.ThrottleRetryLimit
	}
	return toSerialize, nil
}

type NullableGetOrgKey200Response struct {
	value *GetOrgKey200Response
	isSet bool
}

func (v NullableGetOrgKey200Response) Get() *GetOrgKey200Response {
	return v.value
}

func (v *NullableGetOrgKey200Response) Set(val *GetOrgKey200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrgKey200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrgKey200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrgKey200Response(val *GetOrgKey200Response) *NullableGetOrgKey200Response {
	return &NullableGetOrgKey200Response{value: val, isSet: true}
}

func (v NullableGetOrgKey200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrgKey200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
