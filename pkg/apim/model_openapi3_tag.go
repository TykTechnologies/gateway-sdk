/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Openapi3Tag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Openapi3Tag{}

// Openapi3Tag struct for Openapi3Tag
type Openapi3Tag struct {
	Description *string `json:"description,omitempty"`
	ExternalDocs *Openapi3ExternalDocs `json:"externalDocs,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewOpenapi3Tag instantiates a new Openapi3Tag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapi3Tag() *Openapi3Tag {
	this := Openapi3Tag{}
	return &this
}

// NewOpenapi3TagWithDefaults instantiates a new Openapi3Tag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapi3TagWithDefaults() *Openapi3Tag {
	this := Openapi3Tag{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Openapi3Tag) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Tag) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Openapi3Tag) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Openapi3Tag) SetDescription(v string) {
	o.Description = &v
}

// GetExternalDocs returns the ExternalDocs field value if set, zero value otherwise.
func (o *Openapi3Tag) GetExternalDocs() Openapi3ExternalDocs {
	if o == nil || IsNil(o.ExternalDocs) {
		var ret Openapi3ExternalDocs
		return ret
	}
	return *o.ExternalDocs
}

// GetExternalDocsOk returns a tuple with the ExternalDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Tag) GetExternalDocsOk() (*Openapi3ExternalDocs, bool) {
	if o == nil || IsNil(o.ExternalDocs) {
		return nil, false
	}
	return o.ExternalDocs, true
}

// HasExternalDocs returns a boolean if a field has been set.
func (o *Openapi3Tag) HasExternalDocs() bool {
	if o != nil && !IsNil(o.ExternalDocs) {
		return true
	}

	return false
}

// SetExternalDocs gets a reference to the given Openapi3ExternalDocs and assigns it to the ExternalDocs field.
func (o *Openapi3Tag) SetExternalDocs(v Openapi3ExternalDocs) {
	o.ExternalDocs = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Openapi3Tag) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Tag) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Openapi3Tag) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Openapi3Tag) SetName(v string) {
	o.Name = &v
}

func (o Openapi3Tag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Openapi3Tag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.ExternalDocs) {
		toSerialize["externalDocs"] = o.ExternalDocs
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableOpenapi3Tag struct {
	value *Openapi3Tag
	isSet bool
}

func (v NullableOpenapi3Tag) Get() *Openapi3Tag {
	return v.value
}

func (v *NullableOpenapi3Tag) Set(val *Openapi3Tag) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapi3Tag) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapi3Tag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapi3Tag(val *Openapi3Tag) *NullableOpenapi3Tag {
	return &NullableOpenapi3Tag{value: val, isSet: true}
}

func (v NullableOpenapi3Tag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapi3Tag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


