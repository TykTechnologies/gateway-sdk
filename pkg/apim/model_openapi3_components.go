/*
Tyk Gateway API

 The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway

API version: 5.2.3
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// checks if the Openapi3Components type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Openapi3Components{}

// Openapi3Components struct for Openapi3Components
type Openapi3Components struct {
	Callbacks *map[string]map[string]interface{} `json:"callbacks,omitempty"`
	Examples *map[string]map[string]interface{} `json:"examples,omitempty"`
	Headers *map[string]map[string]interface{} `json:"headers,omitempty"`
	Links *map[string]map[string]interface{} `json:"links,omitempty"`
	Parameters *map[string]map[string]interface{} `json:"parameters,omitempty"`
	RequestBodies *map[string]map[string]interface{} `json:"requestBodies,omitempty"`
	Responses *map[string]map[string]interface{} `json:"responses,omitempty"`
	Schemas *map[string]map[string]interface{} `json:"schemas,omitempty"`
	SecuritySchemes *map[string]map[string]interface{} `json:"securitySchemes,omitempty"`
}

// NewOpenapi3Components instantiates a new Openapi3Components object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapi3Components() *Openapi3Components {
	this := Openapi3Components{}
	return &this
}

// NewOpenapi3ComponentsWithDefaults instantiates a new Openapi3Components object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapi3ComponentsWithDefaults() *Openapi3Components {
	this := Openapi3Components{}
	return &this
}

// GetCallbacks returns the Callbacks field value if set, zero value otherwise.
func (o *Openapi3Components) GetCallbacks() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Callbacks) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Callbacks
}

// GetCallbacksOk returns a tuple with the Callbacks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetCallbacksOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Callbacks) {
		return nil, false
	}
	return o.Callbacks, true
}

// HasCallbacks returns a boolean if a field has been set.
func (o *Openapi3Components) HasCallbacks() bool {
	if o != nil && !IsNil(o.Callbacks) {
		return true
	}

	return false
}

// SetCallbacks gets a reference to the given map[string]map[string]interface{} and assigns it to the Callbacks field.
func (o *Openapi3Components) SetCallbacks(v map[string]map[string]interface{}) {
	o.Callbacks = &v
}

// GetExamples returns the Examples field value if set, zero value otherwise.
func (o *Openapi3Components) GetExamples() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Examples) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Examples
}

// GetExamplesOk returns a tuple with the Examples field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetExamplesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Examples) {
		return nil, false
	}
	return o.Examples, true
}

// HasExamples returns a boolean if a field has been set.
func (o *Openapi3Components) HasExamples() bool {
	if o != nil && !IsNil(o.Examples) {
		return true
	}

	return false
}

// SetExamples gets a reference to the given map[string]map[string]interface{} and assigns it to the Examples field.
func (o *Openapi3Components) SetExamples(v map[string]map[string]interface{}) {
	o.Examples = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *Openapi3Components) GetHeaders() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetHeadersOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *Openapi3Components) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]map[string]interface{} and assigns it to the Headers field.
func (o *Openapi3Components) SetHeaders(v map[string]map[string]interface{}) {
	o.Headers = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Openapi3Components) GetLinks() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Links) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetLinksOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Openapi3Components) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]map[string]interface{} and assigns it to the Links field.
func (o *Openapi3Components) SetLinks(v map[string]map[string]interface{}) {
	o.Links = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *Openapi3Components) GetParameters() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Parameters) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetParametersOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *Openapi3Components) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]map[string]interface{} and assigns it to the Parameters field.
func (o *Openapi3Components) SetParameters(v map[string]map[string]interface{}) {
	o.Parameters = &v
}

// GetRequestBodies returns the RequestBodies field value if set, zero value otherwise.
func (o *Openapi3Components) GetRequestBodies() map[string]map[string]interface{} {
	if o == nil || IsNil(o.RequestBodies) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.RequestBodies
}

// GetRequestBodiesOk returns a tuple with the RequestBodies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetRequestBodiesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.RequestBodies) {
		return nil, false
	}
	return o.RequestBodies, true
}

// HasRequestBodies returns a boolean if a field has been set.
func (o *Openapi3Components) HasRequestBodies() bool {
	if o != nil && !IsNil(o.RequestBodies) {
		return true
	}

	return false
}

// SetRequestBodies gets a reference to the given map[string]map[string]interface{} and assigns it to the RequestBodies field.
func (o *Openapi3Components) SetRequestBodies(v map[string]map[string]interface{}) {
	o.RequestBodies = &v
}

// GetResponses returns the Responses field value if set, zero value otherwise.
func (o *Openapi3Components) GetResponses() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Responses) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Responses
}

// GetResponsesOk returns a tuple with the Responses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetResponsesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Responses) {
		return nil, false
	}
	return o.Responses, true
}

// HasResponses returns a boolean if a field has been set.
func (o *Openapi3Components) HasResponses() bool {
	if o != nil && !IsNil(o.Responses) {
		return true
	}

	return false
}

// SetResponses gets a reference to the given map[string]map[string]interface{} and assigns it to the Responses field.
func (o *Openapi3Components) SetResponses(v map[string]map[string]interface{}) {
	o.Responses = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *Openapi3Components) GetSchemas() map[string]map[string]interface{} {
	if o == nil || IsNil(o.Schemas) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetSchemasOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *Openapi3Components) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given map[string]map[string]interface{} and assigns it to the Schemas field.
func (o *Openapi3Components) SetSchemas(v map[string]map[string]interface{}) {
	o.Schemas = &v
}

// GetSecuritySchemes returns the SecuritySchemes field value if set, zero value otherwise.
func (o *Openapi3Components) GetSecuritySchemes() map[string]map[string]interface{} {
	if o == nil || IsNil(o.SecuritySchemes) {
		var ret map[string]map[string]interface{}
		return ret
	}
	return *o.SecuritySchemes
}

// GetSecuritySchemesOk returns a tuple with the SecuritySchemes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Openapi3Components) GetSecuritySchemesOk() (*map[string]map[string]interface{}, bool) {
	if o == nil || IsNil(o.SecuritySchemes) {
		return nil, false
	}
	return o.SecuritySchemes, true
}

// HasSecuritySchemes returns a boolean if a field has been set.
func (o *Openapi3Components) HasSecuritySchemes() bool {
	if o != nil && !IsNil(o.SecuritySchemes) {
		return true
	}

	return false
}

// SetSecuritySchemes gets a reference to the given map[string]map[string]interface{} and assigns it to the SecuritySchemes field.
func (o *Openapi3Components) SetSecuritySchemes(v map[string]map[string]interface{}) {
	o.SecuritySchemes = &v
}

func (o Openapi3Components) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Openapi3Components) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Callbacks) {
		toSerialize["callbacks"] = o.Callbacks
	}
	if !IsNil(o.Examples) {
		toSerialize["examples"] = o.Examples
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.RequestBodies) {
		toSerialize["requestBodies"] = o.RequestBodies
	}
	if !IsNil(o.Responses) {
		toSerialize["responses"] = o.Responses
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.SecuritySchemes) {
		toSerialize["securitySchemes"] = o.SecuritySchemes
	}
	return toSerialize, nil
}

type NullableOpenapi3Components struct {
	value *Openapi3Components
	isSet bool
}

func (v NullableOpenapi3Components) Get() *Openapi3Components {
	return v.value
}

func (v *NullableOpenapi3Components) Set(val *Openapi3Components) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapi3Components) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapi3Components) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapi3Components(val *Openapi3Components) *NullableOpenapi3Components {
	return &NullableOpenapi3Components{value: val, isSet: true}
}

func (v NullableOpenapi3Components) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapi3Components) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


