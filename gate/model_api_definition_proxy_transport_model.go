/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gate

import (
	"encoding/json"
)

// APIDefinitionProxyTransportModel struct for APIDefinitionProxyTransportModel
type APIDefinitionProxyTransportModel struct {
	ProxyUrl *string `json:"proxy_url,omitempty"`
	SslCiphers []string `json:"ssl_ciphers,omitempty"`
	SslInsecureSkipVerify *bool `json:"ssl_insecure_skip_verify,omitempty"`
	SslMinVersion *int32 `json:"ssl_min_version,omitempty"`
}

// NewAPIDefinitionProxyTransportModel instantiates a new APIDefinitionProxyTransportModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIDefinitionProxyTransportModel() *APIDefinitionProxyTransportModel {
	this := APIDefinitionProxyTransportModel{}
	return &this
}

// NewAPIDefinitionProxyTransportModelWithDefaults instantiates a new APIDefinitionProxyTransportModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIDefinitionProxyTransportModelWithDefaults() *APIDefinitionProxyTransportModel {
	this := APIDefinitionProxyTransportModel{}
	return &this
}

// GetProxyUrl returns the ProxyUrl field value if set, zero value otherwise.
func (o *APIDefinitionProxyTransportModel) GetProxyUrl() string {
	if o == nil || o.ProxyUrl == nil {
		var ret string
		return ret
	}
	return *o.ProxyUrl
}

// GetProxyUrlOk returns a tuple with the ProxyUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionProxyTransportModel) GetProxyUrlOk() (*string, bool) {
	if o == nil || o.ProxyUrl == nil {
		return nil, false
	}
	return o.ProxyUrl, true
}

// HasProxyUrl returns a boolean if a field has been set.
func (o *APIDefinitionProxyTransportModel) HasProxyUrl() bool {
	if o != nil && o.ProxyUrl != nil {
		return true
	}

	return false
}

// SetProxyUrl gets a reference to the given string and assigns it to the ProxyUrl field.
func (o *APIDefinitionProxyTransportModel) SetProxyUrl(v string) {
	o.ProxyUrl = &v
}

// GetSslCiphers returns the SslCiphers field value if set, zero value otherwise.
func (o *APIDefinitionProxyTransportModel) GetSslCiphers() []string {
	if o == nil || o.SslCiphers == nil {
		var ret []string
		return ret
	}
	return o.SslCiphers
}

// GetSslCiphersOk returns a tuple with the SslCiphers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionProxyTransportModel) GetSslCiphersOk() ([]string, bool) {
	if o == nil || o.SslCiphers == nil {
		return nil, false
	}
	return o.SslCiphers, true
}

// HasSslCiphers returns a boolean if a field has been set.
func (o *APIDefinitionProxyTransportModel) HasSslCiphers() bool {
	if o != nil && o.SslCiphers != nil {
		return true
	}

	return false
}

// SetSslCiphers gets a reference to the given []string and assigns it to the SslCiphers field.
func (o *APIDefinitionProxyTransportModel) SetSslCiphers(v []string) {
	o.SslCiphers = v
}

// GetSslInsecureSkipVerify returns the SslInsecureSkipVerify field value if set, zero value otherwise.
func (o *APIDefinitionProxyTransportModel) GetSslInsecureSkipVerify() bool {
	if o == nil || o.SslInsecureSkipVerify == nil {
		var ret bool
		return ret
	}
	return *o.SslInsecureSkipVerify
}

// GetSslInsecureSkipVerifyOk returns a tuple with the SslInsecureSkipVerify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionProxyTransportModel) GetSslInsecureSkipVerifyOk() (*bool, bool) {
	if o == nil || o.SslInsecureSkipVerify == nil {
		return nil, false
	}
	return o.SslInsecureSkipVerify, true
}

// HasSslInsecureSkipVerify returns a boolean if a field has been set.
func (o *APIDefinitionProxyTransportModel) HasSslInsecureSkipVerify() bool {
	if o != nil && o.SslInsecureSkipVerify != nil {
		return true
	}

	return false
}

// SetSslInsecureSkipVerify gets a reference to the given bool and assigns it to the SslInsecureSkipVerify field.
func (o *APIDefinitionProxyTransportModel) SetSslInsecureSkipVerify(v bool) {
	o.SslInsecureSkipVerify = &v
}

// GetSslMinVersion returns the SslMinVersion field value if set, zero value otherwise.
func (o *APIDefinitionProxyTransportModel) GetSslMinVersion() int32 {
	if o == nil || o.SslMinVersion == nil {
		var ret int32
		return ret
	}
	return *o.SslMinVersion
}

// GetSslMinVersionOk returns a tuple with the SslMinVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionProxyTransportModel) GetSslMinVersionOk() (*int32, bool) {
	if o == nil || o.SslMinVersion == nil {
		return nil, false
	}
	return o.SslMinVersion, true
}

// HasSslMinVersion returns a boolean if a field has been set.
func (o *APIDefinitionProxyTransportModel) HasSslMinVersion() bool {
	if o != nil && o.SslMinVersion != nil {
		return true
	}

	return false
}

// SetSslMinVersion gets a reference to the given int32 and assigns it to the SslMinVersion field.
func (o *APIDefinitionProxyTransportModel) SetSslMinVersion(v int32) {
	o.SslMinVersion = &v
}

func (o APIDefinitionProxyTransportModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ProxyUrl != nil {
		toSerialize["proxy_url"] = o.ProxyUrl
	}
	if o.SslCiphers != nil {
		toSerialize["ssl_ciphers"] = o.SslCiphers
	}
	if o.SslInsecureSkipVerify != nil {
		toSerialize["ssl_insecure_skip_verify"] = o.SslInsecureSkipVerify
	}
	if o.SslMinVersion != nil {
		toSerialize["ssl_min_version"] = o.SslMinVersion
	}
	return json.Marshal(toSerialize)
}

type NullableAPIDefinitionProxyTransportModel struct {
	value *APIDefinitionProxyTransportModel
	isSet bool
}

func (v NullableAPIDefinitionProxyTransportModel) Get() *APIDefinitionProxyTransportModel {
	return v.value
}

func (v *NullableAPIDefinitionProxyTransportModel) Set(val *APIDefinitionProxyTransportModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIDefinitionProxyTransportModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIDefinitionProxyTransportModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIDefinitionProxyTransportModel(val *APIDefinitionProxyTransportModel) *NullableAPIDefinitionProxyTransportModel {
	return &NullableAPIDefinitionProxyTransportModel{value: val, isSet: true}
}

func (v NullableAPIDefinitionProxyTransportModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIDefinitionProxyTransportModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


