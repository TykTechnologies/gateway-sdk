/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gate

import (
	"encoding/json"
)

// HostCheckObjectModel struct for HostCheckObjectModel
type HostCheckObjectModel struct {
	Body *string `json:"body,omitempty"`
	Headers *map[string]string `json:"headers,omitempty"`
	Method *string `json:"method,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewHostCheckObjectModel instantiates a new HostCheckObjectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostCheckObjectModel() *HostCheckObjectModel {
	this := HostCheckObjectModel{}
	return &this
}

// NewHostCheckObjectModelWithDefaults instantiates a new HostCheckObjectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostCheckObjectModelWithDefaults() *HostCheckObjectModel {
	this := HostCheckObjectModel{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *HostCheckObjectModel) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostCheckObjectModel) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *HostCheckObjectModel) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *HostCheckObjectModel) SetBody(v string) {
	o.Body = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *HostCheckObjectModel) GetHeaders() map[string]string {
	if o == nil || o.Headers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostCheckObjectModel) GetHeadersOk() (*map[string]string, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *HostCheckObjectModel) HasHeaders() bool {
	if o != nil && o.Headers != nil {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]string and assigns it to the Headers field.
func (o *HostCheckObjectModel) SetHeaders(v map[string]string) {
	o.Headers = &v
}

// GetMethod returns the Method field value if set, zero value otherwise.
func (o *HostCheckObjectModel) GetMethod() string {
	if o == nil || o.Method == nil {
		var ret string
		return ret
	}
	return *o.Method
}

// GetMethodOk returns a tuple with the Method field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostCheckObjectModel) GetMethodOk() (*string, bool) {
	if o == nil || o.Method == nil {
		return nil, false
	}
	return o.Method, true
}

// HasMethod returns a boolean if a field has been set.
func (o *HostCheckObjectModel) HasMethod() bool {
	if o != nil && o.Method != nil {
		return true
	}

	return false
}

// SetMethod gets a reference to the given string and assigns it to the Method field.
func (o *HostCheckObjectModel) SetMethod(v string) {
	o.Method = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *HostCheckObjectModel) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostCheckObjectModel) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *HostCheckObjectModel) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *HostCheckObjectModel) SetUrl(v string) {
	o.Url = &v
}

func (o HostCheckObjectModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Method != nil {
		toSerialize["method"] = o.Method
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableHostCheckObjectModel struct {
	value *HostCheckObjectModel
	isSet bool
}

func (v NullableHostCheckObjectModel) Get() *HostCheckObjectModel {
	return v.value
}

func (v *NullableHostCheckObjectModel) Set(val *HostCheckObjectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableHostCheckObjectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableHostCheckObjectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostCheckObjectModel(val *HostCheckObjectModel) *NullableHostCheckObjectModel {
	return &NullableHostCheckObjectModel{value: val, isSet: true}
}

func (v NullableHostCheckObjectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostCheckObjectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


