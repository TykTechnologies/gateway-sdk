/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// APIDefinitionVersionDataModel struct for APIDefinitionVersionDataModel
type APIDefinitionVersionDataModel struct {
	DefaultVersion *string `json:"default_version,omitempty"`
	NotVersioned *bool `json:"not_versioned,omitempty"`
	Versions *map[string]VersionInfoModelModel `json:"versions,omitempty"`
}

// NewAPIDefinitionVersionDataModel instantiates a new APIDefinitionVersionDataModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIDefinitionVersionDataModel() *APIDefinitionVersionDataModel {
	this := APIDefinitionVersionDataModel{}
	return &this
}

// NewAPIDefinitionVersionDataModelWithDefaults instantiates a new APIDefinitionVersionDataModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIDefinitionVersionDataModelWithDefaults() *APIDefinitionVersionDataModel {
	this := APIDefinitionVersionDataModel{}
	return &this
}

// GetDefaultVersion returns the DefaultVersion field value if set, zero value otherwise.
func (o *APIDefinitionVersionDataModel) GetDefaultVersion() string {
	if o == nil || o.DefaultVersion == nil {
		var ret string
		return ret
	}
	return *o.DefaultVersion
}

// GetDefaultVersionOk returns a tuple with the DefaultVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionVersionDataModel) GetDefaultVersionOk() (*string, bool) {
	if o == nil || o.DefaultVersion == nil {
		return nil, false
	}
	return o.DefaultVersion, true
}

// HasDefaultVersion returns a boolean if a field has been set.
func (o *APIDefinitionVersionDataModel) HasDefaultVersion() bool {
	if o != nil && o.DefaultVersion != nil {
		return true
	}

	return false
}

// SetDefaultVersion gets a reference to the given string and assigns it to the DefaultVersion field.
func (o *APIDefinitionVersionDataModel) SetDefaultVersion(v string) {
	o.DefaultVersion = &v
}

// GetNotVersioned returns the NotVersioned field value if set, zero value otherwise.
func (o *APIDefinitionVersionDataModel) GetNotVersioned() bool {
	if o == nil || o.NotVersioned == nil {
		var ret bool
		return ret
	}
	return *o.NotVersioned
}

// GetNotVersionedOk returns a tuple with the NotVersioned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionVersionDataModel) GetNotVersionedOk() (*bool, bool) {
	if o == nil || o.NotVersioned == nil {
		return nil, false
	}
	return o.NotVersioned, true
}

// HasNotVersioned returns a boolean if a field has been set.
func (o *APIDefinitionVersionDataModel) HasNotVersioned() bool {
	if o != nil && o.NotVersioned != nil {
		return true
	}

	return false
}

// SetNotVersioned gets a reference to the given bool and assigns it to the NotVersioned field.
func (o *APIDefinitionVersionDataModel) SetNotVersioned(v bool) {
	o.NotVersioned = &v
}

// GetVersions returns the Versions field value if set, zero value otherwise.
func (o *APIDefinitionVersionDataModel) GetVersions() map[string]VersionInfoModelModel {
	if o == nil || o.Versions == nil {
		var ret map[string]VersionInfoModelModel
		return ret
	}
	return *o.Versions
}

// GetVersionsOk returns a tuple with the Versions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIDefinitionVersionDataModel) GetVersionsOk() (*map[string]VersionInfoModelModel, bool) {
	if o == nil || o.Versions == nil {
		return nil, false
	}
	return o.Versions, true
}

// HasVersions returns a boolean if a field has been set.
func (o *APIDefinitionVersionDataModel) HasVersions() bool {
	if o != nil && o.Versions != nil {
		return true
	}

	return false
}

// SetVersions gets a reference to the given map[string]VersionInfoModelModel and assigns it to the Versions field.
func (o *APIDefinitionVersionDataModel) SetVersions(v map[string]VersionInfoModelModel) {
	o.Versions = &v
}

func (o APIDefinitionVersionDataModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultVersion != nil {
		toSerialize["default_version"] = o.DefaultVersion
	}
	if o.NotVersioned != nil {
		toSerialize["not_versioned"] = o.NotVersioned
	}
	if o.Versions != nil {
		toSerialize["versions"] = o.Versions
	}
	return json.Marshal(toSerialize)
}

type NullableAPIDefinitionVersionDataModel struct {
	value *APIDefinitionVersionDataModel
	isSet bool
}

func (v NullableAPIDefinitionVersionDataModel) Get() *APIDefinitionVersionDataModel {
	return v.value
}

func (v *NullableAPIDefinitionVersionDataModel) Set(val *APIDefinitionVersionDataModel) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIDefinitionVersionDataModel) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIDefinitionVersionDataModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIDefinitionVersionDataModel(val *APIDefinitionVersionDataModel) *NullableAPIDefinitionVersionDataModel {
	return &NullableAPIDefinitionVersionDataModel{value: val, isSet: true}
}

func (v NullableAPIDefinitionVersionDataModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIDefinitionVersionDataModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


