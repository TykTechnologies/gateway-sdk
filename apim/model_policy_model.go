/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// PolicyModel struct for PolicyModel
type PolicyModel struct {
	// http://www.mongodb.org/display/DOCS/Object+IDs
	Id *string `json:"_id,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OrgId *string `json:"org_id,omitempty"`
	Rate *float64 `json:"rate,omitempty"`
	Per *float64 `json:"per,omitempty"`
	QuotaMax *int64 `json:"quota_max,omitempty"`
	QuotaRenewalRate *int64 `json:"quota_renewal_rate,omitempty"`
	ThrottleInterval *float64 `json:"throttle_interval,omitempty"`
	ThrottleRetryLimit *float32 `json:"throttle_retry_limit,omitempty"`
	MaxQueryDepth *float32 `json:"max_query_depth,omitempty"`
	AccessRights AccessDefinitionModelModel `json:"access_rights,omitempty"`
	HmacEnabled *bool `json:"hmac_enabled,omitempty"`
	EnableHttpSignatureValidation *bool `json:"enable_http_signature_validation,omitempty"`
	Active *bool `json:"active,omitempty"`
	IsInactive *bool `json:"is_inactive,omitempty"`
	Tags []string `json:"tags,omitempty"`
	KeyExpiresIn *float32 `json:"key_expires_in,omitempty"`
	Partitions PolicyPartitionsModelModel `json:"partitions,omitempty"`
	LastUpdated *string `json:"last_updated,omitempty"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	GraphqlAccessRights map[string]interface{} `json:"graphql_access_rights,omitempty"`
}

// NewPolicyModel instantiates a new PolicyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyModel() *PolicyModel {
	this := PolicyModel{}
	return &this
}

// NewPolicyModelWithDefaults instantiates a new PolicyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyModelWithDefaults() *PolicyModel {
	this := PolicyModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicyModel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicyModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicyModel) SetId(v string) {
	o.Id = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicyModel) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicyModel) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicyModel) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyModel) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyModel) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyModel) SetName(v string) {
	o.Name = &v
}

// GetOrgId returns the OrgId field value if set, zero value otherwise.
func (o *PolicyModel) GetOrgId() string {
	if o == nil || o.OrgId == nil {
		var ret string
		return ret
	}
	return *o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetOrgIdOk() (*string, bool) {
	if o == nil || o.OrgId == nil {
		return nil, false
	}
	return o.OrgId, true
}

// HasOrgId returns a boolean if a field has been set.
func (o *PolicyModel) HasOrgId() bool {
	if o != nil && o.OrgId != nil {
		return true
	}

	return false
}

// SetOrgId gets a reference to the given string and assigns it to the OrgId field.
func (o *PolicyModel) SetOrgId(v string) {
	o.OrgId = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *PolicyModel) GetRate() float64 {
	if o == nil || o.Rate == nil {
		var ret float64
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetRateOk() (*float64, bool) {
	if o == nil || o.Rate == nil {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *PolicyModel) HasRate() bool {
	if o != nil && o.Rate != nil {
		return true
	}

	return false
}

// SetRate gets a reference to the given float64 and assigns it to the Rate field.
func (o *PolicyModel) SetRate(v float64) {
	o.Rate = &v
}

// GetPer returns the Per field value if set, zero value otherwise.
func (o *PolicyModel) GetPer() float64 {
	if o == nil || o.Per == nil {
		var ret float64
		return ret
	}
	return *o.Per
}

// GetPerOk returns a tuple with the Per field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetPerOk() (*float64, bool) {
	if o == nil || o.Per == nil {
		return nil, false
	}
	return o.Per, true
}

// HasPer returns a boolean if a field has been set.
func (o *PolicyModel) HasPer() bool {
	if o != nil && o.Per != nil {
		return true
	}

	return false
}

// SetPer gets a reference to the given float64 and assigns it to the Per field.
func (o *PolicyModel) SetPer(v float64) {
	o.Per = &v
}

// GetQuotaMax returns the QuotaMax field value if set, zero value otherwise.
func (o *PolicyModel) GetQuotaMax() int64 {
	if o == nil || o.QuotaMax == nil {
		var ret int64
		return ret
	}
	return *o.QuotaMax
}

// GetQuotaMaxOk returns a tuple with the QuotaMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetQuotaMaxOk() (*int64, bool) {
	if o == nil || o.QuotaMax == nil {
		return nil, false
	}
	return o.QuotaMax, true
}

// HasQuotaMax returns a boolean if a field has been set.
func (o *PolicyModel) HasQuotaMax() bool {
	if o != nil && o.QuotaMax != nil {
		return true
	}

	return false
}

// SetQuotaMax gets a reference to the given int64 and assigns it to the QuotaMax field.
func (o *PolicyModel) SetQuotaMax(v int64) {
	o.QuotaMax = &v
}

// GetQuotaRenewalRate returns the QuotaRenewalRate field value if set, zero value otherwise.
func (o *PolicyModel) GetQuotaRenewalRate() int64 {
	if o == nil || o.QuotaRenewalRate == nil {
		var ret int64
		return ret
	}
	return *o.QuotaRenewalRate
}

// GetQuotaRenewalRateOk returns a tuple with the QuotaRenewalRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetQuotaRenewalRateOk() (*int64, bool) {
	if o == nil || o.QuotaRenewalRate == nil {
		return nil, false
	}
	return o.QuotaRenewalRate, true
}

// HasQuotaRenewalRate returns a boolean if a field has been set.
func (o *PolicyModel) HasQuotaRenewalRate() bool {
	if o != nil && o.QuotaRenewalRate != nil {
		return true
	}

	return false
}

// SetQuotaRenewalRate gets a reference to the given int64 and assigns it to the QuotaRenewalRate field.
func (o *PolicyModel) SetQuotaRenewalRate(v int64) {
	o.QuotaRenewalRate = &v
}

// GetThrottleInterval returns the ThrottleInterval field value if set, zero value otherwise.
func (o *PolicyModel) GetThrottleInterval() float64 {
	if o == nil || o.ThrottleInterval == nil {
		var ret float64
		return ret
	}
	return *o.ThrottleInterval
}

// GetThrottleIntervalOk returns a tuple with the ThrottleInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetThrottleIntervalOk() (*float64, bool) {
	if o == nil || o.ThrottleInterval == nil {
		return nil, false
	}
	return o.ThrottleInterval, true
}

// HasThrottleInterval returns a boolean if a field has been set.
func (o *PolicyModel) HasThrottleInterval() bool {
	if o != nil && o.ThrottleInterval != nil {
		return true
	}

	return false
}

// SetThrottleInterval gets a reference to the given float64 and assigns it to the ThrottleInterval field.
func (o *PolicyModel) SetThrottleInterval(v float64) {
	o.ThrottleInterval = &v
}

// GetThrottleRetryLimit returns the ThrottleRetryLimit field value if set, zero value otherwise.
func (o *PolicyModel) GetThrottleRetryLimit() float32 {
	if o == nil || o.ThrottleRetryLimit == nil {
		var ret float32
		return ret
	}
	return *o.ThrottleRetryLimit
}

// GetThrottleRetryLimitOk returns a tuple with the ThrottleRetryLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetThrottleRetryLimitOk() (*float32, bool) {
	if o == nil || o.ThrottleRetryLimit == nil {
		return nil, false
	}
	return o.ThrottleRetryLimit, true
}

// HasThrottleRetryLimit returns a boolean if a field has been set.
func (o *PolicyModel) HasThrottleRetryLimit() bool {
	if o != nil && o.ThrottleRetryLimit != nil {
		return true
	}

	return false
}

// SetThrottleRetryLimit gets a reference to the given float32 and assigns it to the ThrottleRetryLimit field.
func (o *PolicyModel) SetThrottleRetryLimit(v float32) {
	o.ThrottleRetryLimit = &v
}

// GetMaxQueryDepth returns the MaxQueryDepth field value if set, zero value otherwise.
func (o *PolicyModel) GetMaxQueryDepth() float32 {
	if o == nil || o.MaxQueryDepth == nil {
		var ret float32
		return ret
	}
	return *o.MaxQueryDepth
}

// GetMaxQueryDepthOk returns a tuple with the MaxQueryDepth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetMaxQueryDepthOk() (*float32, bool) {
	if o == nil || o.MaxQueryDepth == nil {
		return nil, false
	}
	return o.MaxQueryDepth, true
}

// HasMaxQueryDepth returns a boolean if a field has been set.
func (o *PolicyModel) HasMaxQueryDepth() bool {
	if o != nil && o.MaxQueryDepth != nil {
		return true
	}

	return false
}

// SetMaxQueryDepth gets a reference to the given float32 and assigns it to the MaxQueryDepth field.
func (o *PolicyModel) SetMaxQueryDepth(v float32) {
	o.MaxQueryDepth = &v
}

// GetAccessRights returns the AccessRights field value if set, zero value otherwise.
func (o *PolicyModel) GetAccessRights() AccessDefinitionModelModel {
	if o == nil || o.AccessRights == nil {
		var ret AccessDefinitionModelModel
		return ret
	}
	return o.AccessRights
}

// GetAccessRightsOk returns a tuple with the AccessRights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetAccessRightsOk() (AccessDefinitionModelModel, bool) {
	if o == nil || o.AccessRights == nil {
		return nil, false
	}
	return o.AccessRights, true
}

// HasAccessRights returns a boolean if a field has been set.
func (o *PolicyModel) HasAccessRights() bool {
	if o != nil && o.AccessRights != nil {
		return true
	}

	return false
}

// SetAccessRights gets a reference to the given AccessDefinitionModelModel and assigns it to the AccessRights field.
func (o *PolicyModel) SetAccessRights(v AccessDefinitionModelModel) {
	o.AccessRights = v
}

// GetHmacEnabled returns the HmacEnabled field value if set, zero value otherwise.
func (o *PolicyModel) GetHmacEnabled() bool {
	if o == nil || o.HmacEnabled == nil {
		var ret bool
		return ret
	}
	return *o.HmacEnabled
}

// GetHmacEnabledOk returns a tuple with the HmacEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetHmacEnabledOk() (*bool, bool) {
	if o == nil || o.HmacEnabled == nil {
		return nil, false
	}
	return o.HmacEnabled, true
}

// HasHmacEnabled returns a boolean if a field has been set.
func (o *PolicyModel) HasHmacEnabled() bool {
	if o != nil && o.HmacEnabled != nil {
		return true
	}

	return false
}

// SetHmacEnabled gets a reference to the given bool and assigns it to the HmacEnabled field.
func (o *PolicyModel) SetHmacEnabled(v bool) {
	o.HmacEnabled = &v
}

// GetEnableHttpSignatureValidation returns the EnableHttpSignatureValidation field value if set, zero value otherwise.
func (o *PolicyModel) GetEnableHttpSignatureValidation() bool {
	if o == nil || o.EnableHttpSignatureValidation == nil {
		var ret bool
		return ret
	}
	return *o.EnableHttpSignatureValidation
}

// GetEnableHttpSignatureValidationOk returns a tuple with the EnableHttpSignatureValidation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetEnableHttpSignatureValidationOk() (*bool, bool) {
	if o == nil || o.EnableHttpSignatureValidation == nil {
		return nil, false
	}
	return o.EnableHttpSignatureValidation, true
}

// HasEnableHttpSignatureValidation returns a boolean if a field has been set.
func (o *PolicyModel) HasEnableHttpSignatureValidation() bool {
	if o != nil && o.EnableHttpSignatureValidation != nil {
		return true
	}

	return false
}

// SetEnableHttpSignatureValidation gets a reference to the given bool and assigns it to the EnableHttpSignatureValidation field.
func (o *PolicyModel) SetEnableHttpSignatureValidation(v bool) {
	o.EnableHttpSignatureValidation = &v
}

// GetActive returns the Active field value if set, zero value otherwise.
func (o *PolicyModel) GetActive() bool {
	if o == nil || o.Active == nil {
		var ret bool
		return ret
	}
	return *o.Active
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetActiveOk() (*bool, bool) {
	if o == nil || o.Active == nil {
		return nil, false
	}
	return o.Active, true
}

// HasActive returns a boolean if a field has been set.
func (o *PolicyModel) HasActive() bool {
	if o != nil && o.Active != nil {
		return true
	}

	return false
}

// SetActive gets a reference to the given bool and assigns it to the Active field.
func (o *PolicyModel) SetActive(v bool) {
	o.Active = &v
}

// GetIsInactive returns the IsInactive field value if set, zero value otherwise.
func (o *PolicyModel) GetIsInactive() bool {
	if o == nil || o.IsInactive == nil {
		var ret bool
		return ret
	}
	return *o.IsInactive
}

// GetIsInactiveOk returns a tuple with the IsInactive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetIsInactiveOk() (*bool, bool) {
	if o == nil || o.IsInactive == nil {
		return nil, false
	}
	return o.IsInactive, true
}

// HasIsInactive returns a boolean if a field has been set.
func (o *PolicyModel) HasIsInactive() bool {
	if o != nil && o.IsInactive != nil {
		return true
	}

	return false
}

// SetIsInactive gets a reference to the given bool and assigns it to the IsInactive field.
func (o *PolicyModel) SetIsInactive(v bool) {
	o.IsInactive = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PolicyModel) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PolicyModel) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PolicyModel) SetTags(v []string) {
	o.Tags = v
}

// GetKeyExpiresIn returns the KeyExpiresIn field value if set, zero value otherwise.
func (o *PolicyModel) GetKeyExpiresIn() float32 {
	if o == nil || o.KeyExpiresIn == nil {
		var ret float32
		return ret
	}
	return *o.KeyExpiresIn
}

// GetKeyExpiresInOk returns a tuple with the KeyExpiresIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetKeyExpiresInOk() (*float32, bool) {
	if o == nil || o.KeyExpiresIn == nil {
		return nil, false
	}
	return o.KeyExpiresIn, true
}

// HasKeyExpiresIn returns a boolean if a field has been set.
func (o *PolicyModel) HasKeyExpiresIn() bool {
	if o != nil && o.KeyExpiresIn != nil {
		return true
	}

	return false
}

// SetKeyExpiresIn gets a reference to the given float32 and assigns it to the KeyExpiresIn field.
func (o *PolicyModel) SetKeyExpiresIn(v float32) {
	o.KeyExpiresIn = &v
}

// GetPartitions returns the Partitions field value if set, zero value otherwise.
func (o *PolicyModel) GetPartitions() PolicyPartitionsModelModel {
	if o == nil || o.Partitions == nil {
		var ret PolicyPartitionsModelModel
		return ret
	}
	return o.Partitions
}

// GetPartitionsOk returns a tuple with the Partitions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetPartitionsOk() (PolicyPartitionsModelModel, bool) {
	if o == nil || o.Partitions == nil {
		return nil, false
	}
	return o.Partitions, true
}

// HasPartitions returns a boolean if a field has been set.
func (o *PolicyModel) HasPartitions() bool {
	if o != nil && o.Partitions != nil {
		return true
	}

	return false
}

// SetPartitions gets a reference to the given PolicyPartitionsModelModel and assigns it to the Partitions field.
func (o *PolicyModel) SetPartitions(v PolicyPartitionsModelModel) {
	o.Partitions = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *PolicyModel) GetLastUpdated() string {
	if o == nil || o.LastUpdated == nil {
		var ret string
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetLastUpdatedOk() (*string, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *PolicyModel) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given string and assigns it to the LastUpdated field.
func (o *PolicyModel) SetLastUpdated(v string) {
	o.LastUpdated = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *PolicyModel) GetMetaData() map[string]interface{} {
	if o == nil || o.MetaData == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetMetaDataOk() (map[string]interface{}, bool) {
	if o == nil || o.MetaData == nil {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *PolicyModel) HasMetaData() bool {
	if o != nil && o.MetaData != nil {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given map[string]interface{} and assigns it to the MetaData field.
func (o *PolicyModel) SetMetaData(v map[string]interface{}) {
	o.MetaData = v
}

// GetGraphqlAccessRights returns the GraphqlAccessRights field value if set, zero value otherwise.
func (o *PolicyModel) GetGraphqlAccessRights() map[string]interface{} {
	if o == nil || o.GraphqlAccessRights == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.GraphqlAccessRights
}

// GetGraphqlAccessRightsOk returns a tuple with the GraphqlAccessRights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyModel) GetGraphqlAccessRightsOk() (map[string]interface{}, bool) {
	if o == nil || o.GraphqlAccessRights == nil {
		return nil, false
	}
	return o.GraphqlAccessRights, true
}

// HasGraphqlAccessRights returns a boolean if a field has been set.
func (o *PolicyModel) HasGraphqlAccessRights() bool {
	if o != nil && o.GraphqlAccessRights != nil {
		return true
	}

	return false
}

// SetGraphqlAccessRights gets a reference to the given map[string]interface{} and assigns it to the GraphqlAccessRights field.
func (o *PolicyModel) SetGraphqlAccessRights(v map[string]interface{}) {
	o.GraphqlAccessRights = v
}

func (o PolicyModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["_id"] = o.Id
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.OrgId != nil {
		toSerialize["org_id"] = o.OrgId
	}
	if o.Rate != nil {
		toSerialize["rate"] = o.Rate
	}
	if o.Per != nil {
		toSerialize["per"] = o.Per
	}
	if o.QuotaMax != nil {
		toSerialize["quota_max"] = o.QuotaMax
	}
	if o.QuotaRenewalRate != nil {
		toSerialize["quota_renewal_rate"] = o.QuotaRenewalRate
	}
	if o.ThrottleInterval != nil {
		toSerialize["throttle_interval"] = o.ThrottleInterval
	}
	if o.ThrottleRetryLimit != nil {
		toSerialize["throttle_retry_limit"] = o.ThrottleRetryLimit
	}
	if o.MaxQueryDepth != nil {
		toSerialize["max_query_depth"] = o.MaxQueryDepth
	}
	if o.AccessRights != nil {
		toSerialize["access_rights"] = o.AccessRights
	}
	if o.HmacEnabled != nil {
		toSerialize["hmac_enabled"] = o.HmacEnabled
	}
	if o.EnableHttpSignatureValidation != nil {
		toSerialize["enable_http_signature_validation"] = o.EnableHttpSignatureValidation
	}
	if o.Active != nil {
		toSerialize["active"] = o.Active
	}
	if o.IsInactive != nil {
		toSerialize["is_inactive"] = o.IsInactive
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.KeyExpiresIn != nil {
		toSerialize["key_expires_in"] = o.KeyExpiresIn
	}
	if o.Partitions != nil {
		toSerialize["partitions"] = o.Partitions
	}
	if o.LastUpdated != nil {
		toSerialize["last_updated"] = o.LastUpdated
	}
	if o.MetaData != nil {
		toSerialize["meta_data"] = o.MetaData
	}
	if o.GraphqlAccessRights != nil {
		toSerialize["graphql_access_rights"] = o.GraphqlAccessRights
	}
	return json.Marshal(toSerialize)
}

type NullablePolicyModel struct {
	value *PolicyModel
	isSet bool
}

func (v NullablePolicyModel) Get() *PolicyModel {
	return v.value
}

func (v *NullablePolicyModel) Set(val *PolicyModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyModel(val *PolicyModel) *NullablePolicyModel {
	return &NullablePolicyModel{value: val, isSet: true}
}

func (v NullablePolicyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


