/*
Tyk Gateway API

The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>

API version: 4.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package apim

import (
	"encoding/json"
)

// RoutingTriggerOptionsModel struct for RoutingTriggerOptionsModel
type RoutingTriggerOptionsModel struct {
	HeaderMatches *map[string]StringRegexMapModelModel `json:"header_matches,omitempty"`
	PathPartMatches *map[string]StringRegexMapModelModel `json:"path_part_matches,omitempty"`
	PayloadMatches *StringRegexMapModelModel `json:"payload_matches,omitempty"`
	QueryValMatches *map[string]StringRegexMapModelModel `json:"query_val_matches,omitempty"`
	RequestContextMatches *map[string]StringRegexMapModelModel `json:"request_context_matches,omitempty"`
	SessionMetaMatches *map[string]StringRegexMapModelModel `json:"session_meta_matches,omitempty"`
}

// NewRoutingTriggerOptionsModel instantiates a new RoutingTriggerOptionsModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingTriggerOptionsModel() *RoutingTriggerOptionsModel {
	this := RoutingTriggerOptionsModel{}
	return &this
}

// NewRoutingTriggerOptionsModelWithDefaults instantiates a new RoutingTriggerOptionsModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingTriggerOptionsModelWithDefaults() *RoutingTriggerOptionsModel {
	this := RoutingTriggerOptionsModel{}
	return &this
}

// GetHeaderMatches returns the HeaderMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetHeaderMatches() map[string]StringRegexMapModelModel {
	if o == nil || o.HeaderMatches == nil {
		var ret map[string]StringRegexMapModelModel
		return ret
	}
	return *o.HeaderMatches
}

// GetHeaderMatchesOk returns a tuple with the HeaderMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetHeaderMatchesOk() (*map[string]StringRegexMapModelModel, bool) {
	if o == nil || o.HeaderMatches == nil {
		return nil, false
	}
	return o.HeaderMatches, true
}

// HasHeaderMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasHeaderMatches() bool {
	if o != nil && o.HeaderMatches != nil {
		return true
	}

	return false
}

// SetHeaderMatches gets a reference to the given map[string]StringRegexMapModelModel and assigns it to the HeaderMatches field.
func (o *RoutingTriggerOptionsModel) SetHeaderMatches(v map[string]StringRegexMapModelModel) {
	o.HeaderMatches = &v
}

// GetPathPartMatches returns the PathPartMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetPathPartMatches() map[string]StringRegexMapModelModel {
	if o == nil || o.PathPartMatches == nil {
		var ret map[string]StringRegexMapModelModel
		return ret
	}
	return *o.PathPartMatches
}

// GetPathPartMatchesOk returns a tuple with the PathPartMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetPathPartMatchesOk() (*map[string]StringRegexMapModelModel, bool) {
	if o == nil || o.PathPartMatches == nil {
		return nil, false
	}
	return o.PathPartMatches, true
}

// HasPathPartMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasPathPartMatches() bool {
	if o != nil && o.PathPartMatches != nil {
		return true
	}

	return false
}

// SetPathPartMatches gets a reference to the given map[string]StringRegexMapModelModel and assigns it to the PathPartMatches field.
func (o *RoutingTriggerOptionsModel) SetPathPartMatches(v map[string]StringRegexMapModelModel) {
	o.PathPartMatches = &v
}

// GetPayloadMatches returns the PayloadMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetPayloadMatches() StringRegexMapModelModel {
	if o == nil || o.PayloadMatches == nil {
		var ret StringRegexMapModelModel
		return ret
	}
	return *o.PayloadMatches
}

// GetPayloadMatchesOk returns a tuple with the PayloadMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetPayloadMatchesOk() (*StringRegexMapModelModel, bool) {
	if o == nil || o.PayloadMatches == nil {
		return nil, false
	}
	return o.PayloadMatches, true
}

// HasPayloadMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasPayloadMatches() bool {
	if o != nil && o.PayloadMatches != nil {
		return true
	}

	return false
}

// SetPayloadMatches gets a reference to the given StringRegexMapModelModel and assigns it to the PayloadMatches field.
func (o *RoutingTriggerOptionsModel) SetPayloadMatches(v StringRegexMapModelModel) {
	o.PayloadMatches = &v
}

// GetQueryValMatches returns the QueryValMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetQueryValMatches() map[string]StringRegexMapModelModel {
	if o == nil || o.QueryValMatches == nil {
		var ret map[string]StringRegexMapModelModel
		return ret
	}
	return *o.QueryValMatches
}

// GetQueryValMatchesOk returns a tuple with the QueryValMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetQueryValMatchesOk() (*map[string]StringRegexMapModelModel, bool) {
	if o == nil || o.QueryValMatches == nil {
		return nil, false
	}
	return o.QueryValMatches, true
}

// HasQueryValMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasQueryValMatches() bool {
	if o != nil && o.QueryValMatches != nil {
		return true
	}

	return false
}

// SetQueryValMatches gets a reference to the given map[string]StringRegexMapModelModel and assigns it to the QueryValMatches field.
func (o *RoutingTriggerOptionsModel) SetQueryValMatches(v map[string]StringRegexMapModelModel) {
	o.QueryValMatches = &v
}

// GetRequestContextMatches returns the RequestContextMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetRequestContextMatches() map[string]StringRegexMapModelModel {
	if o == nil || o.RequestContextMatches == nil {
		var ret map[string]StringRegexMapModelModel
		return ret
	}
	return *o.RequestContextMatches
}

// GetRequestContextMatchesOk returns a tuple with the RequestContextMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetRequestContextMatchesOk() (*map[string]StringRegexMapModelModel, bool) {
	if o == nil || o.RequestContextMatches == nil {
		return nil, false
	}
	return o.RequestContextMatches, true
}

// HasRequestContextMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasRequestContextMatches() bool {
	if o != nil && o.RequestContextMatches != nil {
		return true
	}

	return false
}

// SetRequestContextMatches gets a reference to the given map[string]StringRegexMapModelModel and assigns it to the RequestContextMatches field.
func (o *RoutingTriggerOptionsModel) SetRequestContextMatches(v map[string]StringRegexMapModelModel) {
	o.RequestContextMatches = &v
}

// GetSessionMetaMatches returns the SessionMetaMatches field value if set, zero value otherwise.
func (o *RoutingTriggerOptionsModel) GetSessionMetaMatches() map[string]StringRegexMapModelModel {
	if o == nil || o.SessionMetaMatches == nil {
		var ret map[string]StringRegexMapModelModel
		return ret
	}
	return *o.SessionMetaMatches
}

// GetSessionMetaMatchesOk returns a tuple with the SessionMetaMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingTriggerOptionsModel) GetSessionMetaMatchesOk() (*map[string]StringRegexMapModelModel, bool) {
	if o == nil || o.SessionMetaMatches == nil {
		return nil, false
	}
	return o.SessionMetaMatches, true
}

// HasSessionMetaMatches returns a boolean if a field has been set.
func (o *RoutingTriggerOptionsModel) HasSessionMetaMatches() bool {
	if o != nil && o.SessionMetaMatches != nil {
		return true
	}

	return false
}

// SetSessionMetaMatches gets a reference to the given map[string]StringRegexMapModelModel and assigns it to the SessionMetaMatches field.
func (o *RoutingTriggerOptionsModel) SetSessionMetaMatches(v map[string]StringRegexMapModelModel) {
	o.SessionMetaMatches = &v
}

func (o RoutingTriggerOptionsModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HeaderMatches != nil {
		toSerialize["header_matches"] = o.HeaderMatches
	}
	if o.PathPartMatches != nil {
		toSerialize["path_part_matches"] = o.PathPartMatches
	}
	if o.PayloadMatches != nil {
		toSerialize["payload_matches"] = o.PayloadMatches
	}
	if o.QueryValMatches != nil {
		toSerialize["query_val_matches"] = o.QueryValMatches
	}
	if o.RequestContextMatches != nil {
		toSerialize["request_context_matches"] = o.RequestContextMatches
	}
	if o.SessionMetaMatches != nil {
		toSerialize["session_meta_matches"] = o.SessionMetaMatches
	}
	return json.Marshal(toSerialize)
}

type NullableRoutingTriggerOptionsModel struct {
	value *RoutingTriggerOptionsModel
	isSet bool
}

func (v NullableRoutingTriggerOptionsModel) Get() *RoutingTriggerOptionsModel {
	return v.value
}

func (v *NullableRoutingTriggerOptionsModel) Set(val *RoutingTriggerOptionsModel) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingTriggerOptionsModel) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingTriggerOptionsModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingTriggerOptionsModel(val *RoutingTriggerOptionsModel) *NullableRoutingTriggerOptionsModel {
	return &NullableRoutingTriggerOptionsModel{value: val, isSet: true}
}

func (v NullableRoutingTriggerOptionsModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingTriggerOptionsModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


